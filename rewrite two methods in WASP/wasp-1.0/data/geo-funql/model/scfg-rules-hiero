*n:CityName -> ({ abilene })({ ' abilene ' }) weight 0.0
*n:CityName -> ({ abingdon })({ ' abingdon ' }) weight 0.0
*n:CityName -> ({ akron })({ ' akron ' }) weight 0.0
*n:CityName -> ({ alameda })({ ' alameda ' }) weight 0.0
*n:CityName -> ({ albany })({ ' albany ' }) weight 0.0
*n:CityName -> ({ albuquerque })({ ' albuquerque ' }) weight 0.0
*n:CityName -> ({ alexandria })({ ' alexandria ' }) weight 0.0
*n:CityName -> ({ alhambra })({ ' alhambra ' }) weight 0.0
*n:CityName -> ({ allentown })({ ' allentown ' }) weight 0.0
*n:CityName -> ({ altoona })({ ' altoona ' }) weight 0.0
*n:CityName -> ({ amarillo })({ ' amarillo ' }) weight 0.0
*n:CityName -> ({ anaheim })({ ' anaheim ' }) weight 0.0
*n:CityName -> ({ anchorage })({ ' anchorage ' }) weight 0.0
*n:CityName -> ({ anderson })({ ' anderson ' }) weight 0.0
*n:CityName -> ({ ann arbor })({ ' ann arbor ' }) weight 0.0
*n:CityName -> ({ appleton })({ ' appleton ' }) weight 0.0
*n:CityName -> ({ arlington })({ ' arlington ' }) weight 0.0
*n:CityName -> ({ arlington heights })({ ' arlington heights ' }) weight 0.0
*n:CityName -> ({ arvada })({ ' arvada ' }) weight 0.0
*n:CityName -> ({ atlanta })({ ' atlanta ' }) weight 0.0
*n:CityName -> ({ aurora })({ ' aurora ' }) weight 0.0
*n:CityName -> ({ austin })({ ' austin ' }) weight 0.0
*n:CityName -> ({ bakersfield })({ ' bakersfield ' }) weight 0.0
*n:CityName -> ({ baltimore })({ ' baltimore ' }) weight 0.0
*n:CityName -> ({ baton rouge })({ ' baton rouge ' }) weight 0.0
*n:CityName -> ({ bayonne })({ ' bayonne ' }) weight 0.0
*n:CityName -> ({ beaumont })({ ' beaumont ' }) weight 0.0
*n:CityName -> ({ bellevue })({ ' bellevue ' }) weight 0.0
*n:CityName -> ({ berkeley })({ ' berkeley ' }) weight 0.0
*n:CityName -> ({ bethesda })({ ' bethesda ' }) weight 0.0
*n:CityName -> ({ bethlehem })({ ' bethlehem ' }) weight 0.0
*n:CityName -> ({ billings })({ ' billings ' }) weight 0.0
*n:CityName -> ({ birmingham })({ ' birmingham ' }) weight 0.0
*n:CityName -> ({ bloomington })({ ' bloomington ' }) weight 0.0
*n:CityName -> ({ boise })({ ' boise ' }) weight 0.0
*n:CityName -> ({ boston })({ ' boston ' }) weight 0.0
*n:CityName -> ({ boulder })({ ' boulder ' }) weight 0.0
*n:CityName -> ({ bridgeport })({ ' bridgeport ' }) weight 0.0
*n:CityName -> ({ bristol })({ ' bristol ' }) weight 0.0
*n:CityName -> ({ bristol township })({ ' bristol township ' }) weight 0.0
*n:CityName -> ({ brockton })({ ' brockton ' }) weight 0.0
*n:CityName -> ({ brownsville })({ ' brownsville ' }) weight 0.0
*n:CityName -> ({ buena park })({ ' buena park ' }) weight 0.0
*n:CityName -> ({ buffalo })({ ' buffalo ' }) weight 0.0
*n:CityName -> ({ burbank })({ ' burbank ' }) weight 0.0
*n:CityName -> ({ cambridge })({ ' cambridge ' }) weight 0.0
*n:CityName -> ({ camden })({ ' camden ' }) weight 0.0
*n:CityName -> ({ canton })({ ' canton ' }) weight 0.0
*n:CityName -> ({ carson })({ ' carson ' }) weight 0.0
*n:CityName -> ({ casper })({ ' casper ' }) weight 0.0
*n:CityName -> ({ cedar rapids })({ ' cedar rapids ' }) weight 0.0
*n:CityName -> ({ champaign })({ ' champaign ' }) weight 0.0
*n:CityName -> ({ charleston })({ ' charleston ' }) weight 0.0
*n:CityName -> ({ charlotte })({ ' charlotte ' }) weight 0.0
*n:CityName -> ({ chattanooga })({ ' chattanooga ' }) weight 0.0
*n:CityName -> ({ cheektowaga })({ ' cheektowaga ' }) weight 0.0
*n:CityName -> ({ cherry hill })({ ' cherry hill ' }) weight 0.0
*n:CityName -> ({ chesapeake })({ ' chesapeake ' }) weight 0.0
*n:CityName -> ({ chicago })({ ' chicago ' }) weight 0.0
*n:CityName -> ({ chula vista })({ ' chula vista ' }) weight 0.0
*n:CityName -> ({ cicero })({ ' cicero ' }) weight 0.0
*n:CityName -> ({ cincinnati })({ ' cincinnati ' }) weight 0.0
*n:CityName -> ({ citrus heights })({ ' citrus heights ' }) weight 0.0
*n:CityName -> ({ clearwater })({ ' clearwater ' }) weight 0.0
*n:CityName -> ({ cleveland })({ ' cleveland ' }) weight 0.0
*n:CityName -> ({ clifton })({ ' clifton ' }) weight 0.0
*n:CityName -> ({ clinton })({ ' clinton ' }) weight 0.0
*n:CityName -> ({ colorado springs })({ ' colorado springs ' }) weight 0.0
*n:CityName -> ({ columbia })({ ' columbia ' }) weight 0.0
*n:CityName -> ({ columbus })({ ' columbus ' }) weight 0.0
*n:CityName -> ({ compton })({ ' compton ' }) weight 0.0
*n:CityName -> ({ concord })({ ' concord ' }) weight 0.0
*n:CityName -> ({ corpus christi })({ ' corpus christi ' }) weight 0.0
*n:CityName -> ({ costa mesa })({ ' costa mesa ' }) weight 0.0
*n:CityName -> ({ cranston })({ ' cranston ' }) weight 0.0
*n:CityName -> ({ dallas })({ ' dallas ' }) weight 0.0
*n:CityName -> ({ daly city })({ ' daly city ' }) weight 0.0
*n:CityName -> ({ danbury })({ ' danbury ' }) weight 0.0
*n:CityName -> ({ davenport })({ ' davenport ' }) weight 0.0
*n:CityName -> ({ dayton })({ ' dayton ' }) weight 0.0
*n:CityName -> ({ dearborn })({ ' dearborn ' }) weight 0.0
*n:CityName -> ({ dearborn heights })({ ' dearborn heights ' }) weight 0.0
*n:CityName -> ({ decatur })({ ' decatur ' }) weight 0.0
*n:CityName -> ({ denver })({ ' denver ' }) weight 0.0
*n:CityName -> ({ des moines })({ ' des moines ' }) weight 0.0
*n:CityName -> ({ detroit })({ ' detroit ' }) weight 0.0
*n:CityName -> ({ dover })({ ' dover ' }) weight 0.0
*n:CityName -> ({ downey })({ ' downey ' }) weight 0.0
*n:CityName -> ({ dubuque })({ ' dubuque ' }) weight 0.0
*n:CityName -> ({ duluth })({ ' duluth ' }) weight 0.0
*n:CityName -> ({ dundalk })({ ' dundalk ' }) weight 0.0
*n:CityName -> ({ durham })({ ' durham ' }) weight 0.0
*n:CityName -> ({ east los angeles })({ ' east los angeles ' }) weight 0.0
*n:CityName -> ({ east orange })({ ' east orange ' }) weight 0.0
*n:CityName -> ({ edison })({ ' edison ' }) weight 0.0
*n:CityName -> ({ el cajon })({ ' el cajon ' }) weight 0.0
*n:CityName -> ({ el monte })({ ' el monte ' }) weight 0.0
*n:CityName -> ({ el paso })({ ' el paso ' }) weight 0.0
*n:CityName -> ({ elgin })({ ' elgin ' }) weight 0.0
*n:CityName -> ({ elizabeth })({ ' elizabeth ' }) weight 0.0
*n:CityName -> ({ elyria })({ ' elyria ' }) weight 0.0
*n:CityName -> ({ erie })({ ' erie ' }) weight 0.0
*n:CityName -> ({ escondido })({ ' escondido ' }) weight 0.0
*n:CityName -> ({ euclid })({ ' euclid ' }) weight 0.0
*n:CityName -> ({ eugene })({ ' eugene ' }) weight 0.0
*n:CityName -> ({ evanston })({ ' evanston ' }) weight 0.0
*n:CityName -> ({ evansville })({ ' evansville ' }) weight 0.0
*n:CityName -> ({ ewa })({ ' ewa ' }) weight 0.0
*n:CityName -> ({ fairfield })({ ' fairfield ' }) weight 0.0
*n:CityName -> ({ fall river })({ ' fall river ' }) weight 0.0
*n:CityName -> ({ fargo })({ ' fargo ' }) weight 0.0
*n:CityName -> ({ farmington hills })({ ' farmington hills ' }) weight 0.0
*n:CityName -> ({ fayetteville })({ ' fayetteville ' }) weight 0.0
*n:CityName -> ({ flint })({ ' flint ' }) weight 0.0
*n:CityName -> ({ fort collins })({ ' fort collins ' }) weight 0.0
*n:CityName -> ({ fort lauderdale })({ ' fort lauderdale ' }) weight 0.0
*n:CityName -> ({ fort smith })({ ' fort smith ' }) weight 0.0
*n:CityName -> ({ fort wayne })({ ' fort wayne ' }) weight 0.0
*n:CityName -> ({ fort worth })({ ' fort worth ' }) weight 0.0
*n:CityName -> ({ framingham })({ ' framingham ' }) weight 0.0
*n:CityName -> ({ fremont })({ ' fremont ' }) weight 0.0
*n:CityName -> ({ fresno })({ ' fresno ' }) weight 0.0
*n:CityName -> ({ fullerton })({ ' fullerton ' }) weight 0.0
*n:CityName -> ({ gainesville })({ ' gainesville ' }) weight 0.0
*n:CityName -> ({ garden grove })({ ' garden grove ' }) weight 0.0
*n:CityName -> ({ garland })({ ' garland ' }) weight 0.0
*n:CityName -> ({ gary })({ ' gary ' }) weight 0.0
*n:CityName -> ({ glendale })({ ' glendale ' }) weight 0.0
*n:CityName -> ({ grand prairie })({ ' grand prairie ' }) weight 0.0
*n:CityName -> ({ grand rapids })({ ' grand rapids ' }) weight 0.0
*n:CityName -> ({ great falls })({ ' great falls ' }) weight 0.0
*n:CityName -> ({ green bay })({ ' green bay ' }) weight 0.0
*n:CityName -> ({ greensboro })({ ' greensboro ' }) weight 0.0
*n:CityName -> ({ greenville })({ ' greenville ' }) weight 0.0
*n:CityName -> ({ greenwich })({ ' greenwich ' }) weight 0.0
*n:CityName -> ({ hamilton })({ ' hamilton ' }) weight 0.0
*n:CityName -> ({ hammond })({ ' hammond ' }) weight 0.0
*n:CityName -> ({ hampton })({ ' hampton ' }) weight 0.0
*n:CityName -> ({ hartford })({ ' hartford ' }) weight 0.0
*n:CityName -> ({ hayward })({ ' hayward ' }) weight 0.0
*n:CityName -> ({ high point })({ ' high point ' }) weight 0.0
*n:CityName -> ({ hollywood })({ ' hollywood ' }) weight 0.0
*n:CityName -> ({ honolulu })({ ' honolulu ' }) weight 0.0
*n:CityName -> ({ houston })({ ' houston ' }) weight 0.0
*n:CityName -> ({ huntington })({ ' huntington ' }) weight 0.0
*n:CityName -> ({ huntington beach })({ ' huntington beach ' }) weight 0.0
*n:CityName -> ({ huntsville })({ ' huntsville ' }) weight 0.0
*n:CityName -> ({ independence })({ ' independence ' }) weight 0.0
*n:CityName -> ({ indianapolis })({ ' indianapolis ' }) weight 0.0
*n:CityName -> ({ inglewood })({ ' inglewood ' }) weight 0.0
*n:CityName -> ({ irondequoit })({ ' irondequoit ' }) weight 0.0
*n:CityName -> ({ irvine })({ ' irvine ' }) weight 0.0
*n:CityName -> ({ irving })({ ' irving ' }) weight 0.0
*n:CityName -> ({ irvington })({ ' irvington ' }) weight 0.0
*n:CityName -> ({ jackson })({ ' jackson ' }) weight 0.0
*n:CityName -> ({ jacksonville })({ ' jacksonville ' }) weight 0.0
*n:CityName -> ({ jersey city })({ ' jersey city ' }) weight 0.0
*n:CityName -> ({ joliet })({ ' joliet ' }) weight 0.0
*n:CityName -> ({ kalamazoo })({ ' kalamazoo ' }) weight 0.0
*n:CityName -> ({ kansas city })({ ' kansas city ' }) weight 0.0
*n:CityName -> ({ kendall })({ ' kendall ' }) weight 0.0
*n:CityName -> ({ kenner })({ ' kenner ' }) weight 0.0
*n:CityName -> ({ kenosha })({ ' kenosha ' }) weight 0.0
*n:CityName -> ({ kettering })({ ' kettering ' }) weight 0.0
*n:CityName -> ({ knoxville })({ ' knoxville ' }) weight 0.0
*n:CityName -> ({ koolaupoko })({ ' koolaupoko ' }) weight 0.0
*n:CityName -> ({ lafayette })({ ' lafayette ' }) weight 0.0
*n:CityName -> ({ lake charles })({ ' lake charles ' }) weight 0.0
*n:CityName -> ({ lakewood })({ ' lakewood ' }) weight 0.0
*n:CityName -> ({ lansing })({ ' lansing ' }) weight 0.0
*n:CityName -> ({ laredo })({ ' laredo ' }) weight 0.0
*n:CityName -> ({ largo })({ ' largo ' }) weight 0.0
*n:CityName -> ({ las vegas })({ ' las vegas ' }) weight 0.0
*n:CityName -> ({ lawrence })({ ' lawrence ' }) weight 0.0
*n:CityName -> ({ lawton })({ ' lawton ' }) weight 0.0
*n:CityName -> ({ levittown })({ ' levittown ' }) weight 0.0
*n:CityName -> ({ lexington })({ ' lexington ' }) weight 0.0
*n:CityName -> ({ lincoln })({ ' lincoln ' }) weight 0.0
*n:CityName -> ({ little rock })({ ' little rock ' }) weight 0.0
*n:CityName -> ({ livonia })({ ' livonia ' }) weight 0.0
*n:CityName -> ({ long beach })({ ' long beach ' }) weight 0.0
*n:CityName -> ({ longview })({ ' longview ' }) weight 0.0
*n:CityName -> ({ lorain })({ ' lorain ' }) weight 0.0
*n:CityName -> ({ los angeles })({ ' los angeles ' }) weight 0.0
*n:CityName -> ({ louisville })({ ' louisville ' }) weight 0.0
*n:CityName -> ({ lowell })({ ' lowell ' }) weight 0.0
*n:CityName -> ({ lower merion })({ ' lower merion ' }) weight 0.0
*n:CityName -> ({ lubbock })({ ' lubbock ' }) weight 0.0
*n:CityName -> ({ lynchburg })({ ' lynchburg ' }) weight 0.0
*n:CityName -> ({ lynn })({ ' lynn ' }) weight 0.0
*n:CityName -> ({ macon })({ ' macon ' }) weight 0.0
*n:CityName -> ({ madison })({ ' madison ' }) weight 0.0
*n:CityName -> ({ manchester })({ ' manchester ' }) weight 0.0
*n:CityName -> ({ mcallen })({ ' mcallen ' }) weight 0.0
*n:CityName -> ({ medford })({ ' medford ' }) weight 0.0
*n:CityName -> ({ memphis })({ ' memphis ' }) weight 0.0
*n:CityName -> ({ meriden })({ ' meriden ' }) weight 0.0
*n:CityName -> ({ mesa })({ ' mesa ' }) weight 0.0
*n:CityName -> ({ mesquite })({ ' mesquite ' }) weight 0.0
*n:CityName -> ({ metairie })({ ' metairie ' }) weight 0.0
*n:CityName -> ({ miami })({ ' miami ' }) weight 0.0
*n:CityName -> ({ miami beach })({ ' miami beach ' }) weight 0.0
*n:CityName -> ({ middletown })({ ' middletown ' }) weight 0.0
*n:CityName -> ({ midland })({ ' midland ' }) weight 0.0
*n:CityName -> ({ milwaukee })({ ' milwaukee ' }) weight 0.0
*n:CityName -> ({ minneapolis })({ ' minneapolis ' }) weight 0.0
*n:CityName -> ({ mobile })({ ' mobile ' }) weight 0.0
*n:CityName -> ({ modesto })({ ' modesto ' }) weight 0.0
*n:CityName -> ({ monroe })({ ' monroe ' }) weight 0.0
*n:CityName -> ({ montgomery })({ ' montgomery ' }) weight 0.0
*n:CityName -> ({ mount vernon })({ ' mount vernon ' }) weight 0.0
*n:CityName -> ({ mountain view })({ ' mountain view ' }) weight 0.0
*n:CityName -> ({ muncie })({ ' muncie ' }) weight 0.0
*n:CityName -> ({ nashua })({ ' nashua ' }) weight 0.0
*n:CityName -> ({ nashville })({ ' nashville ' }) weight 0.0
*n:CityName -> ({ new bedford })({ ' new bedford ' }) weight 0.0
*n:CityName -> ({ new britain })({ ' new britain ' }) weight 0.0
*n:CityName -> ({ new haven })({ ' new haven ' }) weight 0.0
*n:CityName -> ({ new orleans })({ ' new orleans ' }) weight 0.0
*n:CityName -> ({ new rochelle })({ ' new rochelle ' }) weight 0.0
*n:CityName -> ({ new york })({ ' new york ' }) weight 0.0
*n:CityName -> ({ newark })({ ' newark ' }) weight 0.0
*n:CityName -> ({ newport beach })({ ' newport beach ' }) weight 0.0
*n:CityName -> ({ newport news })({ ' newport news ' }) weight 0.0
*n:CityName -> ({ newton })({ ' newton ' }) weight 0.0
*n:CityName -> ({ niagara falls })({ ' niagara falls ' }) weight 0.0
*n:CityName -> ({ norfolk })({ ' norfolk ' }) weight 0.0
*n:CityName -> ({ norman })({ ' norman ' }) weight 0.0
*n:CityName -> ({ north charleston })({ ' north charleston ' }) weight 0.0
*n:CityName -> ({ north little rock })({ ' north little rock ' }) weight 0.0
*n:CityName -> ({ norwalk })({ ' norwalk ' }) weight 0.0
*n:CityName -> ({ oak lawn })({ ' oak lawn ' }) weight 0.0
*n:CityName -> ({ oakland })({ ' oakland ' }) weight 0.0
*n:CityName -> ({ oceanside })({ ' oceanside ' }) weight 0.0
*n:CityName -> ({ odessa })({ ' odessa ' }) weight 0.0
*n:CityName -> ({ ogden })({ ' ogden ' }) weight 0.0
*n:CityName -> ({ oklahoma city })({ ' oklahoma city ' }) weight 0.0
*n:CityName -> ({ omaha })({ ' omaha ' }) weight 0.0
*n:CityName -> ({ ontario })({ ' ontario ' }) weight 0.0
*n:CityName -> ({ orange })({ ' orange ' }) weight 0.0
*n:CityName -> ({ orlando })({ ' orlando ' }) weight 0.0
*n:CityName -> ({ overland park })({ ' overland park ' }) weight 0.0
*n:CityName -> ({ oxnard })({ ' oxnard ' }) weight 0.0
*n:CityName -> ({ parma })({ ' parma ' }) weight 0.0
*n:CityName -> ({ pasadena })({ ' pasadena ' }) weight 0.0
*n:CityName -> ({ paterson })({ ' paterson ' }) weight 0.0
*n:CityName -> ({ pawtucket })({ ' pawtucket ' }) weight 0.0
*n:CityName -> ({ penn hills })({ ' penn hills ' }) weight 0.0
*n:CityName -> ({ pensacola })({ ' pensacola ' }) weight 0.0
*n:CityName -> ({ peoria })({ ' peoria ' }) weight 0.0
*n:CityName -> ({ philadelphia })({ ' philadelphia ' }) weight 0.0
*n:CityName -> ({ phoenix })({ ' phoenix ' }) weight 0.0
*n:CityName -> ({ pittsburgh })({ ' pittsburgh ' }) weight 0.0
*n:CityName -> ({ plano })({ ' plano ' }) weight 0.0
*n:CityName -> ({ pomona })({ ' pomona ' }) weight 0.0
*n:CityName -> ({ pontiac })({ ' pontiac ' }) weight 0.0
*n:CityName -> ({ port arthur })({ ' port arthur ' }) weight 0.0
*n:CityName -> ({ portland })({ ' portland ' }) weight 0.0
*n:CityName -> ({ portsmouth })({ ' portsmouth ' }) weight 0.0
*n:CityName -> ({ providence })({ ' providence ' }) weight 0.0
*n:CityName -> ({ provo })({ ' provo ' }) weight 0.0
*n:CityName -> ({ pueblo })({ ' pueblo ' }) weight 0.0
*n:CityName -> ({ quincy })({ ' quincy ' }) weight 0.0
*n:CityName -> ({ racine })({ ' racine ' }) weight 0.0
*n:CityName -> ({ raleigh })({ ' raleigh ' }) weight 0.0
*n:CityName -> ({ reading })({ ' reading ' }) weight 0.0
*n:CityName -> ({ redford })({ ' redford ' }) weight 0.0
*n:CityName -> ({ redondo beach })({ ' redondo beach ' }) weight 0.0
*n:CityName -> ({ reno })({ ' reno ' }) weight 0.0
*n:CityName -> ({ richardson })({ ' richardson ' }) weight 0.0
*n:CityName -> ({ richmond })({ ' richmond ' }) weight 0.0
*n:CityName -> ({ riverside })({ ' riverside ' }) weight 0.0
*n:CityName -> ({ roanoke })({ ' roanoke ' }) weight 0.0
*n:CityName -> ({ rochester })({ ' rochester ' }) weight 0.0
*n:CityName -> ({ rockford })({ ' rockford ' }) weight 0.0
*n:CityName -> ({ royal oak })({ ' royal oak ' }) weight 0.0
*n:CityName -> ({ sacramento })({ ' sacramento ' }) weight 0.0
*n:CityName -> ({ saginaw })({ ' saginaw ' }) weight 0.0
*n:CityName -> ({ salem })({ ' salem ' }) weight 0.0
*n:CityName -> ({ salinas })({ ' salinas ' }) weight 0.0
*n:CityName -> ({ salt lake city })({ ' salt lake city ' }) weight 0.0
*n:CityName -> ({ san angelo })({ ' san angelo ' }) weight 0.0
*n:CityName -> ({ san antonio })({ ' san antonio ' }) weight 0.0
*n:CityName -> ({ san bernardino })({ ' san bernardino ' }) weight 0.0
*n:CityName -> ({ san diego })({ ' san diego ' }) weight 0.0
*n:CityName -> ({ san francisco })({ ' san francisco ' }) weight 0.0
*n:CityName -> ({ san jose })({ ' san jose ' }) weight 0.0
*n:CityName -> ({ san leandro })({ ' san leandro ' }) weight 0.0
*n:CityName -> ({ san mateo })({ ' san mateo ' }) weight 0.0
*n:CityName -> ({ santa ana })({ ' santa ana ' }) weight 0.0
*n:CityName -> ({ santa barbara })({ ' santa barbara ' }) weight 0.0
*n:CityName -> ({ santa clara })({ ' santa clara ' }) weight 0.0
*n:CityName -> ({ santa monica })({ ' santa monica ' }) weight 0.0
*n:CityName -> ({ santa rosa })({ ' santa rosa ' }) weight 0.0
*n:CityName -> ({ savannah })({ ' savannah ' }) weight 0.0
*n:CityName -> ({ schenectady })({ ' schenectady ' }) weight 0.0
*n:CityName -> ({ scotts valley })({ ' scotts valley ' }) weight 0.0
*n:CityName -> ({ scottsdale })({ ' scottsdale ' }) weight 0.0
*n:CityName -> ({ scranton })({ ' scranton ' }) weight 0.0
*n:CityName -> ({ seattle })({ ' seattle ' }) weight 0.0
*n:CityName -> ({ shreveport })({ ' shreveport ' }) weight 0.0
*n:CityName -> ({ silver spring })({ ' silver spring ' }) weight 0.0
*n:CityName -> ({ simi valley })({ ' simi valley ' }) weight 0.0
*n:CityName -> ({ sioux city })({ ' sioux city ' }) weight 0.0
*n:CityName -> ({ sioux falls })({ ' sioux falls ' }) weight 0.0
*n:CityName -> ({ skokie })({ ' skokie ' }) weight 0.0
*n:CityName -> ({ somerville })({ ' somerville ' }) weight 0.0
*n:CityName -> ({ south bend })({ ' south bend ' }) weight 0.0
*n:CityName -> ({ south gate })({ ' south gate ' }) weight 0.0
*n:CityName -> ({ southfield })({ ' southfield ' }) weight 0.0
*n:CityName -> ({ spokane })({ ' spokane ' }) weight 0.0
*n:CityName -> ({ springfield })({ ' springfield ' }) weight 0.0
*n:CityName -> ({ st. clair shores })({ ' st. clair shores ' }) weight 0.0
*n:CityName -> ({ st. joseph })({ ' st. joseph ' }) weight 0.0
*n:CityName -> ({ st. louis })({ ' st. louis ' }) weight 0.0
*n:CityName -> ({ st. paul })({ ' st. paul ' }) weight 0.0
*n:CityName -> ({ st. petersburg })({ ' st. petersburg ' }) weight 0.0
*n:CityName -> ({ stamford })({ ' stamford ' }) weight 0.0
*n:CityName -> ({ sterling heights })({ ' sterling heights ' }) weight 0.0
*n:CityName -> ({ stockton })({ ' stockton ' }) weight 0.0
*n:CityName -> ({ sunnyvale })({ ' sunnyvale ' }) weight 0.0
*n:CityName -> ({ syracuse })({ ' syracuse ' }) weight 0.0
*n:CityName -> ({ tacoma })({ ' tacoma ' }) weight 0.0
*n:CityName -> ({ tallahassee })({ ' tallahassee ' }) weight 0.0
*n:CityName -> ({ tampa })({ ' tampa ' }) weight 0.0
*n:CityName -> ({ taylor })({ ' taylor ' }) weight 0.0
*n:CityName -> ({ tempe })({ ' tempe ' }) weight 0.0
*n:CityName -> ({ terre haute })({ ' terre haute ' }) weight 0.0
*n:CityName -> ({ thousand oaks })({ ' thousand oaks ' }) weight 0.0
*n:CityName -> ({ toledo })({ ' toledo ' }) weight 0.0
*n:CityName -> ({ topeka })({ ' topeka ' }) weight 0.0
*n:CityName -> ({ torrance })({ ' torrance ' }) weight 0.0
*n:CityName -> ({ trenton })({ ' trenton ' }) weight 0.0
*n:CityName -> ({ troy })({ ' troy ' }) weight 0.0
*n:CityName -> ({ tucson })({ ' tucson ' }) weight 0.0
*n:CityName -> ({ tulsa })({ ' tulsa ' }) weight 0.0
*n:CityName -> ({ tuscaloosa })({ ' tuscaloosa ' }) weight 0.0
*n:CityName -> ({ tyler })({ ' tyler ' }) weight 0.0
*n:CityName -> ({ upper darby })({ ' upper darby ' }) weight 0.0
*n:CityName -> ({ utica })({ ' utica ' }) weight 0.0
*n:CityName -> ({ vallejo })({ ' vallejo ' }) weight 0.0
*n:CityName -> ({ ventura })({ ' ventura ' }) weight 0.0
*n:CityName -> ({ virginia beach })({ ' virginia beach ' }) weight 0.0
*n:CityName -> ({ waco })({ ' waco ' }) weight 0.0
*n:CityName -> ({ waltham })({ ' waltham ' }) weight 0.0
*n:CityName -> ({ warren })({ ' warren ' }) weight 0.0
*n:CityName -> ({ warwick })({ ' warwick ' }) weight 0.0
*n:CityName -> ({ washington })({ ' washington ' }) weight 0.0
*n:CityName -> ({ waterbury })({ ' waterbury ' }) weight 0.0
*n:CityName -> ({ waterford })({ ' waterford ' }) weight 0.0
*n:CityName -> ({ waterloo })({ ' waterloo ' }) weight 0.0
*n:CityName -> ({ waukegan })({ ' waukegan ' }) weight 0.0
*n:CityName -> ({ west allis })({ ' west allis ' }) weight 0.0
*n:CityName -> ({ west covina })({ ' west covina ' }) weight 0.0
*n:CityName -> ({ west hartford })({ ' west hartford ' }) weight 0.0
*n:CityName -> ({ west palm beach })({ ' west palm beach ' }) weight 0.0
*n:CityName -> ({ west valley })({ ' west valley ' }) weight 0.0
*n:CityName -> ({ westland })({ ' westland ' }) weight 0.0
*n:CityName -> ({ westminster })({ ' westminster ' }) weight 0.0
*n:CityName -> ({ whittier })({ ' whittier ' }) weight 0.0
*n:CityName -> ({ wichita })({ ' wichita ' }) weight 0.0
*n:CityName -> ({ wichita falls })({ ' wichita falls ' }) weight 0.0
*n:CityName -> ({ wilmington })({ ' wilmington ' }) weight 0.0
*n:CityName -> ({ winston-salem })({ ' winston-salem ' }) weight 0.0
*n:CityName -> ({ woodbridge })({ ' woodbridge ' }) weight 0.0
*n:CityName -> ({ worcester })({ ' worcester ' }) weight 0.0
*n:CityName -> ({ wyoming })({ ' wyoming ' }) weight 0.0
*n:CityName -> ({ yonkers })({ ' yonkers ' }) weight 0.0
*n:CityName -> ({ youngstown })({ ' youngstown ' }) weight 0.0
*n:CountryName -> ({ usa })({ ' usa ' }) weight 0.0
*n:PlaceName -> ({ alverstone })({ ' alverstone ' }) weight 0.0
*n:PlaceName -> ({ antero })({ ' antero ' }) weight 0.0
*n:PlaceName -> ({ arkansas river })({ ' arkansas river ' }) weight 0.0
*n:PlaceName -> ({ atlantic ocean })({ ' atlantic ocean ' }) weight 0.0
*n:PlaceName -> ({ backbone mountain })({ ' backbone mountain ' }) weight 0.0
*n:PlaceName -> ({ bear })({ ' bear ' }) weight 0.0
*n:PlaceName -> ({ beaver dam creek })({ ' beaver dam creek ' }) weight 0.0
*n:PlaceName -> ({ becharof })({ ' becharof ' }) weight 0.0
*n:PlaceName -> ({ belford })({ ' belford ' }) weight 0.0
*n:PlaceName -> ({ belle fourche river })({ ' belle fourche river ' }) weight 0.0
*n:PlaceName -> ({ bianca })({ ' bianca ' }) weight 0.0
*n:PlaceName -> ({ big stone lake })({ ' big stone lake ' }) weight 0.0
*n:PlaceName -> ({ black mesa })({ ' black mesa ' }) weight 0.0
*n:PlaceName -> ({ black mountain })({ ' black mountain ' }) weight 0.0
*n:PlaceName -> ({ blackburn })({ ' blackburn ' }) weight 0.0
*n:PlaceName -> ({ bona })({ ' bona ' }) weight 0.0
*n:PlaceName -> ({ borah peak })({ ' borah peak ' }) weight 0.0
*n:PlaceName -> ({ boundary peak })({ ' boundary peak ' }) weight 0.0
*n:PlaceName -> ({ brasstown bald })({ ' brasstown bald ' }) weight 0.0
*n:PlaceName -> ({ bross })({ ' bross ' }) weight 0.0
*n:PlaceName -> ({ browne tower })({ ' browne tower ' }) weight 0.0
*n:PlaceName -> ({ campbell hill })({ ' campbell hill ' }) weight 0.0
*n:PlaceName -> ({ castle })({ ' castle ' }) weight 0.0
*n:PlaceName -> ({ centerville })({ ' centerville ' }) weight 0.0
*n:PlaceName -> ({ champlain })({ ' champlain ' }) weight 0.0
*n:PlaceName -> ({ charles mound })({ ' charles mound ' }) weight 0.0
*n:PlaceName -> ({ cheaha mountain })({ ' cheaha mountain ' }) weight 0.0
*n:PlaceName -> ({ churchill })({ ' churchill ' }) weight 0.0
*n:PlaceName -> ({ clingmans dome })({ ' clingmans dome ' }) weight 0.0
*n:PlaceName -> ({ colorado river })({ ' colorado river ' }) weight 0.0
*n:PlaceName -> ({ crestone })({ ' crestone ' }) weight 0.0
*n:PlaceName -> ({ crestone needle })({ ' crestone needle ' }) weight 0.0
*n:PlaceName -> ({ death valley })({ ' death valley ' }) weight 0.0
*n:PlaceName -> ({ delaware river })({ ' delaware river ' }) weight 0.0
*n:PlaceName -> ({ driskill mountain })({ ' driskill mountain ' }) weight 0.0
*n:PlaceName -> ({ eagle mountain })({ ' eagle mountain ' }) weight 0.0
*n:PlaceName -> ({ east buttress })({ ' east buttress ' }) weight 0.0
*n:PlaceName -> ({ el diente })({ ' el diente ' }) weight 0.0
*n:PlaceName -> ({ elbert })({ ' elbert ' }) weight 0.0
*n:PlaceName -> ({ erie })({ ' erie ' }) weight 0.0
*n:PlaceName -> ({ evans })({ ' evans ' }) weight 0.0
*n:PlaceName -> ({ fairweather })({ ' fairweather ' }) weight 0.0
*n:PlaceName -> ({ flathead })({ ' flathead ' }) weight 0.0
*n:PlaceName -> ({ foraker })({ ' foraker ' }) weight 0.0
*n:PlaceName -> ({ franklin township })({ ' franklin township ' }) weight 0.0
*n:PlaceName -> ({ gannett peak })({ ' gannett peak ' }) weight 0.0
*n:PlaceName -> ({ granite peak })({ ' granite peak ' }) weight 0.0
*n:PlaceName -> ({ grays })({ ' grays ' }) weight 0.0
*n:PlaceName -> ({ great salt lake })({ ' great salt lake ' }) weight 0.0
*n:PlaceName -> ({ guadalupe peak })({ ' guadalupe peak ' }) weight 0.0
*n:PlaceName -> ({ gulf of mexico })({ ' gulf of mexico ' }) weight 0.0
*n:PlaceName -> ({ harney peak })({ ' harney peak ' }) weight 0.0
*n:PlaceName -> ({ harvard })({ ' harvard ' }) weight 0.0
*n:PlaceName -> ({ high point })({ ' high point ' }) weight 0.0
*n:PlaceName -> ({ hubbard })({ ' hubbard ' }) weight 0.0
*n:PlaceName -> ({ humphreys peak })({ ' humphreys peak ' }) weight 0.0
*n:PlaceName -> ({ hunter })({ ' hunter ' }) weight 0.0
*n:PlaceName -> ({ huron })({ ' huron ' }) weight 0.0
*n:PlaceName -> ({ iliamna })({ ' iliamna ' }) weight 0.0
*n:PlaceName -> ({ jerimoth hill })({ ' jerimoth hill ' }) weight 0.0
*n:PlaceName -> ({ johnson township })({ ' johnson township ' }) weight 0.0
*n:PlaceName -> ({ kennedy })({ ' kennedy ' }) weight 0.0
*n:PlaceName -> ({ kings peak })({ ' kings peak ' }) weight 0.0
*n:PlaceName -> ({ kit carson })({ ' kit carson ' }) weight 0.0
*n:PlaceName -> ({ kootenai river })({ ' kootenai river ' }) weight 0.0
*n:PlaceName -> ({ la plata })({ ' la plata ' }) weight 0.0
*n:PlaceName -> ({ lake champlain })({ ' lake champlain ' }) weight 0.0
*n:PlaceName -> ({ lake erie })({ ' lake erie ' }) weight 0.0
*n:PlaceName -> ({ lake michigan })({ ' lake michigan ' }) weight 0.0
*n:PlaceName -> ({ lake of the woods })({ ' lake of the woods ' }) weight 0.0
*n:PlaceName -> ({ lake superior })({ ' lake superior ' }) weight 0.0
*n:PlaceName -> ({ lincoln })({ ' lincoln ' }) weight 0.0
*n:PlaceName -> ({ little river })({ ' little river ' }) weight 0.0
*n:PlaceName -> ({ long island sound })({ ' long island sound ' }) weight 0.0
*n:PlaceName -> ({ longs })({ ' longs ' }) weight 0.0
*n:PlaceName -> ({ magazine mountain })({ ' magazine mountain ' }) weight 0.0
*n:PlaceName -> ({ maroon })({ ' maroon ' }) weight 0.0
*n:PlaceName -> ({ massive })({ ' massive ' }) weight 0.0
*n:PlaceName -> ({ mauna kea })({ ' mauna kea ' }) weight 0.0
*n:PlaceName -> ({ mckinley })({ ' mckinley ' }) weight 0.0
*n:PlaceName -> ({ michigan })({ ' michigan ' }) weight 0.0
*n:PlaceName -> ({ mille lacs })({ ' mille lacs ' }) weight 0.0
*n:PlaceName -> ({ mississippi river })({ ' mississippi river ' }) weight 0.0
*n:PlaceName -> ({ mount curwood })({ ' mount curwood ' }) weight 0.0
*n:PlaceName -> ({ mount davis })({ ' mount davis ' }) weight 0.0
*n:PlaceName -> ({ mount elbert })({ ' mount elbert ' }) weight 0.0
*n:PlaceName -> ({ mount frissell })({ ' mount frissell ' }) weight 0.0
*n:PlaceName -> ({ mount greylock })({ ' mount greylock ' }) weight 0.0
*n:PlaceName -> ({ mount hood })({ ' mount hood ' }) weight 0.0
*n:PlaceName -> ({ mount katahdin })({ ' mount katahdin ' }) weight 0.0
*n:PlaceName -> ({ mount mansfield })({ ' mount mansfield ' }) weight 0.0
*n:PlaceName -> ({ mount marcy })({ ' mount marcy ' }) weight 0.0
*n:PlaceName -> ({ mount mckinley })({ ' mount mckinley ' }) weight 0.0
*n:PlaceName -> ({ mount mitchell })({ ' mount mitchell ' }) weight 0.0
*n:PlaceName -> ({ mount rainier })({ ' mount rainier ' }) weight 0.0
*n:PlaceName -> ({ mount rogers })({ ' mount rogers ' }) weight 0.0
*n:PlaceName -> ({ mount sunflower })({ ' mount sunflower ' }) weight 0.0
*n:PlaceName -> ({ mount washington })({ ' mount washington ' }) weight 0.0
*n:PlaceName -> ({ mount whitney })({ ' mount whitney ' }) weight 0.0
*n:PlaceName -> ({ naknek })({ ' naknek ' }) weight 0.0
*n:PlaceName -> ({ new orleans })({ ' new orleans ' }) weight 0.0
*n:PlaceName -> ({ north palisade })({ ' north palisade ' }) weight 0.0
*n:PlaceName -> ({ ocheyedan mound })({ ' ocheyedan mound ' }) weight 0.0
*n:PlaceName -> ({ ohio river })({ ' ohio river ' }) weight 0.0
*n:PlaceName -> ({ okeechobee })({ ' okeechobee ' }) weight 0.0
*n:PlaceName -> ({ ontario })({ ' ontario ' }) weight 0.0
*n:PlaceName -> ({ ouachita river })({ ' ouachita river ' }) weight 0.0
*n:PlaceName -> ({ pacific ocean })({ ' pacific ocean ' }) weight 0.0
*n:PlaceName -> ({ pontchartrain })({ ' pontchartrain ' }) weight 0.0
*n:PlaceName -> ({ potomac river })({ ' potomac river ' }) weight 0.0
*n:PlaceName -> ({ princeton })({ ' princeton ' }) weight 0.0
*n:PlaceName -> ({ quandary })({ ' quandary ' }) weight 0.0
*n:PlaceName -> ({ rainier })({ ' rainier ' }) weight 0.0
*n:PlaceName -> ({ rainy })({ ' rainy ' }) weight 0.0
*n:PlaceName -> ({ red })({ ' red ' }) weight 0.0
*n:PlaceName -> ({ red bluff reservoir })({ ' red bluff reservoir ' }) weight 0.0
*n:PlaceName -> ({ red river })({ ' red river ' }) weight 0.0
*n:PlaceName -> ({ salton sea })({ ' salton sea ' }) weight 0.0
*n:PlaceName -> ({ sanford })({ ' sanford ' }) weight 0.0
*n:PlaceName -> ({ sassafras mountain })({ ' sassafras mountain ' }) weight 0.0
*n:PlaceName -> ({ shasta })({ ' shasta ' }) weight 0.0
*n:PlaceName -> ({ shavano })({ ' shavano ' }) weight 0.0
*n:PlaceName -> ({ sill })({ ' sill ' }) weight 0.0
*n:PlaceName -> ({ snake river })({ ' snake river ' }) weight 0.0
*n:PlaceName -> ({ south buttress })({ ' south buttress ' }) weight 0.0
*n:PlaceName -> ({ southeast corner })({ ' southeast corner ' }) weight 0.0
*n:PlaceName -> ({ spruce knob })({ ' spruce knob ' }) weight 0.0
*n:PlaceName -> ({ st. clair })({ ' st. clair ' }) weight 0.0
*n:PlaceName -> ({ st. elias })({ ' st. elias ' }) weight 0.0
*n:PlaceName -> ({ st. francis river })({ ' st. francis river ' }) weight 0.0
*n:PlaceName -> ({ superior })({ ' superior ' }) weight 0.0
*n:PlaceName -> ({ tahoe })({ ' tahoe ' }) weight 0.0
*n:PlaceName -> ({ taum sauk mountain })({ ' taum sauk mountain ' }) weight 0.0
*n:PlaceName -> ({ tenleytown })({ ' tenleytown ' }) weight 0.0
*n:PlaceName -> ({ teshekpuk })({ ' teshekpuk ' }) weight 0.0
*n:PlaceName -> ({ timms hill })({ ' timms hill ' }) weight 0.0
*n:PlaceName -> ({ torreys })({ ' torreys ' }) weight 0.0
*n:PlaceName -> ({ uncompahgre })({ ' uncompahgre ' }) weight 0.0
*n:PlaceName -> ({ vancouver })({ ' vancouver ' }) weight 0.0
*n:PlaceName -> ({ verdigris river })({ ' verdigris river ' }) weight 0.0
*n:PlaceName -> ({ walton county })({ ' walton county ' }) weight 0.0
*n:PlaceName -> ({ wheeler peak })({ ' wheeler peak ' }) weight 0.0
*n:PlaceName -> ({ white })({ ' white ' }) weight 0.0
*n:PlaceName -> ({ white butte })({ ' white butte ' }) weight 0.0
*n:PlaceName -> ({ whitney })({ ' whitney ' }) weight 0.0
*n:PlaceName -> ({ williamson })({ ' williamson ' }) weight 0.0
*n:PlaceName -> ({ wilson })({ ' wilson ' }) weight 0.0
*n:PlaceName -> ({ winnebago })({ ' winnebago ' }) weight 0.0
*n:PlaceName -> ({ woodall mountain })({ ' woodall mountain ' }) weight 0.0
*n:PlaceName -> ({ wrangell })({ ' wrangell ' }) weight 0.0
*n:PlaceName -> ({ yale })({ ' yale ' }) weight 0.0
*n:RiverName -> ({ allegheny })({ ' allegheny ' }) weight 0.0
*n:RiverName -> ({ arkansas })({ ' arkansas ' }) weight 0.0
*n:RiverName -> ({ bighorn })({ ' bighorn ' }) weight 0.0
*n:RiverName -> ({ canadian })({ ' canadian ' }) weight 0.0
*n:RiverName -> ({ chattahoochee })({ ' chattahoochee ' }) weight 0.0
*n:RiverName -> ({ cheyenne })({ ' cheyenne ' }) weight 0.0
*n:RiverName -> ({ cimarron })({ ' cimarron ' }) weight 0.0
*n:RiverName -> ({ clark fork })({ ' clark fork ' }) weight 0.0
*n:RiverName -> ({ colorado })({ ' colorado ' }) weight 0.0
*n:RiverName -> ({ columbia })({ ' columbia ' }) weight 0.0
*n:RiverName -> ({ connecticut })({ ' connecticut ' }) weight 0.0
*n:RiverName -> ({ cumberland })({ ' cumberland ' }) weight 0.0
*n:RiverName -> ({ dakota })({ ' dakota ' }) weight 0.0
*n:RiverName -> ({ delaware })({ ' delaware ' }) weight 0.0
*n:RiverName -> ({ gila })({ ' gila ' }) weight 0.0
*n:RiverName -> ({ green })({ ' green ' }) weight 0.0
*n:RiverName -> ({ hudson })({ ' hudson ' }) weight 0.0
*n:RiverName -> ({ little missouri })({ ' little missouri ' }) weight 0.0
*n:RiverName -> ({ mississippi })({ ' mississippi ' }) weight 0.0
*n:RiverName -> ({ missouri })({ ' missouri ' }) weight 0.0
*n:RiverName -> ({ neosho })({ ' neosho ' }) weight 0.0
*n:RiverName -> ({ niobrara })({ ' niobrara ' }) weight 0.0
*n:RiverName -> ({ north platte })({ ' north platte ' }) weight 0.0
*n:RiverName -> ({ ohio })({ ' ohio ' }) weight 0.0
*n:RiverName -> ({ ouachita })({ ' ouachita ' }) weight 0.0
*n:RiverName -> ({ pearl })({ ' pearl ' }) weight 0.0
*n:RiverName -> ({ pecos })({ ' pecos ' }) weight 0.0
*n:RiverName -> ({ potomac })({ ' potomac ' }) weight 0.0
*n:RiverName -> ({ powder })({ ' powder ' }) weight 0.0
*n:RiverName -> ({ red })({ ' red ' }) weight 0.0
*n:RiverName -> ({ republican })({ ' republican ' }) weight 0.0
*n:RiverName -> ({ rio grande })({ ' rio grande ' }) weight 0.0
*n:RiverName -> ({ roanoke })({ ' roanoke ' }) weight 0.0
*n:RiverName -> ({ rock })({ ' rock ' }) weight 0.0
*n:RiverName -> ({ san juan })({ ' san juan ' }) weight 0.0
*n:RiverName -> ({ smoky hill })({ ' smoky hill ' }) weight 0.0
*n:RiverName -> ({ snake })({ ' snake ' }) weight 0.0
*n:RiverName -> ({ south platte })({ ' south platte ' }) weight 0.0
*n:RiverName -> ({ st. francis })({ ' st. francis ' }) weight 0.0
*n:RiverName -> ({ tennessee })({ ' tennessee ' }) weight 0.0
*n:RiverName -> ({ tombigbee })({ ' tombigbee ' }) weight 0.0
*n:RiverName -> ({ wabash })({ ' wabash ' }) weight 0.0
*n:RiverName -> ({ washita })({ ' washita ' }) weight 0.0
*n:RiverName -> ({ wateree catawba })({ ' wateree catawba ' }) weight 0.0
*n:RiverName -> ({ white })({ ' white ' }) weight 0.0
*n:RiverName -> ({ yellowstone })({ ' yellowstone ' }) weight 0.0
*n:StateAbbrev -> ({ ak })({ ' ak ' }) weight 0.0
*n:StateAbbrev -> ({ al })({ ' al ' }) weight 0.0
*n:StateAbbrev -> ({ ar })({ ' ar ' }) weight 0.0
*n:StateAbbrev -> ({ az })({ ' az ' }) weight 0.0
*n:StateAbbrev -> ({ ca })({ ' ca ' }) weight 0.0
*n:StateAbbrev -> ({ co })({ ' co ' }) weight 0.0
*n:StateAbbrev -> ({ ct })({ ' ct ' }) weight 0.0
*n:StateAbbrev -> ({ dc })({ ' dc ' }) weight 0.0
*n:StateAbbrev -> ({ de })({ ' de ' }) weight 0.0
*n:StateAbbrev -> ({ fl })({ ' fl ' }) weight 0.0
*n:StateAbbrev -> ({ ga })({ ' ga ' }) weight 0.0
*n:StateAbbrev -> ({ hi })({ ' hi ' }) weight 0.0
*n:StateAbbrev -> ({ ia })({ ' ia ' }) weight 0.0
*n:StateAbbrev -> ({ id })({ ' id ' }) weight 0.0
*n:StateAbbrev -> ({ il })({ ' il ' }) weight 0.0
*n:StateAbbrev -> ({ in })({ ' in ' }) weight 0.0
*n:StateAbbrev -> ({ ks })({ ' ks ' }) weight 0.0
*n:StateAbbrev -> ({ ky })({ ' ky ' }) weight 0.0
*n:StateAbbrev -> ({ la })({ ' la ' }) weight 0.0
*n:StateAbbrev -> ({ ma })({ ' ma ' }) weight 0.0
*n:StateAbbrev -> ({ md })({ ' md ' }) weight 0.0
*n:StateAbbrev -> ({ me })({ ' me ' }) weight 0.0
*n:StateAbbrev -> ({ mi })({ ' mi ' }) weight 0.0
*n:StateAbbrev -> ({ mn })({ ' mn ' }) weight 0.0
*n:StateAbbrev -> ({ mo })({ ' mo ' }) weight 0.0
*n:StateAbbrev -> ({ ms })({ ' ms ' }) weight 0.0
*n:StateAbbrev -> ({ mt })({ ' mt ' }) weight 0.0
*n:StateAbbrev -> ({ nc })({ ' nc ' }) weight 0.0
*n:StateAbbrev -> ({ nd })({ ' nd ' }) weight 0.0
*n:StateAbbrev -> ({ ne })({ ' ne ' }) weight 0.0
*n:StateAbbrev -> ({ nh })({ ' nh ' }) weight 0.0
*n:StateAbbrev -> ({ nj })({ ' nj ' }) weight 0.0
*n:StateAbbrev -> ({ nm })({ ' nm ' }) weight 0.0
*n:StateAbbrev -> ({ nv })({ ' nv ' }) weight 0.0
*n:StateAbbrev -> ({ ny })({ ' ny ' }) weight 0.0
*n:StateAbbrev -> ({ oh })({ ' oh ' }) weight 0.0
*n:StateAbbrev -> ({ ok })({ ' ok ' }) weight 0.0
*n:StateAbbrev -> ({ or })({ ' or ' }) weight 0.0
*n:StateAbbrev -> ({ pa })({ ' pa ' }) weight 0.0
*n:StateAbbrev -> ({ ri })({ ' ri ' }) weight 0.0
*n:StateAbbrev -> ({ sc })({ ' sc ' }) weight 0.0
*n:StateAbbrev -> ({ sd })({ ' sd ' }) weight 0.0
*n:StateAbbrev -> ({ tn })({ ' tn ' }) weight 0.0
*n:StateAbbrev -> ({ tx })({ ' tx ' }) weight 0.0
*n:StateAbbrev -> ({ ut })({ ' ut ' }) weight 0.0
*n:StateAbbrev -> ({ va })({ ' va ' }) weight 0.0
*n:StateAbbrev -> ({ vt })({ ' vt ' }) weight 0.0
*n:StateAbbrev -> ({ wa })({ ' wa ' }) weight 0.0
*n:StateAbbrev -> ({ wi })({ ' wi ' }) weight 0.0
*n:StateAbbrev -> ({ wv })({ ' wv ' }) weight 0.0
*n:StateAbbrev -> ({ wy })({ ' wy ' }) weight 0.0
*n:StateAbbrev -> ({ alabama })({ ' al ' }) weight 0.0
*n:StateAbbrev -> ({ alaska })({ ' ak ' }) weight 0.0
*n:StateAbbrev -> ({ arizona })({ ' az ' }) weight 0.0
*n:StateAbbrev -> ({ arkansas })({ ' ar ' }) weight 0.0
*n:StateAbbrev -> ({ california })({ ' ca ' }) weight 0.0
*n:StateAbbrev -> ({ colorado })({ ' co ' }) weight 0.0
*n:StateAbbrev -> ({ connecticut })({ ' ct ' }) weight 0.0
*n:StateAbbrev -> ({ delaware })({ ' de ' }) weight 0.0
*n:StateAbbrev -> ({ district of columbia })({ ' dc ' }) weight 0.0
*n:StateAbbrev -> ({ florida })({ ' fl ' }) weight 0.0
*n:StateAbbrev -> ({ georgia })({ ' ga ' }) weight 0.0
*n:StateAbbrev -> ({ hawaii })({ ' hi ' }) weight 0.0
*n:StateAbbrev -> ({ idaho })({ ' id ' }) weight 0.0
*n:StateAbbrev -> ({ illinois })({ ' il ' }) weight 0.0
*n:StateAbbrev -> ({ indiana })({ ' in ' }) weight 0.0
*n:StateAbbrev -> ({ iowa })({ ' ia ' }) weight 0.0
*n:StateAbbrev -> ({ kansas })({ ' ks ' }) weight 0.0
*n:StateAbbrev -> ({ kentucky })({ ' ky ' }) weight 0.0
*n:StateAbbrev -> ({ louisiana })({ ' la ' }) weight 0.0
*n:StateAbbrev -> ({ maine })({ ' me ' }) weight 0.0
*n:StateAbbrev -> ({ maryland })({ ' md ' }) weight 0.0
*n:StateAbbrev -> ({ massachusetts })({ ' ma ' }) weight 0.0
*n:StateAbbrev -> ({ michigan })({ ' mi ' }) weight 0.0
*n:StateAbbrev -> ({ minnesota })({ ' mn ' }) weight 0.0
*n:StateAbbrev -> ({ mississippi })({ ' ms ' }) weight 0.0
*n:StateAbbrev -> ({ missouri })({ ' mo ' }) weight 0.0
*n:StateAbbrev -> ({ montana })({ ' mt ' }) weight 0.0
*n:StateAbbrev -> ({ nebraska })({ ' ne ' }) weight 0.0
*n:StateAbbrev -> ({ nevada })({ ' nv ' }) weight 0.0
*n:StateAbbrev -> ({ new hampshire })({ ' nh ' }) weight 0.0
*n:StateAbbrev -> ({ new jersey })({ ' nj ' }) weight 0.0
*n:StateAbbrev -> ({ new mexico })({ ' nm ' }) weight 0.0
*n:StateAbbrev -> ({ new york })({ ' ny ' }) weight 0.0
*n:StateAbbrev -> ({ north carolina })({ ' nc ' }) weight 0.0
*n:StateAbbrev -> ({ north dakota })({ ' nd ' }) weight 0.0
*n:StateAbbrev -> ({ ohio })({ ' oh ' }) weight 0.0
*n:StateAbbrev -> ({ oklahoma })({ ' ok ' }) weight 0.0
*n:StateAbbrev -> ({ oregon })({ ' or ' }) weight 0.0
*n:StateAbbrev -> ({ pennsylvania })({ ' pa ' }) weight 0.0
*n:StateAbbrev -> ({ rhode island })({ ' ri ' }) weight 0.0
*n:StateAbbrev -> ({ south carolina })({ ' sc ' }) weight 0.0
*n:StateAbbrev -> ({ south dakota })({ ' sd ' }) weight 0.0
*n:StateAbbrev -> ({ tennessee })({ ' tn ' }) weight 0.0
*n:StateAbbrev -> ({ texas })({ ' tx ' }) weight 0.0
*n:StateAbbrev -> ({ utah })({ ' ut ' }) weight 0.0
*n:StateAbbrev -> ({ vermont })({ ' vt ' }) weight 0.0
*n:StateAbbrev -> ({ virginia })({ ' va ' }) weight 0.0
*n:StateAbbrev -> ({ washington })({ ' wa ' }) weight 0.0
*n:StateAbbrev -> ({ west virginia })({ ' wv ' }) weight 0.0
*n:StateAbbrev -> ({ wisconsin })({ ' wi ' }) weight 0.0
*n:StateAbbrev -> ({ wyoming })({ ' wy ' }) weight 0.0
*n:StateName -> ({ alabama })({ ' alabama ' }) weight 0.0
*n:StateName -> ({ alaska })({ ' alaska ' }) weight 0.0
*n:StateName -> ({ arizona })({ ' arizona ' }) weight 0.0
*n:StateName -> ({ arkansas })({ ' arkansas ' }) weight 0.0
*n:StateName -> ({ california })({ ' california ' }) weight 0.0
*n:StateName -> ({ colorado })({ ' colorado ' }) weight 0.0
*n:StateName -> ({ connecticut })({ ' connecticut ' }) weight 0.0
*n:StateName -> ({ delaware })({ ' delaware ' }) weight 0.0
*n:StateName -> ({ district of columbia })({ ' district of columbia ' }) weight 0.0
*n:StateName -> ({ florida })({ ' florida ' }) weight 0.0
*n:StateName -> ({ georgia })({ ' georgia ' }) weight 0.0
*n:StateName -> ({ hawaii })({ ' hawaii ' }) weight 0.0
*n:StateName -> ({ idaho })({ ' idaho ' }) weight 0.0
*n:StateName -> ({ illinois })({ ' illinois ' }) weight 0.0
*n:StateName -> ({ indiana })({ ' indiana ' }) weight 0.0
*n:StateName -> ({ iowa })({ ' iowa ' }) weight 0.0
*n:StateName -> ({ kansas })({ ' kansas ' }) weight 0.0
*n:StateName -> ({ kentucky })({ ' kentucky ' }) weight 0.0
*n:StateName -> ({ louisiana })({ ' louisiana ' }) weight 0.0
*n:StateName -> ({ maine })({ ' maine ' }) weight 0.0
*n:StateName -> ({ maryland })({ ' maryland ' }) weight 0.0
*n:StateName -> ({ massachusetts })({ ' massachusetts ' }) weight 0.0
*n:StateName -> ({ michigan })({ ' michigan ' }) weight 0.0
*n:StateName -> ({ minnesota })({ ' minnesota ' }) weight 0.0
*n:StateName -> ({ mississippi })({ ' mississippi ' }) weight 0.0
*n:StateName -> ({ missouri })({ ' missouri ' }) weight 0.0
*n:StateName -> ({ montana })({ ' montana ' }) weight 0.0
*n:StateName -> ({ nebraska })({ ' nebraska ' }) weight 0.0
*n:StateName -> ({ nevada })({ ' nevada ' }) weight 0.0
*n:StateName -> ({ new hampshire })({ ' new hampshire ' }) weight 0.0
*n:StateName -> ({ new jersey })({ ' new jersey ' }) weight 0.0
*n:StateName -> ({ new mexico })({ ' new mexico ' }) weight 0.0
*n:StateName -> ({ new york })({ ' new york ' }) weight 0.0
*n:StateName -> ({ north carolina })({ ' north carolina ' }) weight 0.0
*n:StateName -> ({ north dakota })({ ' north dakota ' }) weight 0.0
*n:StateName -> ({ ohio })({ ' ohio ' }) weight 0.0
*n:StateName -> ({ oklahoma })({ ' oklahoma ' }) weight 0.0
*n:StateName -> ({ oregon })({ ' oregon ' }) weight 0.0
*n:StateName -> ({ pennsylvania })({ ' pennsylvania ' }) weight 0.0
*n:StateName -> ({ rhode island })({ ' rhode island ' }) weight 0.0
*n:StateName -> ({ south carolina })({ ' south carolina ' }) weight 0.0
*n:StateName -> ({ south dakota })({ ' south dakota ' }) weight 0.0
*n:StateName -> ({ tennessee })({ ' tennessee ' }) weight 0.0
*n:StateName -> ({ texas })({ ' texas ' }) weight 0.0
*n:StateName -> ({ utah })({ ' utah ' }) weight 0.0
*n:StateName -> ({ vermont })({ ' vermont ' }) weight 0.0
*n:StateName -> ({ virginia })({ ' virginia ' }) weight 0.0
*n:StateName -> ({ washington })({ ' washington ' }) weight 0.0
*n:StateName -> ({ west virginia })({ ' west virginia ' }) weight 0.0
*n:StateName -> ({ wisconsin })({ ' wisconsin ' }) weight 0.0
*n:StateName -> ({ wyoming })({ ' wyoming ' }) weight 0.0
*n:Num -> ({ *t:Num#1 })({ *t:Num#1 }) weight 0.0
*n:River -> ({ *n:RiverName#1 })({ riverid ( *n:RiverName#1 ) }) weight 0.0
*n:River -> ({ the *n:River#1 river })({ river ( *n:River#1 ) }) weight 0.0
*n:Num -> ({ How long is *n:River#1 })({ len ( *n:River#1 ) }) weight 0.0
*n:Query -> ({ *t:Bound *n:Num#1 *t:Bound })({ answer ( *n:Num#1 ) }) weight 0.0
*n:CountryName -> ({ the US })({ ' usa ' }) weight 0.0
*n:Country -> ({ *n:CountryName#1 })({ countryid ( *n:CountryName#1 ) }) weight 0.0
*n:City -> ({ in *n:Country#1 })({ loc_2 ( *n:Country#1 ) }) weight 0.0
*n:City -> ({ What capital is the largest *n:City#1 })({ largest ( capital ( *n:City#1 ) ) }) weight 0.0
*n:Query -> ({ *t:Bound *n:City#1 *t:Bound })({ answer ( *n:City#1 ) }) weight 0.0
*n:State -> ({ *n:StateName#1 })({ stateid ( *n:StateName#1 ) }) weight 0.0
*n:Num -> ({ the area of *n:State#1 })({ area_1 ( *n:State#1 ) }) weight 0.0
*n:Query -> ({ *t:Bound What is *n:Num#1 *t:Bound })({ answer ( *n:Num#1 ) }) weight 0.0
*n:State -> ({ state })({ state ( all ) }) weight 0.0
*n:State -> ({ the smallest *n:State#1 })({ smallest ( *n:State#1 ) }) weight 0.0
*n:State -> ({ *n:State#1 state })({ state ( *n:State#1 ) }) weight 0.0
*n:River -> ({ in *n:State#1 })({ loc_2 ( *n:State#1 ) }) weight 0.0
*n:River -> ({ river *n:River#1 })({ river ( *n:River#1 ) }) weight 0.0
*n:River -> ({ the largest *n:River#1 })({ longest ( *n:River#1 ) }) weight 0.0
*n:Query -> ({ *t:Bound What is *n:River#1 *t:Bound })({ answer ( *n:River#1 ) }) weight 0.0
*n:Num -> ({ the population density of *n:State#1 })({ density_1 ( *n:State#1 ) }) weight 0.0
*n:River -> ({ flow through *n:State#1 })({ traverse_2 ( *n:State#1 ) }) weight 0.0
*n:River -> ({ Which rivers *n:River#1 })({ river ( *n:River#1 ) }) weight 0.0
*n:Query -> ({ *t:Bound *n:River#1 *t:Bound })({ answer ( *n:River#1 ) }) weight 0.0
*n:River -> ({ river })({ river ( all ) }) weight 0.0
*n:River -> ({ the longest *n:River#1 })({ longest ( *n:River#1 ) }) weight 0.0
*n:State -> ({ has *n:River#1 })({ loc_1 ( *n:River#1 ) }) weight 0.0
*n:State -> ({ Which state *n:State#1 })({ state ( *n:State#1 ) }) weight 0.0
*n:Query -> ({ *t:Bound *n:State#1 *t:Bound })({ answer ( *n:State#1 ) }) weight 0.0
*n:State -> ({ Which state })({ state ( all ) }) weight 0.0
*n:State -> ({ *n:State#1 has the smallest population density })({ smallest_one ( density_1 ( *n:State#1 ) ) }) weight 0.0
*n:X -> ({ Arizona })({ 'az' }) weight 0.0
*n:X -> ({ Arizona })({ 'arizona' }) weight 0.0
*n:X -> ({ Arizona ? })({ stateid( 'arizona' }) weight 0.0
*n:Query -> ({ *t:Bound  Arizona *n:X#1  *t:Bound })({  *n:X#1 'arizona'  }) weight 0.0
*n:X -> ({ Arkansas })({ 'arkansas' }) weight 0.0
*n:X -> ({ Arkansas . })({ stateid( 'arkansas' }) weight 0.0
*n:X -> ({ Arkansas ? })({ stateid( 'arkansas' }) weight 0.0
*n:Query -> ({ *t:Bound  Arkansas *n:X#1  *t:Bound })({  *n:X#1 'arkansas'  }) weight 0.0
*n:X -> ({ Dakota })({ dakota' }) weight 0.0
*n:X -> ({ Francisco })({ francisco', }) weight 0.0
*n:X -> ({ Francisco ? })({ francisco', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Francisco *n:X#1  *t:Bound })({  francisco', *n:X#1  }) weight 0.0
*n:X -> ({ How })({ answer( }) weight 0.0
*n:X -> ({ How high })({ answer( elevation_1( }) weight 0.0
*n:X -> ({ How high are the highest })({ answer( elevation_1( highest( }) weight 0.0
*n:X -> ({ How high are the highest points })({ answer( elevation_1( highest( place( }) weight 0.0
*n:X -> ({ How high are the highest points of all the })({ answer( elevation_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ How high are the highest points of all the states })({ answer( elevation_1( highest( place( loc_2( state( }) weight 0.0
*n:Query -> ({ *t:Bound  How high are the *n:X#1  *t:Bound })({  answer( elevation_1( *n:X#1  }) weight 0.0
*n:X -> ({ How high is })({ answer( elevation_1( }) weight 0.0
*n:X -> ({ How high is Mount })({ answer( elevation_1( placeid( 'mount }) weight 0.0
*n:X -> ({ How high is Mount McKinley })({ answer( elevation_1( placeid( 'mount mckinley' }) weight 0.0
*n:Query -> ({ *t:Bound  How high is Mount *n:X#1  *t:Bound })({  answer( elevation_1( placeid( 'mount *n:X#1  }) weight 0.0
*n:X -> ({ How high is Guadalupe })({ answer( elevation_1( placeid( 'guadalupe }) weight 0.0
*n:X -> ({ How high is Guadalupe Peak })({ answer( elevation_1( placeid( 'guadalupe peak' }) weight 0.0
*n:Query -> ({ *t:Bound  How high is Guadalupe *n:X#1  *t:Bound })({  answer( elevation_1( placeid( 'guadalupe *n:X#1  }) weight 0.0
*n:X -> ({ How high is the highest })({ answer( elevation_1( highest( }) weight 0.0
*n:X -> ({ How high is the highest point })({ answer( elevation_1( highest( place( }) weight 0.0
*n:X -> ({ How high is the highest point })({ answer( elevation_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ How high is the highest point in })({ answer( elevation_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ How high is the highest point in America })({ answer( elevation_1( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How high is the highest point in Montana ? })({ answer( elevation_1( highest( place( loc_2( stateid( 'montana' }) weight 0.0
*n:X -> ({ How high is the highest point in the })({ answer( elevation_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ How high is the highest point in the largest })({ answer( elevation_1( highest( place( loc_2( largest( }) weight 0.0
*n:X -> ({ How high is the highest point in the largest state })({ answer( elevation_1( highest( place( loc_2( largest( state( }) weight 0.0
*n:X -> ({ How high is the highest point of Delaware ? })({ answer( elevation_1( highest( place( loc_2( stateid( 'delaware' }) weight 0.0
*n:X -> ({ How high is the highest point of Louisiana ? })({ answer( elevation_1( highest( place( loc_2( stateid( 'louisiana' }) weight 0.0
*n:X -> ({ How high is the highest point of Alabama ? })({ answer( elevation_1( highest( place( loc_2( stateid( 'alabama' }) weight 0.0
*n:X -> ({ How high is the highest point of Florida ? })({ answer( elevation_1( highest( place( loc_2( stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  How high is the *n:X#1  *t:Bound })({  answer( elevation_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How high is the *n:X#1  *t:Bound })({  answer( elevation_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How high is *n:X#1  *t:Bound })({  answer( elevation_1( placeid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How high is *n:X#1  *t:Bound })({  answer( elevation_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How high is *n:X#1 McKinley  *t:Bound })({  answer( elevation_1( *n:X#1 mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  How high is *n:X#1 Peak  *t:Bound })({  answer( elevation_1( placeid( *n:X#1 peak'  }) weight 0.0
*n:X -> ({ How big })({ answer( size( }) weight 0.0
*n:X -> ({ How big is Alaska ? })({ answer( size( stateid( 'alaska' }) weight 0.0
*n:X -> ({ How big is North Dakota ? })({ answer( size( stateid( 'north dakota' }) weight 0.0
*n:X -> ({ How big is Texas ? })({ answer( size( stateid( 'texas' }) weight 0.0
*n:X -> ({ How big is Massachusetts ? })({ answer( size( stateid( 'massachusetts' }) weight 0.0
*n:X -> ({ How big is New Mexico ? })({ answer( size( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ How big is the })({ answer( size( }) weight 0.0
*n:X -> ({ How big is the city })({ answer( size( city( }) weight 0.0
*n:X -> ({ How big is the city of })({ answer( size( city( cityid( }) weight 0.0
*n:X -> ({ How big is the city of New })({ answer( size( city( cityid( 'new }) weight 0.0
*n:X -> ({ How big is the city of New York })({ answer( size( city( cityid( 'new york', }) weight 0.0
*n:X -> ({ How big is the city of New York ? })({ answer( size( city( cityid( 'new york', _ }) weight 0.0
*n:Query -> ({ *t:Bound  How big is the *n:X#1  *t:Bound })({  answer( size( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How big is *n:X#1 ?  *t:Bound })({  answer( size( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How big *n:X#1  *t:Bound })({  answer( size( *n:X#1  }) weight 0.0
*n:X -> ({ How long is })({ answer( len( }) weight 0.0
*n:X -> ({ How long is Rio })({ answer( len( riverid( 'rio }) weight 0.0
*n:X -> ({ How long is Rio Grande })({ answer( len( riverid( 'rio grande' }) weight 0.0
*n:Query -> ({ *t:Bound  How long is Rio *n:X#1  *t:Bound })({  answer( len( riverid( 'rio *n:X#1  }) weight 0.0
*n:X -> ({ How long is the })({ answer( len( }) weight 0.0
*n:X -> ({ How long is the Delaware river })({ answer( len( river( riverid( 'delaware' }) weight 0.0
*n:X -> ({ How long is the Colorado river })({ answer( len( river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ How long is the North Platte river })({ answer( len( river( riverid( 'north platte' }) weight 0.0
*n:X -> ({ How long is the Rio Grande river })({ answer( len( river( riverid( 'rio grande' }) weight 0.0
*n:X -> ({ How long is the Mississippi })({ answer( len( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ How long is the Mississippi river })({ answer( len( river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ How long is the Mississippi river in miles })({ answer( len( river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ How long is the longest })({ answer( len( longest( }) weight 0.0
*n:X -> ({ How long is the longest river })({ answer( len( longest( river( }) weight 0.0
*n:X -> ({ How long is the longest river in })({ answer( len( longest( river( loc_2( }) weight 0.0
*n:X -> ({ How long is the longest river in California ? })({ answer( len( longest( river( loc_2( stateid( 'california' }) weight 0.0
*n:X -> ({ How long is the longest river in the })({ answer( len( longest( river( loc_2( }) weight 0.0
*n:X -> ({ How long is the longest river in the USA })({ answer( len( longest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How long is the Missouri river })({ answer( len( river( riverid( 'missouri' }) weight 0.0
*n:X -> ({ How long is the Ohio river })({ answer( len( river( riverid( 'ohio' }) weight 0.0
*n:X -> ({ How long is the shortest })({ answer( len( shortest( }) weight 0.0
*n:X -> ({ How long is the shortest river })({ answer( len( shortest( river( }) weight 0.0
*n:X -> ({ How long is the shortest river in the })({ answer( len( shortest( river( loc_2( }) weight 0.0
*n:X -> ({ How long is the shortest river in the USA })({ answer( len( shortest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  How long is the *n:X#1  *t:Bound })({  answer( len( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How long is the *n:X#1  *t:Bound })({  answer( len( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How long is *n:X#1  *t:Bound })({  answer( len( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How long is *n:X#1 Grande  *t:Bound })({  answer( len( riverid( *n:X#1 grande'  }) weight 0.0
*n:X -> ({ How large })({ answer( size( }) weight 0.0
*n:X -> ({ How large is })({ answer( size( }) weight 0.0
*n:X -> ({ How large is Alaska ? })({ answer( size( stateid( 'alaska' }) weight 0.0
*n:X -> ({ How large is Texas ? })({ answer( size( stateid( 'texas' }) weight 0.0
*n:X -> ({ How large is the largest })({ answer( size( largest( }) weight 0.0
*n:X -> ({ How large is the largest city })({ answer( size( largest( city( }) weight 0.0
*n:X -> ({ How large is the largest city in })({ answer( size( largest( city( loc_2( }) weight 0.0
*n:X -> ({ How large is the largest city in Alaska ? })({ answer( size( largest( city( loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  How large is the *n:X#1  *t:Bound })({  answer( size( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How large is *n:X#1 ?  *t:Bound })({  answer( size( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How large *n:X#1  *t:Bound })({  answer( size( *n:X#1  }) weight 0.0
*n:X -> ({ How much population })({ answer( population_1( }) weight 0.0
*n:X -> ({ How much population does Texas have ? })({ answer( population_1( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  How much population does *n:X#1  *t:Bound })({  answer( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How much *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How much *n:X#1 does *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ How tall is })({ answer( elevation_1( }) weight 0.0
*n:X -> ({ How tall is Mount })({ answer( elevation_1( placeid( 'mount }) weight 0.0
*n:X -> ({ How tall is Mount McKinley })({ answer( elevation_1( placeid( 'mount mckinley' }) weight 0.0
*n:Query -> ({ *t:Bound  How tall is Mount *n:X#1  *t:Bound })({  answer( elevation_1( placeid( 'mount *n:X#1  }) weight 0.0
*n:X -> ({ How tall is the highest })({ answer( elevation_1( highest( }) weight 0.0
*n:X -> ({ How tall is the highest point })({ answer( elevation_1( highest( place( }) weight 0.0
*n:X -> ({ How tall is the highest point in })({ answer( elevation_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ How tall is the highest point in Montana ? })({ answer( elevation_1( highest( place( loc_2( stateid( 'montana' }) weight 0.0
*n:Query -> ({ *t:Bound  How tall is the *n:X#1  *t:Bound })({  answer( elevation_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How tall is *n:X#1  *t:Bound })({  answer( elevation_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How tall is *n:X#1 McKinley  *t:Bound })({  answer( elevation_1( *n:X#1 mckinley'  }) weight 0.0
*n:X -> ({ How many })({ answer( count( }) weight 0.0
*n:X -> ({ How many })({ answer( population_1( cityid( }) weight 0.0
*n:X -> ({ How many Colorado rivers are })({ answer( count( river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  How many Colorado rivers *n:X#1  *t:Bound })({  answer( count( river( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many Colorado *n:X#1  *t:Bound })({  answer( count( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many Colorado *n:X#1 are  *t:Bound })({  answer( count( *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:X -> ({ How many states })({ answer( count( intersection( state( }) weight 0.0
*n:X -> ({ How many states })({ answer( count( state( }) weight 0.0
*n:X -> ({ How many states are in the })({ answer( count( state( loc_2( }) weight 0.0
*n:X -> ({ How many states are in the USA })({ answer( count( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many states are in the United })({ answer( count( state( loc_2( countryid( }) weight 0.0
*n:X -> ({ How many states are in the United States })({ answer( count( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many states are there ? })({ answer( count( state( all }) weight 0.0
*n:X -> ({ How many states are there in })({ answer( count( state( loc_2( }) weight 0.0
*n:X -> ({ How many states are there in United })({ answer( count( state( loc_2( countryid( }) weight 0.0
*n:X -> ({ How many states are there in United States })({ answer( count( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many states are there in the })({ answer( count( state( loc_2( }) weight 0.0
*n:X -> ({ How many states are there in the USA })({ answer( count( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many states are next to major })({ answer( count( state( next_to_2( major( }) weight 0.0
*n:X -> ({ How many states are next to major rivers })({ answer( count( state( next_to_2( major( river( }) weight 0.0
*n:X -> ({ How many states are next to major rivers ? })({ answer( count( state( next_to_2( major( river( all }) weight 0.0
*n:X -> ({ How many states have })({ answer( count( state( loc_1( }) weight 0.0
*n:X -> ({ How many states have cities })({ answer( count( state( loc_1( city( }) weight 0.0
*n:X -> ({ How many states have cities or towns named Springfield })({ answer( count( state( loc_1( city( cityid( 'springfield', }) weight 0.0
*n:X -> ({ How many states have cities or towns named Springfield ? })({ answer( count( state( loc_1( city( cityid( 'springfield', _ }) weight 0.0
*n:X -> ({ How many states have cities named })({ answer( count( state( loc_1( city( cityid( }) weight 0.0
*n:X -> ({ How many states have cities named Austin })({ answer( count( state( loc_1( city( cityid( 'austin', }) weight 0.0
*n:X -> ({ How many states have cities named Austin ? })({ answer( count( state( loc_1( city( cityid( 'austin', _ }) weight 0.0
*n:X -> ({ How many states have major })({ answer( count( state( loc_1( major( }) weight 0.0
*n:X -> ({ How many states have major rivers })({ answer( count( state( loc_1( major( river( }) weight 0.0
*n:X -> ({ How many states have major rivers ? })({ answer( count( state( loc_1( major( river( all }) weight 0.0
*n:X -> ({ How many states have a })({ answer( count( state( loc_1( }) weight 0.0
*n:X -> ({ How many states have a city })({ answer( count( state( loc_1( city( }) weight 0.0
*n:X -> ({ How many states have a city called Rochester })({ answer( count( state( loc_1( city( cityid( 'rochester', }) weight 0.0
*n:X -> ({ How many states have a city called Rochester ? })({ answer( count( state( loc_1( city( cityid( 'rochester', _ }) weight 0.0
*n:X -> ({ How many states have a city named })({ answer( count( state( loc_1( city( cityid( }) weight 0.0
*n:X -> ({ How many states have a city named Springfield })({ answer( count( state( loc_1( city( cityid( 'springfield', }) weight 0.0
*n:X -> ({ How many states have a city named Springfield ? })({ answer( count( state( loc_1( city( cityid( 'springfield', _ }) weight 0.0
*n:X -> ({ How many states have a higher point than })({ answer( count( state( loc_1( place( higher_2( }) weight 0.0
*n:X -> ({ How many states have a higher point than the highest })({ answer( count( state( loc_1( place( higher_2( highest( }) weight 0.0
*n:Query -> ({ *t:Bound  How many states have *n:X#1  *t:Bound })({  answer( count( state( loc_1( *n:X#1  }) weight 0.0
*n:X -> ({ How many states in the })({ answer( count( intersection( state( loc_2( }) weight 0.0
*n:X -> ({ How many states in the US })({ answer( count( intersection( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many states in the US does })({ answer( count( intersection( state( loc_2( countryid( 'usa' ,traverse_1( }) weight 0.0
*n:X -> ({ How many states in the US does the shortest })({ answer( count( intersection( state( loc_2( countryid( 'usa' ,traverse_1( shortest( }) weight 0.0
*n:X -> ({ How many states in the US does the shortest river })({ answer( count( intersection( state( loc_2( countryid( 'usa' ,traverse_1( shortest( river( }) weight 0.0
*n:X -> ({ How many states border })({ answer( count( state( intersection( next_to_2( }) weight 0.0
*n:X -> ({ How many states border })({ answer( count( state( next_to_2( }) weight 0.0
*n:X -> ({ How many states border Tennessee ? })({ answer( count( state( next_to_2( stateid( 'tennessee' }) weight 0.0
*n:X -> ({ How many states border Alaska ? })({ answer( count( state( next_to_2( stateid( 'alaska' }) weight 0.0
*n:X -> ({ How many states border Iowa ? })({ answer( count( state( next_to_2( stateid( 'iowa' }) weight 0.0
*n:X -> ({ How many states border Colorado })({ answer( count( state( intersection( next_to_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ How many states border Colorado and })({ answer( count( state( intersection( next_to_2( stateid( 'colorado' , }) weight 0.0
*n:X -> ({ How many states border Colorado and border })({ answer( count( state( intersection( next_to_2( stateid( 'colorado' , next_to_2( }) weight 0.0
*n:X -> ({ How many states border Hawaii ? })({ answer( count( state( next_to_2( stateid( 'hawaii' }) weight 0.0
*n:X -> ({ How many states border Texas ? })({ answer( count( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ How many states border at })({ answer( count( state( next_to_2( }) weight 0.0
*n:X -> ({ How many states border at least one other state })({ answer( count( state( next_to_2( state( }) weight 0.0
*n:X -> ({ How many states border at least one other state ? })({ answer( count( state( next_to_2( state( all }) weight 0.0
*n:X -> ({ How many states border on the state })({ answer( count( state( next_to_2( state( }) weight 0.0
*n:X -> ({ How many states border on the state whose })({ answer( count( state( next_to_2( state( loc_1( }) weight 0.0
*n:X -> ({ How many states border on the state whose capital })({ answer( count( state( next_to_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ How many states border on the state whose capital is })({ answer( count( state( next_to_2( state( loc_1( capital( cityid( }) weight 0.0
*n:X -> ({ How many states border the Mississippi river })({ answer( count( state( next_to_2( river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ How many states border the largest })({ answer( count( state( next_to_2( largest( }) weight 0.0
*n:X -> ({ How many states border the largest state })({ answer( count( state( next_to_2( largest( state( }) weight 0.0
*n:X -> ({ How many states border the largest state ? })({ answer( count( state( next_to_2( largest( state( all }) weight 0.0
*n:X -> ({ How many states border the state })({ answer( count( state( next_to_2( }) weight 0.0
*n:X -> ({ How many states border the state with the largest })({ answer( count( state( next_to_2( largest_one( }) weight 0.0
*n:X -> ({ How many states border the state with the largest population })({ answer( count( state( next_to_2( largest_one( population_1( }) weight 0.0
*n:X -> ({ How many states border the state that borders the most })({ answer( count( state( next_to_2( most( }) weight 0.0
*n:Query -> ({ *t:Bound  How many states border *n:X#1  *t:Bound })({  answer( count( state( next_to_2( *n:X#1  }) weight 0.0
*n:X -> ({ How many states does })({ answer( count( state( loc_2( }) weight 0.0
*n:X -> ({ How many states does })({ answer( count( state( traverse_1( }) weight 0.0
*n:X -> ({ How many states does })({ answer( count( state( next_to_1( }) weight 0.0
*n:X -> ({ How many states does Tennessee border ? })({ answer( count( state( next_to_1( stateid( 'tennessee' }) weight 0.0
*n:X -> ({ How many states does Iowa border ? })({ answer( count( state( next_to_1( stateid( 'iowa' }) weight 0.0
*n:X -> ({ How many states does USA })({ answer( count( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many states does Missouri border ? })({ answer( count( state( next_to_1( stateid( 'missouri' }) weight 0.0
*n:X -> ({ How many states does the Colorado river flow })({ answer( count( state( traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ How many states does the Colorado river run })({ answer( count( state( traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ How many states does the Mississippi river run })({ answer( count( state( traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ How many states does the Mississippi run })({ answer( count( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ How many states does the Missouri river run })({ answer( count( state( traverse_1( river( riverid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  How many states does *n:X#1  *t:Bound })({  answer( count( state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states does *n:X#1  *t:Bound })({  answer( count( state( next_to_1( *n:X#1  }) weight 0.0
*n:X -> ({ How many states do })({ answer( count( exclude( state( }) weight 0.0
*n:X -> ({ How many states do not })({ answer( count( exclude( state( all , }) weight 0.0
*n:X -> ({ How many states do not have })({ answer( count( exclude( state( all , loc_1( }) weight 0.0
*n:X -> ({ How many states do not have rivers })({ answer( count( exclude( state( all , loc_1( river( }) weight 0.0
*n:X -> ({ How many states do not have rivers ? })({ answer( count( exclude( state( all , loc_1( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1  *t:Bound })({  answer( count( intersection( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1  *t:Bound })({  answer( count( state( intersection( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1  *t:Bound })({  answer( count( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1  *t:Bound })({  answer( count( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 States  *t:Bound })({  answer( count( state( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 ?  *t:Bound })({  answer( count( state( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 ?  *t:Bound })({  answer( count( state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 Austin  *t:Bound })({  answer( count( state( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 United  *t:Bound })({  answer( count( state( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 capital  *t:Bound })({  answer( count( state( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 is  *t:Bound })({  answer( count( state( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 Springfield  *t:Bound })({  answer( count( state( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 cities  *t:Bound })({  answer( count( state( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 major  *t:Bound })({  answer( count( state( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 city  *t:Bound })({  answer( count( state( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 named  *t:Bound })({  answer( count( state( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 rivers  *t:Bound })({  answer( count( state( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 population  *t:Bound })({  answer( count( state( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 whose  *t:Bound })({  answer( count( state( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many states *n:X#1 state  *t:Bound })({  answer( count( state( *n:X#1 state(  }) weight 0.0
*n:X -> ({ How many big cities are })({ answer( count( major( city( loc_2( }) weight 0.0
*n:X -> ({ How many big cities are in Pennsylvania ? })({ answer( count( major( city( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  How many big *n:X#1  *t:Bound })({  answer( count( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many big *n:X#1 are  *t:Bound })({  answer( count( major( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ How many cities })({ answer( count( city( }) weight 0.0
*n:X -> ({ How many cities are })({ answer( count( city( loc_2( }) weight 0.0
*n:X -> ({ How many cities are in Louisiana ? })({ answer( count( city( loc_2( stateid( 'louisiana' }) weight 0.0
*n:X -> ({ How many cities are in Montana ? })({ answer( count( city( loc_2( stateid( 'montana' }) weight 0.0
*n:X -> ({ How many cities are there in })({ answer( count( city( loc_2( }) weight 0.0
*n:X -> ({ How many cities are there in USA })({ answer( count( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many cities are there in US })({ answer( count( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many cities are there in the })({ answer( count( city( loc_2( }) weight 0.0
*n:X -> ({ How many cities are there in the United })({ answer( count( city( loc_2( countryid( }) weight 0.0
*n:X -> ({ How many cities are there in the United States })({ answer( count( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many cities are there in the US })({ answer( count( city( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  How many cities are *n:X#1  *t:Bound })({  answer( count( city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ How many cities does Texas have ? })({ answer( count( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ How many cities does the })({ answer( count( city( loc_2( }) weight 0.0
*n:X -> ({ How many cities does the USA })({ answer( count( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many cities named })({ answer( count( intersection( city( cityid( }) weight 0.0
*n:X -> ({ How many cities named Austin })({ answer( count( intersection( city( cityid( 'austin', }) weight 0.0
*n:Query -> ({ *t:Bound  How many cities *n:X#1  *t:Bound })({  answer( count( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many cities *n:X#1 States  *t:Bound })({  answer( count( city( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many cities *n:X#1 United  *t:Bound })({  answer( count( city( *n:X#1 countryid(  }) weight 0.0
*n:X -> ({ How many capitals })({ answer( count( capital( }) weight 0.0
*n:X -> ({ How many capitals does Rhode Island have ? })({ answer( count( capital( loc_2( stateid( 'rhode island' }) weight 0.0
*n:Query -> ({ *t:Bound  How many capitals *n:X#1  *t:Bound })({  answer( count( capital( *n:X#1  }) weight 0.0
*n:X -> ({ How many residents live })({ answer( population_1( }) weight 0.0
*n:X -> ({ How many residents live in Texas ? })({ answer( population_1( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  How many residents live *n:X#1  *t:Bound })({  answer( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many residents *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:X -> ({ How many citizens })({ answer( population_1( }) weight 0.0
*n:X -> ({ How many citizens in })({ answer( population_1( cityid( }) weight 0.0
*n:X -> ({ How many citizens in Boulder })({ answer( population_1( cityid( 'boulder', }) weight 0.0
*n:X -> ({ How many citizens in Boulder ? })({ answer( population_1( cityid( 'boulder', _ }) weight 0.0
*n:X -> ({ How many citizens in Alabama ? })({ answer( population_1( stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  How many citizens in *n:X#1  *t:Bound })({  answer( population_1( cityid( *n:X#1  }) weight 0.0
*n:X -> ({ How many citizens does the biggest })({ answer( population_1( largest( }) weight 0.0
*n:X -> ({ How many citizens does the biggest city })({ answer( population_1( largest( city( }) weight 0.0
*n:X -> ({ How many citizens live })({ answer( population_1( }) weight 0.0
*n:X -> ({ How many citizens live in California ? })({ answer( population_1( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  How many citizens live *n:X#1  *t:Bound })({  answer( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many citizens *n:X#1  *t:Bound })({  answer( population_1( *n:X#1  }) weight 0.0
*n:X -> ({ How many major })({ answer( count( major( }) weight 0.0
*n:X -> ({ How many major cities })({ answer( count( major( city( }) weight 0.0
*n:X -> ({ How many major cities are })({ answer( count( major( city( }) weight 0.0
*n:X -> ({ How many major cities are })({ answer( count( major( city( loc_2( }) weight 0.0
*n:X -> ({ How many major cities are in })({ answer( count( major( city( loc_2( }) weight 0.0
*n:X -> ({ How many major cities are in Arizona ? })({ answer( count( major( city( loc_2( stateid( 'arizona' }) weight 0.0
*n:X -> ({ How many major cities are in Florida ? })({ answer( count( major( city( loc_2( stateid( 'florida' }) weight 0.0
*n:X -> ({ How many major cities are in Texas ? })({ answer( count( major( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ How many major cities are in states })({ answer( count( major( city( loc_2( state( }) weight 0.0
*n:X -> ({ How many major cities are in states bordering })({ answer( count( major( city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ How many major cities are in states bordering Utah ? })({ answer( count( major( city( loc_2( state( next_to_2( stateid( 'utah' }) weight 0.0
*n:X -> ({ How many major cities are in states bordering Nebraska ? })({ answer( count( major( city( loc_2( state( next_to_2( stateid( 'nebraska' }) weight 0.0
*n:X -> ({ How many major cities are there ? })({ answer( count( major( city( all }) weight 0.0
*n:X -> ({ How many major cities are there in })({ answer( count( major( city( loc_2( }) weight 0.0
*n:X -> ({ How many major cities are there in Oregon ? })({ answer( count( major( city( loc_2( stateid( 'oregon' }) weight 0.0
*n:Query -> ({ *t:Bound  How many major cities *n:X#1  *t:Bound })({  answer( count( major( city( *n:X#1  }) weight 0.0
*n:X -> ({ How many major rivers })({ answer( count( major( river( }) weight 0.0
*n:X -> ({ How many major rivers cross })({ answer( count( major( river( traverse_2( }) weight 0.0
*n:X -> ({ How many major rivers cross Ohio ? })({ answer( count( major( river( traverse_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  How many major rivers *n:X#1  *t:Bound })({  answer( count( major( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many major *n:X#1  *t:Bound })({  answer( count( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many major *n:X#1 bordering  *t:Bound })({  answer( count( major( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many major *n:X#1 are  *t:Bound })({  answer( count( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many major *n:X#1 are  *t:Bound })({  answer( count( major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many major *n:X#1 states  *t:Bound })({  answer( count( major( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many major *n:X#1 cross  *t:Bound })({  answer( count( major( *n:X#1 traverse_2(  }) weight 0.0
*n:X -> ({ How many inhabitants does Montgomery })({ answer( population_1( cityid( 'montgomery', }) weight 0.0
*n:X -> ({ How many inhabitants does Montgomery have ? })({ answer( population_1( cityid( 'montgomery', _ }) weight 0.0
*n:X -> ({ How many rivers })({ answer( count( river( }) weight 0.0
*n:X -> ({ How many rivers })({ answer( count( intersection( river( }) weight 0.0
*n:X -> ({ How many rivers are })({ answer( count( river( loc_2( }) weight 0.0
*n:X -> ({ How many rivers are in Iowa ? })({ answer( count( river( loc_2( stateid( 'iowa' }) weight 0.0
*n:X -> ({ How many rivers are in Colorado ? })({ answer( count( river( loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ How many rivers are in New York ? })({ answer( count( river( loc_2( stateid( 'new york' }) weight 0.0
*n:X -> ({ How many rivers are in Missouri ? })({ answer( count( river( loc_2( stateid( 'missouri' }) weight 0.0
*n:X -> ({ How many rivers are in the })({ answer( count( river( loc_2( }) weight 0.0
*n:X -> ({ How many rivers are in the state })({ answer( count( river( loc_2( state( }) weight 0.0
*n:X -> ({ How many rivers are in the state with })({ answer( count( river( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ How many rivers are in the state with the highest })({ answer( count( river( loc_2( state( loc_1( highest( }) weight 0.0
*n:X -> ({ How many rivers are found in Colorado ? })({ answer( count( river( loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ How many rivers are there in })({ answer( count( river( loc_2( }) weight 0.0
*n:X -> ({ How many rivers are there in Idaho ? })({ answer( count( river( loc_2( stateid( 'idaho' }) weight 0.0
*n:X -> ({ How many rivers are there in Texas ? })({ answer( count( river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ How many rivers are there in US })({ answer( count( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many rivers are called })({ answer( count( river( riverid( }) weight 0.0
*n:X -> ({ How many rivers are called Colorado })({ answer( count( river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  How many rivers are *n:X#1  *t:Bound })({  answer( count( river( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ How many rivers in })({ answer( count( river( loc_2( }) weight 0.0
*n:X -> ({ How many rivers in })({ answer( count( intersection( river( loc_2( }) weight 0.0
*n:X -> ({ How many rivers in Texas })({ answer( count( intersection( river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ How many rivers in Washington ? })({ answer( count( river( loc_2( stateid( 'washington' }) weight 0.0
*n:Query -> ({ *t:Bound  How many rivers in *n:X#1  *t:Bound })({  answer( count( river( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ How many rivers does Alaska have ? })({ answer( count( river( loc_2( stateid( 'alaska' }) weight 0.0
*n:X -> ({ How many rivers does Colorado have ? })({ answer( count( river( loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ How many rivers do })({ answer( count( exclude( river( }) weight 0.0
*n:X -> ({ How many rivers do not traverse the })({ answer( count( exclude( river( all , traverse_2( }) weight 0.0
*n:X -> ({ How many rivers do not traverse the state })({ answer( count( exclude( river( all , traverse_2( state( }) weight 0.0
*n:X -> ({ How many rivers do not traverse the state with })({ answer( count( exclude( river( all , traverse_2( state( loc_1( }) weight 0.0
*n:Query -> ({ *t:Bound  How many rivers do *n:X#1  *t:Bound })({  answer( count( exclude( river( *n:X#1  }) weight 0.0
*n:X -> ({ How many rivers run through })({ answer( count( river( traverse_2( }) weight 0.0
*n:X -> ({ How many rivers run through Texas ? })({ answer( count( river( traverse_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ How many rivers run through the states })({ answer( count( river( traverse_2( state( }) weight 0.0
*n:X -> ({ How many rivers run through the states bordering })({ answer( count( river( traverse_2( state( next_to_2( }) weight 0.0
*n:X -> ({ How many rivers run through the states bordering Colorado ? })({ answer( count( river( traverse_2( state( next_to_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  How many rivers *n:X#1  *t:Bound })({  answer( count( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many rivers *n:X#1  *t:Bound })({  answer( count( intersection( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many rivers *n:X#1  *t:Bound })({  answer( count( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many rivers *n:X#1 bordering  *t:Bound })({  answer( count( river( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many rivers *n:X#1 Colorado  *t:Bound })({  answer( count( river( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many rivers *n:X#1 with  *t:Bound })({  answer( count( river( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many rivers *n:X#1 state  *t:Bound })({  answer( count( river( *n:X#1 state(  }) weight 0.0
*n:X -> ({ How many square kilometers })({ answer( area_1( countryid( }) weight 0.0
*n:X -> ({ How many square kilometers in the US })({ answer( area_1( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  How many square *n:X#1  *t:Bound })({  answer( *n:X#1 countryid(  }) weight 0.0
*n:X -> ({ How many people })({ answer( population_1( }) weight 0.0
*n:X -> ({ How many people are in the state of Nevada ? })({ answer( population_1( state( stateid( 'nevada' }) weight 0.0
*n:X -> ({ How many people are there in Iowa ? })({ answer( population_1( stateid( 'iowa' }) weight 0.0
*n:X -> ({ How many people are there in New York ? })({ answer( population_1( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  How many people are *n:X#1  *t:Bound })({  answer( population_1( *n:X#1  }) weight 0.0
*n:X -> ({ How many people in })({ answer( population_1( cityid( }) weight 0.0
*n:X -> ({ How many people in Boulder })({ answer( population_1( cityid( 'boulder', }) weight 0.0
*n:X -> ({ How many people in Boulder ? })({ answer( population_1( cityid( 'boulder', _ }) weight 0.0
*n:Query -> ({ *t:Bound  How many people in *n:X#1  *t:Bound })({  answer( population_1( cityid( *n:X#1  }) weight 0.0
*n:X -> ({ How many people lived in Austin })({ answer( population_1( cityid( 'austin', }) weight 0.0
*n:X -> ({ How many people lived in Austin ? })({ answer( population_1( cityid( 'austin', _ }) weight 0.0
*n:X -> ({ How many people reside in Utah ? })({ answer( population_1( stateid( 'utah' }) weight 0.0
*n:Query -> ({ *t:Bound  How many people reside *n:X#1  *t:Bound })({  answer( population_1( *n:X#1  }) weight 0.0
*n:X -> ({ How many people live })({ answer( population_1( }) weight 0.0
*n:X -> ({ How many people live in })({ answer( population_1( cityid( }) weight 0.0
*n:X -> ({ How many people live in California ? })({ answer( population_1( stateid( 'california' }) weight 0.0
*n:X -> ({ How many people live in Chicago })({ answer( population_1( cityid( 'chicago', }) weight 0.0
*n:X -> ({ How many people live in Chicago ? })({ answer( population_1( cityid( 'chicago', _ }) weight 0.0
*n:X -> ({ How many people live in Hawaii ? })({ answer( population_1( stateid( 'hawaii' }) weight 0.0
*n:X -> ({ How many people live in Rhode Island ? })({ answer( population_1( stateid( 'rhode island' }) weight 0.0
*n:X -> ({ How many people live in Detroit })({ answer( population_1( cityid( 'detroit', }) weight 0.0
*n:X -> ({ How many people live in Detroit ? })({ answer( population_1( cityid( 'detroit', _ }) weight 0.0
*n:X -> ({ How many people live in Austin })({ answer( population_1( cityid( 'austin', }) weight 0.0
*n:X -> ({ How many people live in Austin ? })({ answer( population_1( cityid( 'austin', _ }) weight 0.0
*n:X -> ({ How many people live in Austin Texas })({ answer( population_1( cityid( 'austin', 'tx' }) weight 0.0
*n:X -> ({ How many people live in Houston })({ answer( population_1( cityid( 'houston', }) weight 0.0
*n:X -> ({ How many people live in Houston ? })({ answer( population_1( cityid( 'houston', _ }) weight 0.0
*n:X -> ({ How many people live in Riverside })({ answer( population_1( cityid( 'riverside', }) weight 0.0
*n:X -> ({ How many people live in Riverside ? })({ answer( population_1( cityid( 'riverside', _ }) weight 0.0
*n:X -> ({ How many people live in Kansas ? })({ answer( population_1( stateid( 'kansas' }) weight 0.0
*n:X -> ({ How many people live in Texas ? })({ answer( population_1( stateid( 'texas' }) weight 0.0
*n:X -> ({ How many people live in Montana ? })({ answer( population_1( stateid( 'montana' }) weight 0.0
*n:X -> ({ How many people live in Minneapolis })({ answer( population_1( cityid( 'minneapolis', }) weight 0.0
*n:X -> ({ How many people live in Minneapolis Minnesota })({ answer( population_1( cityid( 'minneapolis', 'mn' }) weight 0.0
*n:X -> ({ How many people live in Washington })({ answer( population_1( cityid( 'washington', }) weight 0.0
*n:X -> ({ How many people live in Washington ? })({ answer( population_1( stateid( 'washington' }) weight 0.0
*n:X -> ({ How many people live in Washington DC })({ answer( population_1( cityid( 'washington', 'dc' }) weight 0.0
*n:X -> ({ How many people live in Kalamazoo })({ answer( population_1( cityid( 'kalamazoo', }) weight 0.0
*n:X -> ({ How many people live in Kalamazoo ? })({ answer( population_1( cityid( 'kalamazoo', _ }) weight 0.0
*n:X -> ({ How many people live in Mississippi ? })({ answer( population_1( stateid( 'mississippi' }) weight 0.0
*n:X -> ({ How many people live in New Mexico ? })({ answer( population_1( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ How many people live in New Hampshire ? })({ answer( population_1( stateid( 'new hampshire' }) weight 0.0
*n:X -> ({ How many people live in New York ? })({ answer( population_1( stateid( 'new york' }) weight 0.0
*n:X -> ({ How many people live in San })({ answer( population_1( cityid( 'san }) weight 0.0
*n:X -> ({ How many people live in San Francisco })({ answer( population_1( cityid( 'san francisco', }) weight 0.0
*n:X -> ({ How many people live in San Francisco ? })({ answer( population_1( cityid( 'san francisco', _ }) weight 0.0
*n:X -> ({ How many people live in South Dakota ? })({ answer( population_1( stateid( 'south dakota' }) weight 0.0
*n:X -> ({ How many people live in Spokane })({ answer( population_1( cityid( 'spokane', }) weight 0.0
*n:X -> ({ How many people live in Spokane Washington })({ answer( population_1( cityid( 'spokane', 'wa' }) weight 0.0
*n:X -> ({ How many people live in the United })({ answer( population_1( countryid( }) weight 0.0
*n:X -> ({ How many people live in the United States })({ answer( population_1( countryid( 'usa' }) weight 0.0
*n:X -> ({ How many people live in the capital })({ answer( population_1( capital( loc_2( }) weight 0.0
*n:X -> ({ How many people live in the capital of Georgia ? })({ answer( population_1( capital( loc_2( stateid( 'georgia' }) weight 0.0
*n:X -> ({ How many people live in the capital of Texas ? })({ answer( population_1( capital( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ How many people live in the biggest })({ answer( population_1( largest( }) weight 0.0
*n:X -> ({ How many people live in the biggest city })({ answer( population_1( largest( city( }) weight 0.0
*n:X -> ({ How many people live in the biggest city in })({ answer( population_1( largest( city( loc_2( }) weight 0.0
*n:X -> ({ How many people live in the smallest })({ answer( population_1( smallest( }) weight 0.0
*n:X -> ({ How many people live in the smallest state })({ answer( population_1( smallest( state( }) weight 0.0
*n:X -> ({ How many people live in the smallest state bordering })({ answer( population_1( smallest( state( next_to_2( }) weight 0.0
*n:Query -> ({ *t:Bound  How many people live *n:X#1  *t:Bound })({  answer( population_1( *n:X#1  }) weight 0.0
*n:X -> ({ How many people stay in Utah ? })({ answer( population_1( stateid( 'utah' }) weight 0.0
*n:Query -> ({ *t:Bound  How many people stay *n:X#1  *t:Bound })({  answer( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many people *n:X#1  *t:Bound })({  answer( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1  *t:Bound })({  answer( count( intersection( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1  *t:Bound })({  answer( count( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1  *t:Bound })({  answer( population_1( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 States  *t:Bound })({  answer( count( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 States  *t:Bound })({  answer( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Oregon ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Oregon *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Tennessee ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Tennessee *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Alaska ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Alaska *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 bordering  *t:Bound })({  answer( count( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 bordering  *t:Bound })({  answer( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 bordering *n:X#2  *t:Bound })({  answer( count( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Iowa ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Iowa *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 are  *t:Bound })({  answer( count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 are in  *t:Bound })({  answer( count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 are called  *t:Bound })({  answer( count( *n:X#1 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 are *n:X#2  *t:Bound })({  answer( count( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 are *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Colorado  *t:Bound })({  answer( count( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Colorado  *t:Bound })({  answer( count( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Colorado ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Colorado *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 ?  *t:Bound })({  answer( count( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 ?  *t:Bound })({  answer( count( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Hawaii ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Hawaii *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Austin  *t:Bound })({  answer( count( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Austin ?  *t:Bound })({  answer( count( *n:X#1 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Austin *n:X#2  *t:Bound })({  answer( count( *n:X#1 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Idaho ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Idaho *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 and  *t:Bound })({  answer( count( *n:X#1 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 and border  *t:Bound })({  answer( count( *n:X#1 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 and *n:X#2  *t:Bound })({  answer( count( *n:X#1 , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Utah ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Utah *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Texas ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Texas *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Washington ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Washington *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 USA  *t:Bound })({  answer( count( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 United  *t:Bound })({  answer( count( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 United States  *t:Bound })({  answer( count( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 United *n:X#2  *t:Bound })({  answer( count( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 capital  *t:Bound })({  answer( count( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 capital is  *t:Bound })({  answer( count( *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 capital *n:X#2  *t:Bound })({  answer( count( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 have  *t:Bound })({  answer( count( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 have ?  *t:Bound })({  answer( population_1( cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 have cities  *t:Bound })({  answer( count( *n:X#1 loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 have major  *t:Bound })({  answer( count( *n:X#1 loc_1( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 have a  *t:Bound })({  answer( count( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 have rivers  *t:Bound })({  answer( count( *n:X#1 loc_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 have *n:X#2  *t:Bound })({  answer( count( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 have *n:X#2  *t:Bound })({  answer( population_1( cityid( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Nebraska ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Nebraska *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 is  *t:Bound })({  answer( count( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 US  *t:Bound })({  answer( count( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Ohio ?  *t:Bound })({  answer( count( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Ohio *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 states  *t:Bound })({  answer( count( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 states bordering  *t:Bound })({  answer( count( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 states *n:X#2  *t:Bound })({  answer( count( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 in  *t:Bound })({  answer( count( intersection( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 in  *t:Bound })({  answer( count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 in  *t:Bound })({  answer( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 in  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 in Boulder  *t:Bound })({  answer( *n:X#1 cityid( 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 in the  *t:Bound })({  answer( count( intersection( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 in *n:X#2  *t:Bound })({  answer( count( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 in *n:X#2  *t:Bound })({  answer( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Springfield  *t:Bound })({  answer( count( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Springfield ?  *t:Bound })({  answer( count( *n:X#1 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 Springfield *n:X#2  *t:Bound })({  answer( count( *n:X#1 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 border  *t:Bound })({  answer( count( *n:X#1 intersection( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 border  *t:Bound })({  answer( count( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 border at  *t:Bound })({  answer( count( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 border *n:X#2  *t:Bound })({  answer( count( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 found *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 cities  *t:Bound })({  answer( count( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 cities are  *t:Bound })({  answer( count( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 cities named  *t:Bound })({  answer( count( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 cities *n:X#2  *t:Bound })({  answer( count( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 not  *t:Bound })({  answer( count( *n:X#1 all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 there ?  *t:Bound })({  answer( count( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 there *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 does  *t:Bound })({  answer( count( intersection( *n:X#1 ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 does  *t:Bound })({  answer( count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 does  *t:Bound })({  answer( count( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 does  *t:Bound })({  answer( count( *n:X#1 next_to_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 does the  *t:Bound })({  answer( count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 does *n:X#2  *t:Bound })({  answer( count( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 does *n:X#2  *t:Bound })({  answer( count( *n:X#1 next_to_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 reside *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 cross  *t:Bound })({  answer( count( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 cross *n:X#2  *t:Bound })({  answer( count( *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 river  *t:Bound })({  answer( count( intersection( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 live in  *t:Bound })({  answer( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 called Rochester  *t:Bound })({  answer( count( *n:X#1 cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 called *n:X#2  *t:Bound })({  answer( count( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 or *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 major  *t:Bound })({  answer( count( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 major rivers  *t:Bound })({  answer( count( *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 major *n:X#2  *t:Bound })({  answer( count( *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 city  *t:Bound })({  answer( count( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 city  *t:Bound })({  answer( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 city in  *t:Bound })({  answer( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 city named  *t:Bound })({  answer( count( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 city *n:X#2  *t:Bound })({  answer( count( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 city *n:X#2  *t:Bound })({  answer( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 named  *t:Bound })({  answer( count( intersection( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 named  *t:Bound })({  answer( count( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 named Austin  *t:Bound })({  answer( count( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 named Springfield  *t:Bound })({  answer( count( *n:X#1 cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 named *n:X#2  *t:Bound })({  answer( count( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 with  *t:Bound })({  answer( count( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 do  *t:Bound })({  answer( count( exclude( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 do *n:X#2  *t:Bound })({  answer( count( exclude( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 rivers  *t:Bound })({  answer( count( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 rivers are  *t:Bound })({  answer( count( river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 rivers ?  *t:Bound })({  answer( count( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 rivers cross  *t:Bound })({  answer( count( *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 rivers *n:X#2  *t:Bound })({  answer( count( river( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 rivers *n:X#2  *t:Bound })({  answer( count( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 kilometers  *t:Bound })({  answer( area_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 run through  *t:Bound })({  answer( count( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 population  *t:Bound })({  answer( count( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 stay *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 whose  *t:Bound })({  answer( count( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 whose capital  *t:Bound })({  answer( count( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 whose *n:X#2  *t:Bound })({  answer( count( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 state  *t:Bound })({  answer( count( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 state  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 state bordering  *t:Bound })({  answer( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 state ?  *t:Bound })({  answer( count( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 state with  *t:Bound })({  answer( count( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 state *n:X#2  *t:Bound })({  answer( count( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 state *n:X#2  *t:Bound })({  answer( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 the highest  *t:Bound })({  answer( count( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 the states  *t:Bound })({  answer( count( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 the largest  *t:Bound })({  answer( count( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 the shortest  *t:Bound })({  answer( count( intersection( *n:X#1 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 the *n:X#2  *t:Bound })({  answer( count( intersection( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How many *n:X#1 the *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1  *t:Bound })({  answer( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 States  *t:Bound })({  answer( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Oregon ?  *t:Bound })({  answer( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Oregon *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Tennessee ?  *t:Bound })({  answer( *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Tennessee border ?  *t:Bound })({  answer( *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Tennessee border *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Tennessee *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Alaska ?  *t:Bound })({  answer( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Alaska *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 bordering  *t:Bound })({  answer( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 bordering Colorado ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 bordering Colorado *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 bordering Utah ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 bordering Utah *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 bordering Nebraska ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 bordering Nebraska *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 bordering *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 bordering *n:X#2 ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Chicago  *t:Bound })({  answer( *n:X#1 'chicago',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Chicago ?  *t:Bound })({  answer( *n:X#1 'chicago', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Chicago *n:X#2  *t:Bound })({  answer( *n:X#1 'chicago', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Boulder  *t:Bound })({  answer( *n:X#1 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Boulder ?  *t:Bound })({  answer( *n:X#1 'boulder', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Boulder *n:X#2  *t:Bound })({  answer( *n:X#1 'boulder', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Iowa ?  *t:Bound })({  answer( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Iowa border ?  *t:Bound })({  answer( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Iowa border *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Iowa *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are in  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are in states  *t:Bound })({  answer( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are in the  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are in *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are found *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are there ?  *t:Bound })({  answer( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are there in  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are there *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are called  *t:Bound })({  answer( *n:X#1 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are called Colorado  *t:Bound })({  answer( *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are called *n:X#2  *t:Bound })({  answer( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are the highest  *t:Bound })({  answer( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are the *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 are *n:X#2 major  *t:Bound })({  answer( *n:X#1 *n:X#2 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Colorado  *t:Bound })({  answer( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Colorado  *t:Bound })({  answer( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Colorado ?  *t:Bound })({  answer( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Colorado and  *t:Bound })({  answer( *n:X#1 stateid( 'colorado' ,  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Colorado rivers are  *t:Bound })({  answer( *n:X#1 river( riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Colorado rivers *n:X#2  *t:Bound })({  answer( *n:X#1 river( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Colorado *n:X#2  *t:Bound })({  answer( *n:X#1 stateid( 'colorado' *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Colorado *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Colorado *n:X#2 are  *t:Bound })({  answer( *n:X#1 *n:X#2 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 ?  *t:Bound })({  answer( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 ?  *t:Bound })({  answer( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Hawaii ?  *t:Bound })({  answer( *n:X#1 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Hawaii *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Detroit  *t:Bound })({  answer( *n:X#1 'detroit',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Detroit ?  *t:Bound })({  answer( *n:X#1 'detroit', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Detroit *n:X#2  *t:Bound })({  answer( *n:X#1 'detroit', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Austin  *t:Bound })({  answer( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Austin ?  *t:Bound })({  answer( *n:X#1 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Austin Texas  *t:Bound })({  answer( *n:X#1 'austin', 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Austin *n:X#2  *t:Bound })({  answer( *n:X#1 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Minnesota  *t:Bound })({  answer( *n:X#1 'mn'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Houston  *t:Bound })({  answer( *n:X#1 'houston',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Houston ?  *t:Bound })({  answer( *n:X#1 'houston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Houston *n:X#2  *t:Bound })({  answer( *n:X#1 'houston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Francisco  *t:Bound })({  answer( *n:X#1 francisco',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Francisco ?  *t:Bound })({  answer( *n:X#1 francisco', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Francisco *n:X#2  *t:Bound })({  answer( *n:X#1 francisco', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 DC  *t:Bound })({  answer( *n:X#1 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Riverside  *t:Bound })({  answer( *n:X#1 'riverside',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Riverside ?  *t:Bound })({  answer( *n:X#1 'riverside', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Riverside *n:X#2  *t:Bound })({  answer( *n:X#1 'riverside', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Idaho ?  *t:Bound })({  answer( *n:X#1 stateid( 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Idaho *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 and  *t:Bound })({  answer( *n:X#1 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 and border  *t:Bound })({  answer( *n:X#1 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 and *n:X#2  *t:Bound })({  answer( *n:X#1 , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Utah ?  *t:Bound })({  answer( *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Utah *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Texas  *t:Bound })({  answer( *n:X#1 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Texas  *t:Bound })({  answer( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Texas ?  *t:Bound })({  answer( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Texas *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Minneapolis  *t:Bound })({  answer( *n:X#1 'minneapolis',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Minneapolis Minnesota  *t:Bound })({  answer( *n:X#1 'minneapolis', 'mn'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Minneapolis *n:X#2  *t:Bound })({  answer( *n:X#1 'minneapolis', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Washington  *t:Bound })({  answer( *n:X#1 'washington',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Washington  *t:Bound })({  answer( *n:X#1 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Washington ?  *t:Bound })({  answer( *n:X#1 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Washington DC  *t:Bound })({  answer( *n:X#1 'washington', 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Washington *n:X#2  *t:Bound })({  answer( *n:X#1 'washington', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Washington *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 USA  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 United  *t:Bound })({  answer( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 United States  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 United *n:X#2  *t:Bound })({  answer( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 capital  *t:Bound })({  answer( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 capital is  *t:Bound })({  answer( *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 capital *n:X#2  *t:Bound })({  answer( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have  *t:Bound })({  answer( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have ?  *t:Bound })({  answer( population_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have cities  *t:Bound })({  answer( *n:X#1 loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have cities named  *t:Bound })({  answer( *n:X#1 loc_1( city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have cities *n:X#2  *t:Bound })({  answer( *n:X#1 loc_1( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have major  *t:Bound })({  answer( *n:X#1 loc_1( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have major rivers  *t:Bound })({  answer( *n:X#1 loc_1( major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have major *n:X#2  *t:Bound })({  answer( *n:X#1 loc_1( major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have a  *t:Bound })({  answer( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have a city  *t:Bound })({  answer( *n:X#1 loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have a *n:X#2  *t:Bound })({  answer( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have rivers  *t:Bound })({  answer( *n:X#1 loc_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have rivers ?  *t:Bound })({  answer( *n:X#1 loc_1( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have rivers *n:X#2  *t:Bound })({  answer( *n:X#1 loc_1( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have *n:X#2  *t:Bound })({  answer( population_1( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have *n:X#2  *t:Bound })({  answer( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have *n:X#2 ?  *t:Bound })({  answer( *n:X#1 loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have *n:X#2 ?  *t:Bound })({  answer( *n:X#1 loc_1( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have *n:X#2 Austin  *t:Bound })({  answer( *n:X#1 loc_1( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have *n:X#2 named  *t:Bound })({  answer( *n:X#1 loc_1( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 have *n:X#2 rivers  *t:Bound })({  answer( *n:X#1 loc_1( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Kalamazoo  *t:Bound })({  answer( *n:X#1 'kalamazoo',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Kalamazoo ?  *t:Bound })({  answer( *n:X#1 'kalamazoo', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Kalamazoo *n:X#2  *t:Bound })({  answer( *n:X#1 'kalamazoo', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Nebraska ?  *t:Bound })({  answer( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Nebraska *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Missouri border ?  *t:Bound })({  answer( *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Missouri border *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 San  *t:Bound })({  answer( *n:X#1 'san  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 San Francisco  *t:Bound })({  answer( *n:X#1 'san francisco',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 San Francisco ?  *t:Bound })({  answer( *n:X#1 'san francisco', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 San Francisco *n:X#2  *t:Bound })({  answer( *n:X#1 'san francisco', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 San *n:X#2  *t:Bound })({  answer( *n:X#1 'san *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 San *n:X#2 ?  *t:Bound })({  answer( *n:X#1 'san *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is  *t:Bound })({  answer( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Alaska ?  *t:Bound })({  answer( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Mount  *t:Bound })({  answer( *n:X#1 placeid( 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Mount McKinley  *t:Bound })({  answer( *n:X#1 placeid( 'mount mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Mount *n:X#2  *t:Bound })({  answer( *n:X#1 placeid( 'mount *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Guadalupe  *t:Bound })({  answer( *n:X#1 placeid( 'guadalupe  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Guadalupe Peak  *t:Bound })({  answer( *n:X#1 placeid( 'guadalupe peak'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Guadalupe *n:X#2  *t:Bound })({  answer( *n:X#1 placeid( 'guadalupe *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Rio  *t:Bound })({  answer( *n:X#1 riverid( 'rio  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Rio Grande  *t:Bound })({  answer( *n:X#1 riverid( 'rio grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Rio *n:X#2  *t:Bound })({  answer( *n:X#1 riverid( 'rio *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Texas ?  *t:Bound })({  answer( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is Massachusetts ?  *t:Bound })({  answer( *n:X#1 stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is the  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is the highest  *t:Bound })({  answer( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is the Mississippi  *t:Bound })({  answer( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is the longest  *t:Bound })({  answer( *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is the largest  *t:Bound })({  answer( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is the shortest  *t:Bound })({  answer( *n:X#1 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is the city  *t:Bound })({  answer( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is the *n:X#2  *t:Bound })({  answer( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is the *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is the *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is *n:X#2  *t:Bound })({  answer( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is *n:X#2  *t:Bound })({  answer( *n:X#1 placeid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is *n:X#2 ?  *t:Bound })({  answer( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is *n:X#2 McKinley  *t:Bound })({  answer( *n:X#1 *n:X#2 mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is *n:X#2 Grande  *t:Bound })({  answer( *n:X#1 riverid( *n:X#2 grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 is *n:X#2 Peak  *t:Bound })({  answer( *n:X#1 placeid( *n:X#2 peak'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 US  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 US does  *t:Bound })({  answer( *n:X#1 countryid( 'usa' ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 US *n:X#2  *t:Bound })({  answer( *n:X#1 countryid( 'usa' *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Ohio ?  *t:Bound })({  answer( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Ohio *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states  *t:Bound })({  answer( *n:X#1 intersection( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states bordering  *t:Bound })({  answer( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states bordering *n:X#2  *t:Bound })({  answer( *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states have  *t:Bound })({  answer( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states have cities  *t:Bound })({  answer( *n:X#1 state( loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states have major  *t:Bound })({  answer( *n:X#1 state( loc_1( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states have a  *t:Bound })({  answer( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states have *n:X#2  *t:Bound })({  answer( *n:X#1 state( loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states in the  *t:Bound })({  answer( *n:X#1 intersection( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states border  *t:Bound })({  answer( *n:X#1 state( intersection( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states border  *t:Bound })({  answer( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states border at  *t:Bound })({  answer( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states border *n:X#2  *t:Bound })({  answer( *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states does  *t:Bound })({  answer( *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states does  *t:Bound })({  answer( *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states does  *t:Bound })({  answer( *n:X#1 state( next_to_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states does *n:X#2  *t:Bound })({  answer( *n:X#1 state( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states does *n:X#2  *t:Bound })({  answer( *n:X#1 state( next_to_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states do  *t:Bound })({  answer( *n:X#1 exclude( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2  *t:Bound })({  answer( *n:X#1 intersection( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2  *t:Bound })({  answer( *n:X#1 state( intersection( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2  *t:Bound })({  answer( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 States  *t:Bound })({  answer( *n:X#1 state( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 ?  *t:Bound })({  answer( *n:X#1 state( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 ?  *t:Bound })({  answer( *n:X#1 state( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 Austin  *t:Bound })({  answer( *n:X#1 state( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 United  *t:Bound })({  answer( *n:X#1 state( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 capital  *t:Bound })({  answer( *n:X#1 state( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 is  *t:Bound })({  answer( *n:X#1 state( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 Springfield  *t:Bound })({  answer( *n:X#1 state( *n:X#2 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 cities  *t:Bound })({  answer( *n:X#1 state( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 major  *t:Bound })({  answer( *n:X#1 state( *n:X#2 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 city  *t:Bound })({  answer( *n:X#1 state( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 named  *t:Bound })({  answer( *n:X#1 state( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 rivers  *t:Bound })({  answer( *n:X#1 state( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 population  *t:Bound })({  answer( *n:X#1 state( *n:X#2 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 whose  *t:Bound })({  answer( *n:X#1 state( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 states *n:X#2 state  *t:Bound })({  answer( *n:X#1 state( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Arizona ?  *t:Bound })({  answer( *n:X#1 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Louisiana ?  *t:Bound })({  answer( *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Iowa ?  *t:Bound })({  answer( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Colorado ?  *t:Bound })({  answer( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Florida ?  *t:Bound })({  answer( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Texas  *t:Bound })({  answer( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Texas ?  *t:Bound })({  answer( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Montana ?  *t:Bound })({  answer( *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Washington ?  *t:Bound })({  answer( *n:X#1 loc_2( stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Washington *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Pennsylvania ?  *t:Bound })({  answer( *n:X#1 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in Missouri ?  *t:Bound })({  answer( *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in the  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in the US  *t:Bound })({  answer( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in the *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in *n:X#2 ?  *t:Bound })({  answer( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 in *n:X#2 ?  *t:Bound })({  answer( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Springfield  *t:Bound })({  answer( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Springfield ?  *t:Bound })({  answer( *n:X#1 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Springfield *n:X#2  *t:Bound })({  answer( *n:X#1 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border  *t:Bound })({  answer( *n:X#1 intersection( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border  *t:Bound })({  answer( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border Tennessee ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border Tennessee *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border Alaska ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border Alaska *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border Iowa ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border Iowa *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border Hawaii ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border Hawaii *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border Texas ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border Texas *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border at  *t:Bound })({  answer( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border the largest  *t:Bound })({  answer( *n:X#1 next_to_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border the *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 border *n:X#2 ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Spokane  *t:Bound })({  answer( *n:X#1 'spokane',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Spokane Washington  *t:Bound })({  answer( *n:X#1 'spokane', 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 Spokane *n:X#2  *t:Bound })({  answer( *n:X#1 'spokane', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 big cities are  *t:Bound })({  answer( *n:X#1 major( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 big *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 big *n:X#2 are  *t:Bound })({  answer( *n:X#1 major( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 found *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities  *t:Bound })({  answer( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities are  *t:Bound })({  answer( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities are in  *t:Bound })({  answer( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities are *n:X#2  *t:Bound })({  answer( *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities does the  *t:Bound })({  answer( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities or *n:X#2  *t:Bound })({  answer( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities named  *t:Bound })({  answer( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities named  *t:Bound })({  answer( *n:X#1 intersection( city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities named Austin  *t:Bound })({  answer( *n:X#1 city( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities named *n:X#2  *t:Bound })({  answer( *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities *n:X#2  *t:Bound })({  answer( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities *n:X#2 States  *t:Bound })({  answer( *n:X#1 city( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities *n:X#2 bordering  *t:Bound })({  answer( *n:X#1 city( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities *n:X#2 ?  *t:Bound })({  answer( *n:X#1 city( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities *n:X#2 Austin  *t:Bound })({  answer( *n:X#1 city( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities *n:X#2 United  *t:Bound })({  answer( *n:X#1 city( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cities *n:X#2 states  *t:Bound })({  answer( *n:X#1 city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 not  *t:Bound })({  answer( *n:X#1 all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 not have  *t:Bound })({  answer( *n:X#1 all , loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 not traverse the  *t:Bound })({  answer( *n:X#1 all , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 not traverse *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 not *n:X#2  *t:Bound })({  answer( *n:X#1 all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 not *n:X#2 the  *t:Bound })({  answer( *n:X#1 all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 there ?  *t:Bound })({  answer( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 there *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does  *t:Bound })({  answer( *n:X#1 ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does  *t:Bound })({  answer( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does  *t:Bound })({  answer( *n:X#1 next_to_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does USA  *t:Bound })({  answer( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does the  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does the USA  *t:Bound })({  answer( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does the shortest  *t:Bound })({  answer( *n:X#1 ,traverse_1( shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does the *n:X#2  *t:Bound })({  answer( *n:X#1 ,traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does the *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does the *n:X#2  *t:Bound })({  answer( *n:X#1 traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 does *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 capitals  *t:Bound })({  answer( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 capitals *n:X#2  *t:Bound })({  answer( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cross  *t:Bound })({  answer( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cross Ohio ?  *t:Bound })({  answer( *n:X#1 traverse_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cross Ohio *n:X#2  *t:Bound })({  answer( *n:X#1 traverse_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cross *n:X#2  *t:Bound })({  answer( *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 cross *n:X#2 ?  *t:Bound })({  answer( *n:X#1 traverse_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 river  *t:Bound })({  answer( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 called Rochester  *t:Bound })({  answer( *n:X#1 cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 called Rochester ?  *t:Bound })({  answer( *n:X#1 cityid( 'rochester', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 called Rochester *n:X#2  *t:Bound })({  answer( *n:X#1 cityid( 'rochester', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 called *n:X#2  *t:Bound })({  answer( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 called *n:X#2 ?  *t:Bound })({  answer( *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 or *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 or *n:X#2 ?  *t:Bound })({  answer( *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major  *t:Bound })({  answer( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major cities  *t:Bound })({  answer( *n:X#1 major( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major cities are  *t:Bound })({  answer( *n:X#1 major( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major cities are  *t:Bound })({  answer( *n:X#1 major( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major cities *n:X#2  *t:Bound })({  answer( *n:X#1 major( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major rivers  *t:Bound })({  answer( *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major rivers ?  *t:Bound })({  answer( *n:X#1 major( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major rivers cross  *t:Bound })({  answer( *n:X#1 major( river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major rivers *n:X#2  *t:Bound })({  answer( *n:X#1 major( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major *n:X#2  *t:Bound })({  answer( *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major *n:X#2 bordering  *t:Bound })({  answer( *n:X#1 major( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major *n:X#2 are  *t:Bound })({  answer( *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major *n:X#2 are  *t:Bound })({  answer( *n:X#1 major( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major *n:X#2 ?  *t:Bound })({  answer( *n:X#1 major( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major *n:X#2 states  *t:Bound })({  answer( *n:X#1 major( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 major *n:X#2 cross  *t:Bound })({  answer( *n:X#1 major( *n:X#2 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 city  *t:Bound })({  answer( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 city called Rochester  *t:Bound })({  answer( *n:X#1 city( cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 city called *n:X#2  *t:Bound })({  answer( *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 city named  *t:Bound })({  answer( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 city named Springfield  *t:Bound })({  answer( *n:X#1 city( cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 city named *n:X#2  *t:Bound })({  answer( *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 city *n:X#2  *t:Bound })({  answer( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 city *n:X#2 ?  *t:Bound })({  answer( *n:X#1 city( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 city *n:X#2 Springfield  *t:Bound })({  answer( *n:X#1 city( *n:X#2 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 points  *t:Bound })({  answer( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 points of *n:X#2  *t:Bound })({  answer( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 named  *t:Bound })({  answer( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 named Austin  *t:Bound })({  answer( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 named Austin ?  *t:Bound })({  answer( *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 named Austin *n:X#2  *t:Bound })({  answer( *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 named Springfield  *t:Bound })({  answer( *n:X#1 cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 named Springfield ?  *t:Bound })({  answer( *n:X#1 cityid( 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 named Springfield *n:X#2  *t:Bound })({  answer( *n:X#1 cityid( 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 named *n:X#2  *t:Bound })({  answer( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 named *n:X#2 ?  *t:Bound })({  answer( *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 inhabitants does Montgomery  *t:Bound })({  answer( population_1( *n:X#1 'montgomery',  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 with  *t:Bound })({  answer( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 with the highest  *t:Bound })({  answer( *n:X#1 loc_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 with the *n:X#2  *t:Bound })({  answer( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 of all the  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 of *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 of *n:X#2 states  *t:Bound })({  answer( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers  *t:Bound })({  answer( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers  *t:Bound })({  answer( *n:X#1 intersection( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers are  *t:Bound })({  answer( *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers are called  *t:Bound })({  answer( *n:X#1 river( riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers are *n:X#2  *t:Bound })({  answer( *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers ?  *t:Bound })({  answer( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers in  *t:Bound })({  answer( *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers in  *t:Bound })({  answer( *n:X#1 intersection( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers in *n:X#2  *t:Bound })({  answer( *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers cross  *t:Bound })({  answer( *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers cross *n:X#2  *t:Bound })({  answer( *n:X#1 river( traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers do  *t:Bound })({  answer( *n:X#1 exclude( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers do *n:X#2  *t:Bound })({  answer( *n:X#1 exclude( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers run through  *t:Bound })({  answer( *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers *n:X#2  *t:Bound })({  answer( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers *n:X#2  *t:Bound })({  answer( *n:X#1 intersection( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers *n:X#2 bordering  *t:Bound })({  answer( *n:X#1 river( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers *n:X#2 Colorado  *t:Bound })({  answer( *n:X#1 river( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers *n:X#2 with  *t:Bound })({  answer( *n:X#1 river( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 rivers *n:X#2 state  *t:Bound })({  answer( *n:X#1 river( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 run through  *t:Bound })({  answer( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 run through *n:X#2  *t:Bound })({  answer( *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 population  *t:Bound })({  answer( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 higher point than  *t:Bound })({  answer( *n:X#1 place( higher_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 higher *n:X#2 than  *t:Bound })({  answer( *n:X#1 *n:X#2 higher_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 whose  *t:Bound })({  answer( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 whose capital  *t:Bound })({  answer( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 whose capital is  *t:Bound })({  answer( *n:X#1 loc_1( capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 whose capital *n:X#2  *t:Bound })({  answer( *n:X#1 loc_1( capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 whose *n:X#2  *t:Bound })({  answer( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 whose *n:X#2 is  *t:Bound })({  answer( *n:X#1 loc_1( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 on the state  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 on the *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 state  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 state ?  *t:Bound })({  answer( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 state with  *t:Bound })({  answer( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 state *n:X#2  *t:Bound })({  answer( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the Colorado *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the highest  *t:Bound })({  answer( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the Mississippi river  *t:Bound })({  answer( *n:X#1 river( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the Mississippi run  *t:Bound })({  answer( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the Mississippi *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the Mississippi *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the Missouri *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the states  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the states bordering  *t:Bound })({  answer( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the states *n:X#2  *t:Bound })({  answer( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the largest  *t:Bound })({  answer( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the largest state  *t:Bound })({  answer( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the largest *n:X#2  *t:Bound })({  answer( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the shortest  *t:Bound })({  answer( *n:X#1 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the shortest river  *t:Bound })({  answer( *n:X#1 shortest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the shortest *n:X#2  *t:Bound })({  answer( *n:X#1 shortest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the state *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the *n:X#2 bordering  *t:Bound })({  answer( *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the *n:X#2 ?  *t:Bound })({  answer( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the *n:X#2 river  *t:Bound })({  answer( *n:X#1 river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the *n:X#2 river  *t:Bound })({  answer( *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the *n:X#2 run  *t:Bound })({  answer( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  How *n:X#1 the *n:X#2 state  *t:Bound })({  answer( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:X -> ({ New })({ 'new }) weight 0.0
*n:X -> ({ New Mexico })({ 'new mexico' }) weight 0.0
*n:X -> ({ New Mexico ? })({ stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  New Mexico *n:X#1  *t:Bound })({  *n:X#1 'new mexico'  }) weight 0.0
*n:X -> ({ New Jersey })({ 'new jersey' }) weight 0.0
*n:X -> ({ New Hampshire })({ 'new hampshire' }) weight 0.0
*n:X -> ({ New York })({ 'new york', }) weight 0.0
*n:X -> ({ New York })({ 'new york' }) weight 0.0
*n:X -> ({ New York ? })({ 'new york', _ }) weight 0.0
*n:X -> ({ New York ? })({ stateid( 'new york' }) weight 0.0
*n:X -> ({ New York City })({ 'new york', }) weight 0.0
*n:X -> ({ New York City ? })({ 'new york', _ }) weight 0.0
*n:Query -> ({ *t:Bound  New York City *n:X#1  *t:Bound })({  'new york', *n:X#1  }) weight 0.0
*n:X -> ({ New York state ? })({ state( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  New York state *n:X#1  *t:Bound })({  state( *n:X#1 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  New York *n:X#1  *t:Bound })({  'new york', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  New York *n:X#1  *t:Bound })({  *n:X#1 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  New York *n:X#1 ?  *t:Bound })({  *n:X#1 stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  New *n:X#1  *t:Bound })({  'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  New *n:X#1 ?  *t:Bound })({  'new *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  New *n:X#1 ?  *t:Bound })({  stateid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  New *n:X#1 state ?  *t:Bound })({  state( stateid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  New *n:X#1 state *n:X#2  *t:Bound })({  state( *n:X#2 'new *n:X#1  }) weight 0.0
*n:X -> ({ San })({ 'san }) weight 0.0
*n:X -> ({ San Antonio })({ 'san antonio', }) weight 0.0
*n:X -> ({ San Antonio ? })({ 'san antonio', _ }) weight 0.0
*n:X -> ({ San Antonio is in what state })({ answer( state( loc_1( cityid( 'san antonio', }) weight 0.0
*n:X -> ({ San Antonio is in what state ? })({ answer( state( loc_1( cityid( 'san antonio', _ }) weight 0.0
*n:Query -> ({ *t:Bound  San Antonio *n:X#1  *t:Bound })({  'san antonio', *n:X#1  }) weight 0.0
*n:X -> ({ San Francisco })({ 'san francisco', }) weight 0.0
*n:X -> ({ San Francisco ? })({ 'san francisco', _ }) weight 0.0
*n:Query -> ({ *t:Bound  San Francisco *n:X#1  *t:Bound })({  'san francisco', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  San *n:X#1  *t:Bound })({  'san *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  San *n:X#1 ?  *t:Bound })({  'san *n:X#1 _  }) weight 0.0
*n:X -> ({ US })({ 'usa' }) weight 0.0
*n:X -> ({ US })({ countryid( 'usa' }) weight 0.0
*n:X -> ({ US does })({ countryid( 'usa' ,traverse_1( }) weight 0.0
*n:X -> ({ US does the shortest })({ countryid( 'usa' ,traverse_1( shortest( }) weight 0.0
*n:X -> ({ US does the shortest river })({ countryid( 'usa' ,traverse_1( shortest( river( }) weight 0.0
*n:X -> ({ US does the shortest river run through ? })({ countryid( 'usa' ,traverse_1( shortest( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  US does the shortest *n:X#1  *t:Bound })({  countryid( 'usa' ,traverse_1( shortest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  US does the *n:X#1  *t:Bound })({  countryid( 'usa' ,traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  US does the *n:X#1 river  *t:Bound })({  countryid( 'usa' ,traverse_1( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  US *n:X#1  *t:Bound })({  countryid( 'usa' *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  US *n:X#1 river  *t:Bound })({  countryid( 'usa' *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  US *n:X#1 run through ?  *t:Bound })({  countryid( 'usa' *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  US *n:X#1 run through *n:X#2  *t:Bound })({  countryid( 'usa' *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  US *n:X#1 the shortest  *t:Bound })({  countryid( 'usa' *n:X#1 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  US *n:X#1 the shortest river  *t:Bound })({  countryid( 'usa' *n:X#1 shortest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  US *n:X#1 the shortest *n:X#2  *t:Bound })({  countryid( 'usa' *n:X#1 shortest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  US *n:X#1 the *n:X#2  *t:Bound })({  countryid( 'usa' *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  US *n:X#1 the *n:X#2 river  *t:Bound })({  countryid( 'usa' *n:X#1 *n:X#2 river(  }) weight 0.0
*n:X -> ({ big })({ size( }) weight 0.0
*n:X -> ({ big is Alaska ? })({ size( stateid( 'alaska' }) weight 0.0
*n:X -> ({ big is North Dakota ? })({ size( stateid( 'north dakota' }) weight 0.0
*n:Query -> ({ *t:Bound  big is North *n:X#1 ?  *t:Bound })({  size( stateid( 'north *n:X#1  }) weight 0.0
*n:X -> ({ big is Texas ? })({ size( stateid( 'texas' }) weight 0.0
*n:X -> ({ big is Massachusetts ? })({ size( stateid( 'massachusetts' }) weight 0.0
*n:X -> ({ big is New Mexico ? })({ size( stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  big is New *n:X#1 ?  *t:Bound })({  size( stateid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  big is *n:X#1 Mexico ?  *t:Bound })({  size( stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  big is *n:X#1 ?  *t:Bound })({  size( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  big is *n:X#1 Dakota ?  *t:Bound })({  size( stateid( *n:X#1 dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  big *n:X#1  *t:Bound })({  size( *n:X#1  }) weight 0.0
*n:X -> ({ cross })({ traverse_2( }) weight 0.0
*n:X -> ({ cross Ohio ? })({ traverse_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  cross Ohio *n:X#1  *t:Bound })({  traverse_2( *n:X#1 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  cross *n:X#1  *t:Bound })({  traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cross *n:X#1 ?  *t:Bound })({  traverse_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ flow })({ riverid( }) weight 0.0
*n:X -> ({ how })({ next_to_1( }) weight 0.0
*n:X -> ({ how many states })({ count( state( next_to_1( }) weight 0.0
*n:X -> ({ how many states ? })({ count( state( next_to_1( stateid( }) weight 0.0
*n:Query -> ({ *t:Bound  how many states *n:X#1  *t:Bound })({  count( state( next_to_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  how many *n:X#1  *t:Bound })({  count( *n:X#1 next_to_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  how many *n:X#1 ?  *t:Bound })({  count( *n:X#1 next_to_1( stateid(  }) weight 0.0
*n:Query -> ({ *t:Bound  how *n:X#1  *t:Bound })({  *n:X#1 next_to_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  how *n:X#1 ?  *t:Bound })({  *n:X#1 next_to_1( stateid(  }) weight 0.0
*n:Query -> ({ *t:Bound  how *n:X#1 states  *t:Bound })({  *n:X#1 state( next_to_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  how *n:X#1 states ?  *t:Bound })({  *n:X#1 state( next_to_1( stateid(  }) weight 0.0
*n:Query -> ({ *t:Bound  how *n:X#1 states *n:X#2  *t:Bound })({  *n:X#1 state( next_to_1( *n:X#2  }) weight 0.0
*n:X -> ({ point })({ place( }) weight 0.0
*n:X -> ({ point ? })({ place( all }) weight 0.0
*n:X -> ({ point is sea })({ place( elevation_2( }) weight 0.0
*n:X -> ({ point is sea level })({ place( elevation_2( 0 }) weight 0.0
*n:Query -> ({ *t:Bound  point is sea *n:X#1  *t:Bound })({  place( elevation_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point is *n:X#1  *t:Bound })({  place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point is *n:X#1 level  *t:Bound })({  place( *n:X#1 0  }) weight 0.0
*n:X -> ({ point in })({ place( loc_2( }) weight 0.0
*n:X -> ({ point in Oregon ? })({ place( loc_2( stateid( 'oregon' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Oregon *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'oregon'  }) weight 0.0
*n:X -> ({ point in California ? })({ place( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  point in California *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ point in Delaware ? })({ place( loc_2( stateid( 'delaware' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Delaware *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'delaware'  }) weight 0.0
*n:X -> ({ point in Louisiana ? })({ place( loc_2( stateid( 'louisiana' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Louisiana *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'louisiana'  }) weight 0.0
*n:X -> ({ point in America })({ place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ point in Arkansas ? })({ place( loc_2( stateid( 'arkansas' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Arkansas *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'arkansas'  }) weight 0.0
*n:X -> ({ point in Iowa ? })({ place( loc_2( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Iowa *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ point in Colorado ? })({ place( loc_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Colorado *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'colorado'  }) weight 0.0
*n:X -> ({ point in Rhode Island ? })({ place( loc_2( stateid( 'rhode island' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Rhode Island *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  point in Rhode *n:X#1 ?  *t:Bound })({  place( loc_2( stateid( 'rhode *n:X#1  }) weight 0.0
*n:X -> ({ point in Virginia ? })({ place( loc_2( stateid( 'virginia' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Virginia *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'virginia'  }) weight 0.0
*n:X -> ({ point in Florida ? })({ place( loc_2( stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Florida *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'florida'  }) weight 0.0
*n:X -> ({ point in Wisconsin ? })({ place( loc_2( stateid( 'wisconsin' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Wisconsin *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'wisconsin'  }) weight 0.0
*n:X -> ({ point in Maine ? })({ place( loc_2( stateid( 'maine' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Maine *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'maine'  }) weight 0.0
*n:X -> ({ point in Kansas ? })({ place( loc_2( stateid( 'kansas' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Kansas *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'kansas'  }) weight 0.0
*n:X -> ({ point in Texas ? })({ place( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Texas *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ point in Montana ? })({ place( loc_2( stateid( 'montana' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Montana *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'montana'  }) weight 0.0
*n:X -> ({ point in Massachusetts ? })({ place( loc_2( stateid( 'massachusetts' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Massachusetts *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'massachusetts'  }) weight 0.0
*n:X -> ({ point in USA })({ place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ point in Mississippi ? })({ place( loc_2( stateid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Mississippi *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'mississippi'  }) weight 0.0
*n:X -> ({ point in New Mexico ? })({ place( loc_2( stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  point in New Mexico *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  point in New *n:X#1 ?  *t:Bound })({  place( loc_2( stateid( 'new *n:X#1  }) weight 0.0
*n:X -> ({ point in Nebraska in meters ? })({ place( loc_2( stateid( 'nebraska' }) weight 0.0
*n:X -> ({ point in Wyoming ? })({ place( loc_2( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Wyoming *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'wyoming'  }) weight 0.0
*n:X -> ({ point in each state })({ place( loc_2( state( }) weight 0.0
*n:X -> ({ point in each state whose })({ place( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ point in each state whose lowest point })({ place( loc_2( state( loc_1( place( }) weight 0.0
*n:X -> ({ point in each state whose lowest point is sea })({ place( loc_2( state( loc_1( place( elevation_2( }) weight 0.0
*n:X -> ({ point in each state whose lowest point is sea level })({ place( loc_2( state( loc_1( place( elevation_2( 0 }) weight 0.0
*n:Query -> ({ *t:Bound  point in each state *n:X#1  *t:Bound })({  place( loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point in each *n:X#1  *t:Bound })({  place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point in each *n:X#1 level  *t:Bound })({  place( loc_2( *n:X#1 0  }) weight 0.0
*n:Query -> ({ *t:Bound  point in each *n:X#1 whose  *t:Bound })({  place( loc_2( *n:X#1 loc_1(  }) weight 0.0
*n:X -> ({ point in Nevada in meters ? })({ place( loc_2( stateid( 'nevada' }) weight 0.0
*n:X -> ({ point in Ohio ? })({ place( loc_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  point in Ohio *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'ohio'  }) weight 0.0
*n:X -> ({ point in states })({ place( loc_2( state( }) weight 0.0
*n:X -> ({ point in states bordering })({ place( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ point in states bordering Georgia ? })({ place( loc_2( state( next_to_2( stateid( 'georgia' }) weight 0.0
*n:Query -> ({ *t:Bound  point in states bordering *n:X#1  *t:Bound })({  place( loc_2( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point in states *n:X#1  *t:Bound })({  place( loc_2( state( *n:X#1  }) weight 0.0
*n:X -> ({ point in the })({ place( loc_2( }) weight 0.0
*n:X -> ({ point in the country })({ place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ point in the USA })({ place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ point in the United })({ place( loc_2( countryid( }) weight 0.0
*n:X -> ({ point in the United States })({ place( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  point in the United *n:X#1  *t:Bound })({  place( loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ point in the US })({ place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ point in the states })({ place( loc_2( state( }) weight 0.0
*n:X -> ({ point in the states bordering })({ place( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ point in the states bordering Colorado ? })({ place( loc_2( state( next_to_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  point in the states *n:X#1  *t:Bound })({  place( loc_2( state( *n:X#1  }) weight 0.0
*n:X -> ({ point in the largest })({ place( loc_2( largest( }) weight 0.0
*n:X -> ({ point in the largest state })({ place( loc_2( largest( state( }) weight 0.0
*n:X -> ({ point in the largest state ? })({ place( loc_2( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  point in the largest *n:X#1  *t:Bound })({  place( loc_2( largest( *n:X#1  }) weight 0.0
*n:X -> ({ point in the smallest })({ place( loc_2( smallest( }) weight 0.0
*n:X -> ({ point in the smallest state })({ place( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ point in the smallest state ? })({ place( loc_2( smallest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  point in the smallest *n:X#1  *t:Bound })({  place( loc_2( smallest( *n:X#1  }) weight 0.0
*n:X -> ({ point in the state })({ place( loc_2( state( }) weight 0.0
*n:X -> ({ point in the state with })({ place( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ point in the state with capital })({ place( loc_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ point in the state with capital Des })({ place( loc_2( state( loc_1( capital( cityid( 'des }) weight 0.0
*n:X -> ({ point in the state with capital Des Moines })({ place( loc_2( state( loc_1( capital( cityid( 'des moines', }) weight 0.0
*n:X -> ({ point in the state with capital Des Moines ? })({ place( loc_2( state( loc_1( capital( cityid( 'des moines', _ }) weight 0.0
*n:X -> ({ point in the state with capital Austin })({ place( loc_2( state( loc_1( capital( cityid( 'austin', }) weight 0.0
*n:X -> ({ point in the state with capital Austin ? })({ place( loc_2( state( loc_1( capital( cityid( 'austin', _ }) weight 0.0
*n:X -> ({ point in the state with the capital })({ place( loc_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ point in the state with the capital Des })({ place( loc_2( state( loc_1( capital( cityid( 'des }) weight 0.0
*n:X -> ({ point in the state with the capital Des Moines })({ place( loc_2( state( loc_1( capital( cityid( 'des moines', }) weight 0.0
*n:X -> ({ point in the state with the capital Des Moines ? })({ place( loc_2( state( loc_1( capital( cityid( 'des moines', _ }) weight 0.0
*n:X -> ({ point in the state with the most })({ place( loc_2( most( state( }) weight 0.0
*n:X -> ({ point in the state with the most rivers })({ place( loc_2( most( state( traverse_1( river( }) weight 0.0
*n:X -> ({ point in the state with the most rivers ? })({ place( loc_2( most( state( traverse_1( river( all }) weight 0.0
*n:X -> ({ point in the state with the smallest population })({ place( loc_2( smallest_one( population_1( state( }) weight 0.0
*n:X -> ({ point in the state with the smallest population ? })({ place( loc_2( smallest_one( population_1( state( all }) weight 0.0
*n:X -> ({ point in the state of Oregon ? })({ place( loc_2( state( stateid( 'oregon' }) weight 0.0
*n:X -> ({ point in the state of California ? })({ place( loc_2( state( stateid( 'california' }) weight 0.0
*n:X -> ({ point in the state of Texas ? })({ place( loc_2( state( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  point in the state *n:X#1  *t:Bound })({  place( loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point in the *n:X#1  *t:Bound })({  place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point in the *n:X#1 States  *t:Bound })({  place( loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  point in the *n:X#1 Des  *t:Bound })({  place( loc_2( *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  point in the *n:X#1 bordering  *t:Bound })({  place( loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  point in the *n:X#1 ?  *t:Bound })({  place( loc_2( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  point in the *n:X#1 ?  *t:Bound })({  place( loc_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  point in the *n:X#1 Moines  *t:Bound })({  place( loc_2( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  point in the *n:X#1 Austin  *t:Bound })({  place( loc_2( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  point in the *n:X#1 capital  *t:Bound })({  place( loc_2( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  point in the *n:X#1 with  *t:Bound })({  place( loc_2( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  point in the *n:X#1 state  *t:Bound })({  place( loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  point in *n:X#1  *t:Bound })({  place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point in *n:X#1 Island ?  *t:Bound })({  place( loc_2( stateid( *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  point in *n:X#1 Island *n:X#2  *t:Bound })({  place( loc_2( *n:X#2 *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  point in *n:X#1 bordering  *t:Bound })({  place( loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  point in *n:X#1 bordering *n:X#2  *t:Bound })({  place( loc_2( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point in *n:X#1 Mexico ?  *t:Bound })({  place( loc_2( stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  point in *n:X#1 Mexico *n:X#2  *t:Bound })({  place( loc_2( *n:X#2 *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  point in *n:X#1 Georgia ?  *t:Bound })({  place( loc_2( *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  point in *n:X#1 Georgia *n:X#2  *t:Bound })({  place( loc_2( *n:X#1 *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  point in *n:X#1 ?  *t:Bound })({  place( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ point of all })({ place( loc_2( }) weight 0.0
*n:X -> ({ point of all states })({ place( loc_2( state( }) weight 0.0
*n:X -> ({ point of all states through which })({ place( loc_2( state( traverse_1( }) weight 0.0
*n:X -> ({ point of all states through which the Colorado river runs })({ place( loc_2( state( traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  point of all states *n:X#1  *t:Bound })({  place( loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point of all *n:X#1  *t:Bound })({  place( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ point of the })({ place( loc_2( }) weight 0.0
*n:X -> ({ point of the USA })({ place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ point of the US })({ place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ point of the state })({ place( loc_2( state( }) weight 0.0
*n:X -> ({ point of the state with })({ place( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ point of the state with the largest })({ place( loc_2( state( loc_1( largest( }) weight 0.0
*n:X -> ({ point of the state with the largest capital })({ place( loc_2( state( loc_1( largest( capital( }) weight 0.0
*n:X -> ({ point of the state with the largest capital city })({ place( loc_2( state( loc_1( largest( capital( city( }) weight 0.0
*n:X -> ({ point of the state with the largest area })({ place( loc_2( largest_one( area_1( state( }) weight 0.0
*n:X -> ({ point of the state with the largest area ? })({ place( loc_2( largest_one( area_1( state( all }) weight 0.0
*n:X -> ({ point of the state with the smallest population density })({ place( loc_2( smallest_one( density_1( state( }) weight 0.0
*n:X -> ({ point of the state with the smallest population density ? })({ place( loc_2( smallest_one( density_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  point of the state *n:X#1  *t:Bound })({  place( loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point of the *n:X#1  *t:Bound })({  place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point of the *n:X#1 capital  *t:Bound })({  place( loc_2( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of the *n:X#1 city  *t:Bound })({  place( loc_2( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of the *n:X#1 with  *t:Bound })({  place( loc_2( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1  *t:Bound })({  place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 ?  *t:Bound })({  place( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 USA  *t:Bound })({  place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 capital  *t:Bound })({  place( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 capital city  *t:Bound })({  place( *n:X#1 capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 capital *n:X#2  *t:Bound })({  place( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 US  *t:Bound })({  place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 states  *t:Bound })({  place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 states *n:X#2  *t:Bound })({  place( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 city  *t:Bound })({  place( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 through which  *t:Bound })({  place( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 with  *t:Bound })({  place( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 state  *t:Bound })({  place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 state with  *t:Bound })({  place( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 state *n:X#2  *t:Bound })({  place( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 the largest  *t:Bound })({  place( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  point of *n:X#1 the *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1  *t:Bound })({  place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 States  *t:Bound })({  place( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Oregon ?  *t:Bound })({  place( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Oregon *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 California ?  *t:Bound })({  place( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 California *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Des  *t:Bound })({  place( *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Des Moines  *t:Bound })({  place( *n:X#1 cityid( 'des moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Des *n:X#2  *t:Bound })({  place( *n:X#1 cityid( 'des *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Delaware ?  *t:Bound })({  place( *n:X#1 stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Delaware *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 bordering  *t:Bound })({  place( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 bordering Colorado ?  *t:Bound })({  place( *n:X#1 next_to_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 bordering Colorado *n:X#2  *t:Bound })({  place( *n:X#1 next_to_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 bordering Georgia ?  *t:Bound })({  place( *n:X#1 next_to_2( stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 bordering Georgia *n:X#2  *t:Bound })({  place( *n:X#1 next_to_2( *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 bordering *n:X#2  *t:Bound })({  place( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 bordering *n:X#2 ?  *t:Bound })({  place( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Louisiana ?  *t:Bound })({  place( *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Louisiana *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 America  *t:Bound })({  place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Arkansas ?  *t:Bound })({  place( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Arkansas *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Iowa ?  *t:Bound })({  place( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Iowa *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 country  *t:Bound })({  place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Colorado ?  *t:Bound })({  place( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Colorado *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Georgia ?  *t:Bound })({  place( *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Georgia *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 ?  *t:Bound })({  place( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 ?  *t:Bound })({  place( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Moines  *t:Bound })({  place( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Moines ?  *t:Bound })({  place( *n:X#1 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Moines *n:X#2  *t:Bound })({  place( *n:X#1 moines', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Rhode Island ?  *t:Bound })({  place( *n:X#1 stateid( 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Rhode Island *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Rhode *n:X#2 ?  *t:Bound })({  place( *n:X#1 stateid( 'rhode *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Austin  *t:Bound })({  place( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Austin ?  *t:Bound })({  place( *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Austin *n:X#2  *t:Bound })({  place( *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Virginia ?  *t:Bound })({  place( *n:X#1 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Virginia *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Florida ?  *t:Bound })({  place( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Florida *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Wisconsin ?  *t:Bound })({  place( *n:X#1 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Wisconsin *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Maine ?  *t:Bound })({  place( *n:X#1 stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Maine *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Kansas ?  *t:Bound })({  place( *n:X#1 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Kansas *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Texas ?  *t:Bound })({  place( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Texas *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Montana ?  *t:Bound })({  place( *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Montana *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Massachusetts ?  *t:Bound })({  place( *n:X#1 stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Massachusetts *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 USA  *t:Bound })({  place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 United  *t:Bound })({  place( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 United States  *t:Bound })({  place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 United *n:X#2  *t:Bound })({  place( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 capital  *t:Bound })({  place( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 capital Des  *t:Bound })({  place( *n:X#1 capital( cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 capital Austin  *t:Bound })({  place( *n:X#1 capital( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 capital *n:X#2  *t:Bound })({  place( *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Mississippi ?  *t:Bound })({  place( *n:X#1 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Mississippi *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 New Mexico ?  *t:Bound })({  place( *n:X#1 stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 New Mexico *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 New *n:X#2 ?  *t:Bound })({  place( *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Wyoming ?  *t:Bound })({  place( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Wyoming *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 each state  *t:Bound })({  place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 each state whose  *t:Bound })({  place( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 each state *n:X#2  *t:Bound })({  place( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 each *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 each *n:X#2 level  *t:Bound })({  place( *n:X#1 *n:X#2 0  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 each *n:X#2 whose  *t:Bound })({  place( *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 level  *t:Bound })({  place( *n:X#1 0  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 lowest point  *t:Bound })({  place( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 lowest *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 lowest *n:X#2 level  *t:Bound })({  place( *n:X#1 *n:X#2 0  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 is sea  *t:Bound })({  place( *n:X#1 elevation_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 is sea level  *t:Bound })({  place( *n:X#1 elevation_2( 0  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 is sea *n:X#2  *t:Bound })({  place( *n:X#1 elevation_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 is *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 is *n:X#2 level  *t:Bound })({  place( *n:X#1 *n:X#2 0  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 US  *t:Bound })({  place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Ohio ?  *t:Bound })({  place( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 Ohio *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 states  *t:Bound })({  place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 states bordering  *t:Bound })({  place( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 states bordering *n:X#2  *t:Bound })({  place( *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 states *n:X#2  *t:Bound })({  place( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 largest  *t:Bound })({  place( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 largest state  *t:Bound })({  place( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 largest state ?  *t:Bound })({  place( *n:X#1 largest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 largest state *n:X#2  *t:Bound })({  place( *n:X#1 largest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 largest *n:X#2  *t:Bound })({  place( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 largest *n:X#2 ?  *t:Bound })({  place( *n:X#1 largest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 with  *t:Bound })({  place( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 with capital  *t:Bound })({  place( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 with the capital  *t:Bound })({  place( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 with the *n:X#2  *t:Bound })({  place( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 with *n:X#2  *t:Bound })({  place( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 with *n:X#2 ?  *t:Bound })({  place( *n:X#1 loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 with *n:X#2 Moines  *t:Bound })({  place( *n:X#1 loc_1( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 of Oregon ?  *t:Bound })({  place( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 of California ?  *t:Bound })({  place( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 of Texas ?  *t:Bound })({  place( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 of *n:X#2 ?  *t:Bound })({  place( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 rivers  *t:Bound })({  place( *n:X#1 traverse_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 rivers ?  *t:Bound })({  place( *n:X#1 traverse_1( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 rivers *n:X#2  *t:Bound })({  place( *n:X#1 traverse_1( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 whose  *t:Bound })({  place( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 whose lowest point  *t:Bound })({  place( *n:X#1 loc_1( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 whose lowest *n:X#2  *t:Bound })({  place( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 smallest  *t:Bound })({  place( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 smallest state  *t:Bound })({  place( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 smallest state ?  *t:Bound })({  place( *n:X#1 smallest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 smallest state *n:X#2  *t:Bound })({  place( *n:X#1 smallest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 smallest *n:X#2  *t:Bound })({  place( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 smallest *n:X#2 ?  *t:Bound })({  place( *n:X#1 smallest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 state  *t:Bound })({  place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 state ?  *t:Bound })({  place( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 state with  *t:Bound })({  place( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 state with capital  *t:Bound })({  place( *n:X#1 state( loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 state with *n:X#2  *t:Bound })({  place( *n:X#1 state( loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 state *n:X#2  *t:Bound })({  place( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 state *n:X#2 ?  *t:Bound })({  place( *n:X#1 state( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 state *n:X#2 Moines  *t:Bound })({  place( *n:X#1 state( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 state *n:X#2 capital  *t:Bound })({  place( *n:X#1 state( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 the capital  *t:Bound })({  place( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 the capital Des  *t:Bound })({  place( *n:X#1 capital( cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 the capital *n:X#2  *t:Bound })({  place( *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 the *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 the *n:X#2 Des  *t:Bound })({  place( *n:X#1 *n:X#2 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 the *n:X#2 ?  *t:Bound })({  place( *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  point *n:X#1 the *n:X#2 Moines  *t:Bound })({  place( *n:X#1 *n:X#2 moines',  }) weight 0.0
*n:X -> ({ washed by })({ riverid( }) weight 0.0
*n:X -> ({ washed by the Mississippi })({ riverid( 'mississippi' }) weight 0.0
*n:X -> ({ washed by the Mississippi river })({ river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ washed by the Mississippi river which })({ traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  washed by the Mississippi *n:X#1  *t:Bound })({  *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  washed by the *n:X#1  *t:Bound })({  riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  washed by the *n:X#1 river  *t:Bound })({  river( riverid( *n:X#1  }) weight 0.0
*n:X -> ({ whose })({ loc_1( }) weight 0.0
*n:X -> ({ whose capital })({ loc_1( capital( }) weight 0.0
*n:X -> ({ whose capital is })({ loc_1( capital( cityid( }) weight 0.0
*n:X -> ({ whose capital is Boston })({ loc_1( capital( cityid( 'boston', }) weight 0.0
*n:X -> ({ whose capital is Boston ? })({ loc_1( capital( cityid( 'boston', _ }) weight 0.0
*n:Query -> ({ *t:Bound  whose capital is Boston *n:X#1  *t:Bound })({  loc_1( capital( cityid( 'boston', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  whose capital is *n:X#1  *t:Bound })({  loc_1( capital( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  whose capital is *n:X#1 ?  *t:Bound })({  loc_1( capital( cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  whose capital *n:X#1  *t:Bound })({  loc_1( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  whose capital *n:X#1 ?  *t:Bound })({  loc_1( capital( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  whose capital *n:X#1 Boston  *t:Bound })({  loc_1( capital( *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  whose capital *n:X#1 Boston ?  *t:Bound })({  loc_1( capital( *n:X#1 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  whose capital *n:X#1 Boston *n:X#2  *t:Bound })({  loc_1( capital( *n:X#1 'boston', *n:X#2  }) weight 0.0
*n:X -> ({ whose lowest point })({ loc_1( place( }) weight 0.0
*n:X -> ({ whose lowest point is sea })({ loc_1( place( elevation_2( }) weight 0.0
*n:X -> ({ whose lowest point is sea level })({ loc_1( place( elevation_2( 0 }) weight 0.0
*n:Query -> ({ *t:Bound  whose lowest point is *n:X#1  *t:Bound })({  loc_1( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  whose lowest *n:X#1  *t:Bound })({  loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  whose lowest *n:X#1 level  *t:Bound })({  loc_1( *n:X#1 0  }) weight 0.0
*n:Query -> ({ *t:Bound  whose lowest *n:X#1 is sea  *t:Bound })({  loc_1( *n:X#1 elevation_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  whose lowest *n:X#1 is *n:X#2  *t:Bound })({  loc_1( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  whose *n:X#1  *t:Bound })({  loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  whose *n:X#1 ?  *t:Bound })({  loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  whose *n:X#1 Boston  *t:Bound })({  loc_1( *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  whose *n:X#1 Boston ?  *t:Bound })({  loc_1( *n:X#1 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  whose *n:X#1 Boston *n:X#2  *t:Bound })({  loc_1( *n:X#1 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  whose *n:X#1 is  *t:Bound })({  loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  whose *n:X#1 is Boston  *t:Bound })({  loc_1( *n:X#1 cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  whose *n:X#1 is Boston ?  *t:Bound })({  loc_1( *n:X#1 cityid( 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  whose *n:X#1 is Boston *n:X#2  *t:Bound })({  loc_1( *n:X#1 cityid( 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  whose *n:X#1 is *n:X#2  *t:Bound })({  loc_1( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  whose *n:X#1 is *n:X#2 ?  *t:Bound })({  loc_1( *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:X -> ({ DC })({ 'dc' }) weight 0.0
*n:X -> ({ Dallas })({ 'dallas', }) weight 0.0
*n:X -> ({ Dallas ? })({ 'dallas', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Dallas *n:X#1  *t:Bound })({  'dallas', *n:X#1  }) weight 0.0
*n:X -> ({ Nebraska })({ 'nebraska' }) weight 0.0
*n:X -> ({ Nebraska ? })({ stateid( 'nebraska' }) weight 0.0
*n:X -> ({ Nebraska in meters ? })({ stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  Nebraska *n:X#1  *t:Bound })({  *n:X#1 'nebraska'  }) weight 0.0
*n:X -> ({ Nevada })({ 'nevada' }) weight 0.0
*n:X -> ({ Nevada in meters ? })({ stateid( 'nevada' }) weight 0.0
*n:X -> ({ Ohio })({ 'ohio' }) weight 0.0
*n:X -> ({ Ohio ? })({ stateid( 'ohio' }) weight 0.0
*n:X -> ({ Ohio river })({ river( riverid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  Ohio *n:X#1  *t:Bound })({  *n:X#1 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  Ohio *n:X#1  *t:Bound })({  *n:X#1 riverid( 'ohio'  }) weight 0.0
*n:X -> ({ Peak })({ peak' }) weight 0.0
*n:X -> ({ People in })({ cityid( }) weight 0.0
*n:X -> ({ People in Boulder })({ cityid( 'boulder', }) weight 0.0
*n:X -> ({ People in Boulder ? })({ cityid( 'boulder', _ }) weight 0.0
*n:Query -> ({ *t:Bound  People in Boulder *n:X#1  *t:Bound })({  cityid( 'boulder', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  People in *n:X#1  *t:Bound })({  cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  People in *n:X#1 ?  *t:Bound })({  cityid( *n:X#1 _  }) weight 0.0
*n:X -> ({ Rochester })({ 'rochester', }) weight 0.0
*n:X -> ({ Rochester ? })({ 'rochester', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Rochester *n:X#1  *t:Bound })({  'rochester', *n:X#1  }) weight 0.0
*n:X -> ({ Tempe })({ 'tempe', }) weight 0.0
*n:X -> ({ Tempe Arizona })({ 'tempe', 'az' }) weight 0.0
*n:Query -> ({ *t:Bound  Tempe *n:X#1  *t:Bound })({  'tempe', *n:X#1  }) weight 0.0
*n:X -> ({ Valley })({ valley' }) weight 0.0
*n:X -> ({ York })({ york', }) weight 0.0
*n:X -> ({ York })({ york' }) weight 0.0
*n:X -> ({ York ? })({ york', _ }) weight 0.0
*n:X -> ({ York City })({ york', }) weight 0.0
*n:X -> ({ York City ? })({ york', _ }) weight 0.0
*n:Query -> ({ *t:Bound  York City *n:X#1  *t:Bound })({  york', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  York *n:X#1  *t:Bound })({  york', *n:X#1  }) weight 0.0
*n:X -> ({ a state with a })({ state( loc_1( }) weight 0.0
*n:X -> ({ a state with a river })({ state( loc_1( river( }) weight 0.0
*n:X -> ({ a state with a river ? })({ state( loc_1( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  a state with a *n:X#1  *t:Bound })({  state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  a *n:X#1 with a  *t:Bound })({  *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  a *n:X#1 with a river  *t:Bound })({  *n:X#1 loc_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  a *n:X#1 with a *n:X#2  *t:Bound })({  *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:X -> ({ all })({ loc_2( }) weight 0.0
*n:X -> ({ all states })({ loc_2( state( }) weight 0.0
*n:X -> ({ all states through which })({ loc_2( state( traverse_1( }) weight 0.0
*n:X -> ({ all states through which the Colorado river runs })({ loc_2( state( traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  all states *n:X#1  *t:Bound })({  loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  all states *n:X#1 the *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ all the })({ loc_2( }) weight 0.0
*n:X -> ({ all the lakes })({ answer( lake( loc_2( }) weight 0.0
*n:X -> ({ all the lakes of US })({ answer( lake( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  all the lakes of *n:X#1  *t:Bound })({  answer( lake( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ all the states })({ loc_2( state( }) weight 0.0
*n:X -> ({ all the states })({ state( loc_2( }) weight 0.0
*n:X -> ({ all the states ? })({ loc_2( state( all }) weight 0.0
*n:X -> ({ all the states of USA })({ state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  all the states of *n:X#1  *t:Bound })({  state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  all the states *n:X#1  *t:Bound })({  loc_2( state( *n:X#1  }) weight 0.0
*n:X -> ({ all the rivers in })({ answer( river( loc_2( }) weight 0.0
*n:X -> ({ all the rivers in })({ river( loc_2( }) weight 0.0
*n:X -> ({ all the rivers in Colorado . })({ answer( river( loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ all the rivers in Texas ? })({ river( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  all the rivers in *n:X#1  *t:Bound })({  answer( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  all the rivers in *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1 ?  *t:Bound })({  loc_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1 in  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1 in  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1 in *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1 in *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1 of USA  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1 of US  *t:Bound })({  answer( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1 of *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  all the *n:X#1 of *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  all *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  all *n:X#1 in  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  all *n:X#1 in Colorado .  *t:Bound })({  *n:X#1 loc_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  all *n:X#1 in Colorado *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  all *n:X#1 in *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  all *n:X#1 in *n:X#2 .  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  all *n:X#1 through which  *t:Bound })({  loc_2( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  all *n:X#1 rivers in  *t:Bound })({  *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  all *n:X#1 rivers in *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  all *n:X#1 the Colorado *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  all *n:X#1 the *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ contains })({ loc_1( }) weight 0.0
*n:X -> ({ contains the highest })({ loc_1( highest( }) weight 0.0
*n:X -> ({ contains the highest point })({ loc_1( highest( place( }) weight 0.0
*n:X -> ({ contains the highest point ? })({ loc_1( highest( place( all }) weight 0.0
*n:Query -> ({ *t:Bound  contains the highest point *n:X#1  *t:Bound })({  loc_1( highest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  contains the highest *n:X#1  *t:Bound })({  loc_1( highest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  contains the highest *n:X#1 ?  *t:Bound })({  loc_1( highest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  contains the *n:X#1  *t:Bound })({  loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  contains the *n:X#1 ?  *t:Bound })({  loc_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  contains the *n:X#1 point  *t:Bound })({  loc_1( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  contains the *n:X#1 point ?  *t:Bound })({  loc_1( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  contains the *n:X#1 point *n:X#2  *t:Bound })({  loc_1( *n:X#1 place( *n:X#2  }) weight 0.0
*n:X -> ({ higher point than })({ place( higher_2( }) weight 0.0
*n:X -> ({ higher point than the highest })({ place( higher_2( highest( }) weight 0.0
*n:X -> ({ higher point than the highest point })({ place( higher_2( highest( place( }) weight 0.0
*n:X -> ({ higher point than the highest point of the })({ place( higher_2( highest( place( loc_2( }) weight 0.0
*n:X -> ({ higher point than the highest point of the state })({ place( higher_2( highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ higher point than the highest point of the state with })({ place( higher_2( highest( place( loc_2( state( loc_1( }) weight 0.0
*n:Query -> ({ *t:Bound  higher point than the *n:X#1  *t:Bound })({  place( higher_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  higher *n:X#1 than  *t:Bound })({  *n:X#1 higher_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  higher *n:X#1 than the highest  *t:Bound })({  *n:X#1 higher_2( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  higher *n:X#1 than the *n:X#2  *t:Bound })({  *n:X#1 higher_2( *n:X#2  }) weight 0.0
*n:X -> ({ lower })({ lower_2( }) weight 0.0
*n:X -> ({ lower than what })({ lower_2( low_point_1( }) weight 0.0
*n:X -> ({ lower than what Alabama has . })({ lower_2( low_point_1( stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  lower than what *n:X#1  *t:Bound })({  lower_2( low_point_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lower *n:X#1  *t:Bound })({  lower_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lower *n:X#1 Alabama has .  *t:Bound })({  lower_2( *n:X#1 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  lower *n:X#1 Alabama has *n:X#2  *t:Bound })({  lower_2( *n:X#1 *n:X#2 'alabama'  }) weight 0.0
*n:X -> ({ many })({ cityid( }) weight 0.0
*n:X -> ({ many })({ count( }) weight 0.0
*n:X -> ({ many Colorado rivers are })({ count( river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  many Colorado rivers *n:X#1  *t:Bound })({  count( river( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many Colorado *n:X#1  *t:Bound })({  count( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many Colorado *n:X#1 are  *t:Bound })({  count( *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:X -> ({ many states })({ count( intersection( state( }) weight 0.0
*n:X -> ({ many states })({ count( state( }) weight 0.0
*n:X -> ({ many states are in the })({ count( state( loc_2( }) weight 0.0
*n:X -> ({ many states are in the USA })({ count( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ many states are in the United })({ count( state( loc_2( countryid( }) weight 0.0
*n:X -> ({ many states are in the United States })({ count( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ many states are there ? })({ count( state( all }) weight 0.0
*n:X -> ({ many states are there in })({ count( state( loc_2( }) weight 0.0
*n:X -> ({ many states are there in United })({ count( state( loc_2( countryid( }) weight 0.0
*n:X -> ({ many states are there in United States })({ count( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ many states are there in the })({ count( state( loc_2( }) weight 0.0
*n:X -> ({ many states are there in the USA })({ count( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  many states are there *n:X#1  *t:Bound })({  count( state( *n:X#1  }) weight 0.0
*n:X -> ({ many states are next to major })({ count( state( next_to_2( major( }) weight 0.0
*n:X -> ({ many states are next to major rivers })({ count( state( next_to_2( major( river( }) weight 0.0
*n:X -> ({ many states are next to major rivers ? })({ count( state( next_to_2( major( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  many states are *n:X#1 major  *t:Bound })({  count( state( *n:X#1 major(  }) weight 0.0
*n:X -> ({ many states have })({ count( state( loc_1( }) weight 0.0
*n:X -> ({ many states have cities })({ count( state( loc_1( city( }) weight 0.0
*n:X -> ({ many states have cities or towns named Springfield })({ count( state( loc_1( city( cityid( 'springfield', }) weight 0.0
*n:X -> ({ many states have cities or towns named Springfield ? })({ count( state( loc_1( city( cityid( 'springfield', _ }) weight 0.0
*n:X -> ({ many states have cities named })({ count( state( loc_1( city( cityid( }) weight 0.0
*n:X -> ({ many states have cities named Austin })({ count( state( loc_1( city( cityid( 'austin', }) weight 0.0
*n:X -> ({ many states have cities named Austin ? })({ count( state( loc_1( city( cityid( 'austin', _ }) weight 0.0
*n:Query -> ({ *t:Bound  many states have cities *n:X#1  *t:Bound })({  count( state( loc_1( city( *n:X#1  }) weight 0.0
*n:X -> ({ many states have major })({ count( state( loc_1( major( }) weight 0.0
*n:X -> ({ many states have major rivers })({ count( state( loc_1( major( river( }) weight 0.0
*n:X -> ({ many states have major rivers ? })({ count( state( loc_1( major( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  many states have major *n:X#1  *t:Bound })({  count( state( loc_1( major( *n:X#1  }) weight 0.0
*n:X -> ({ many states have a })({ count( state( loc_1( }) weight 0.0
*n:X -> ({ many states have a city })({ count( state( loc_1( city( }) weight 0.0
*n:X -> ({ many states have a city called Rochester })({ count( state( loc_1( city( cityid( 'rochester', }) weight 0.0
*n:X -> ({ many states have a city called Rochester ? })({ count( state( loc_1( city( cityid( 'rochester', _ }) weight 0.0
*n:X -> ({ many states have a city named })({ count( state( loc_1( city( cityid( }) weight 0.0
*n:X -> ({ many states have a city named Springfield })({ count( state( loc_1( city( cityid( 'springfield', }) weight 0.0
*n:X -> ({ many states have a city named Springfield ? })({ count( state( loc_1( city( cityid( 'springfield', _ }) weight 0.0
*n:X -> ({ many states have a higher point than })({ count( state( loc_1( place( higher_2( }) weight 0.0
*n:X -> ({ many states have a higher point than the highest })({ count( state( loc_1( place( higher_2( highest( }) weight 0.0
*n:X -> ({ many states have a higher point than the highest point })({ count( state( loc_1( place( higher_2( highest( place( }) weight 0.0
*n:Query -> ({ *t:Bound  many states have a *n:X#1  *t:Bound })({  count( state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many states have *n:X#1  *t:Bound })({  count( state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many states have *n:X#1 ?  *t:Bound })({  count( state( loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  many states have *n:X#1 ?  *t:Bound })({  count( state( loc_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  many states have *n:X#1 Austin  *t:Bound })({  count( state( loc_1( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  many states have *n:X#1 named  *t:Bound })({  count( state( loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states have *n:X#1 rivers  *t:Bound })({  count( state( loc_1( *n:X#1 river(  }) weight 0.0
*n:X -> ({ many states in the })({ count( intersection( state( loc_2( }) weight 0.0
*n:X -> ({ many states in the US })({ count( intersection( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ many states in the US does })({ count( intersection( state( loc_2( countryid( 'usa' ,traverse_1( }) weight 0.0
*n:X -> ({ many states in the US does the shortest })({ count( intersection( state( loc_2( countryid( 'usa' ,traverse_1( shortest( }) weight 0.0
*n:X -> ({ many states in the US does the shortest river })({ count( intersection( state( loc_2( countryid( 'usa' ,traverse_1( shortest( river( }) weight 0.0
*n:Query -> ({ *t:Bound  many states in the *n:X#1  *t:Bound })({  count( intersection( state( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ many states border })({ count( state( intersection( next_to_2( }) weight 0.0
*n:X -> ({ many states border })({ count( state( next_to_2( }) weight 0.0
*n:X -> ({ many states border Tennessee ? })({ count( state( next_to_2( stateid( 'tennessee' }) weight 0.0
*n:Query -> ({ *t:Bound  many states border Tennessee *n:X#1  *t:Bound })({  count( state( next_to_2( *n:X#1 'tennessee'  }) weight 0.0
*n:X -> ({ many states border Alaska ? })({ count( state( next_to_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  many states border Alaska *n:X#1  *t:Bound })({  count( state( next_to_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ many states border Iowa ? })({ count( state( next_to_2( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  many states border Iowa *n:X#1  *t:Bound })({  count( state( next_to_2( *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ many states border Colorado })({ count( state( intersection( next_to_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ many states border Colorado and })({ count( state( intersection( next_to_2( stateid( 'colorado' , }) weight 0.0
*n:X -> ({ many states border Colorado and border })({ count( state( intersection( next_to_2( stateid( 'colorado' , next_to_2( }) weight 0.0
*n:X -> ({ many states border Hawaii ? })({ count( state( next_to_2( stateid( 'hawaii' }) weight 0.0
*n:Query -> ({ *t:Bound  many states border Hawaii *n:X#1  *t:Bound })({  count( state( next_to_2( *n:X#1 'hawaii'  }) weight 0.0
*n:X -> ({ many states border Texas ? })({ count( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  many states border Texas *n:X#1  *t:Bound })({  count( state( next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ many states border at })({ count( state( next_to_2( }) weight 0.0
*n:X -> ({ many states border at least one other state })({ count( state( next_to_2( state( }) weight 0.0
*n:X -> ({ many states border at least one other state ? })({ count( state( next_to_2( state( all }) weight 0.0
*n:X -> ({ many states border on the state })({ count( state( next_to_2( state( }) weight 0.0
*n:X -> ({ many states border on the state whose })({ count( state( next_to_2( state( loc_1( }) weight 0.0
*n:X -> ({ many states border on the state whose capital })({ count( state( next_to_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ many states border on the state whose capital is })({ count( state( next_to_2( state( loc_1( capital( cityid( }) weight 0.0
*n:X -> ({ many states border on the state whose capital is Boston })({ count( state( next_to_2( state( loc_1( capital( cityid( 'boston', }) weight 0.0
*n:X -> ({ many states border the Mississippi river })({ count( state( next_to_2( river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ many states border the largest })({ count( state( next_to_2( largest( }) weight 0.0
*n:X -> ({ many states border the largest state })({ count( state( next_to_2( largest( state( }) weight 0.0
*n:X -> ({ many states border the largest state ? })({ count( state( next_to_2( largest( state( all }) weight 0.0
*n:X -> ({ many states border the state })({ count( state( next_to_2( }) weight 0.0
*n:X -> ({ many states border the state with the largest })({ count( state( next_to_2( largest_one( }) weight 0.0
*n:X -> ({ many states border the state with the largest population })({ count( state( next_to_2( largest_one( population_1( }) weight 0.0
*n:X -> ({ many states border the state with the largest population ? })({ count( state( next_to_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ many states border the state that borders the most })({ count( state( next_to_2( most( }) weight 0.0
*n:X -> ({ many states border the state that borders the most states })({ count( state( next_to_2( most( state( next_to_2( state( }) weight 0.0
*n:Query -> ({ *t:Bound  many states border the *n:X#1  *t:Bound })({  count( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many states border *n:X#1  *t:Bound })({  count( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many states border *n:X#1 ?  *t:Bound })({  count( state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ many states does })({ count( state( loc_2( }) weight 0.0
*n:X -> ({ many states does })({ count( state( traverse_1( }) weight 0.0
*n:X -> ({ many states does })({ count( state( next_to_1( }) weight 0.0
*n:X -> ({ many states does Tennessee border ? })({ count( state( next_to_1( stateid( 'tennessee' }) weight 0.0
*n:X -> ({ many states does Iowa border ? })({ count( state( next_to_1( stateid( 'iowa' }) weight 0.0
*n:X -> ({ many states does USA })({ count( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ many states does Missouri border ? })({ count( state( next_to_1( stateid( 'missouri' }) weight 0.0
*n:X -> ({ many states does the Colorado river flow })({ count( state( traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ many states does the Colorado river run })({ count( state( traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ many states does the Mississippi river run })({ count( state( traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ many states does the Mississippi run })({ count( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ many states does the Missouri river run })({ count( state( traverse_1( river( riverid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  many states does the *n:X#1  *t:Bound })({  count( state( traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many states does *n:X#1  *t:Bound })({  count( state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many states does *n:X#1  *t:Bound })({  count( state( next_to_1( *n:X#1  }) weight 0.0
*n:X -> ({ many states do })({ count( exclude( state( }) weight 0.0
*n:X -> ({ many states do not })({ count( exclude( state( all , }) weight 0.0
*n:X -> ({ many states do not have })({ count( exclude( state( all , loc_1( }) weight 0.0
*n:X -> ({ many states do not have rivers })({ count( exclude( state( all , loc_1( river( }) weight 0.0
*n:X -> ({ many states do not have rivers ? })({ count( exclude( state( all , loc_1( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  many states do *n:X#1  *t:Bound })({  count( exclude( state( all *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1  *t:Bound })({  count( intersection( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1  *t:Bound })({  count( state( intersection( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1  *t:Bound })({  count( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1  *t:Bound })({  count( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 States  *t:Bound })({  count( state( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Tennessee ?  *t:Bound })({  count( state( *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Tennessee *n:X#2  *t:Bound })({  count( state( *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Alaska ?  *t:Bound })({  count( state( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Alaska *n:X#2  *t:Bound })({  count( state( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Iowa ?  *t:Bound })({  count( state( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Iowa *n:X#2  *t:Bound })({  count( state( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 ?  *t:Bound })({  count( state( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 ?  *t:Bound })({  count( state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 ?  *t:Bound })({  count( state( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Hawaii ?  *t:Bound })({  count( state( *n:X#1 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Hawaii *n:X#2  *t:Bound })({  count( state( *n:X#1 *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Austin  *t:Bound })({  count( state( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Austin ?  *t:Bound })({  count( state( *n:X#1 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Austin *n:X#2  *t:Bound })({  count( state( *n:X#1 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Boston  *t:Bound })({  count( state( *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 and  *t:Bound })({  count( state( intersection( *n:X#1 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Texas ?  *t:Bound })({  count( state( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Texas *n:X#2  *t:Bound })({  count( state( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 USA  *t:Bound })({  count( state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 United  *t:Bound })({  count( state( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 United States  *t:Bound })({  count( state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 United *n:X#2  *t:Bound })({  count( state( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 capital  *t:Bound })({  count( state( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 capital is  *t:Bound })({  count( state( *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 capital *n:X#2  *t:Bound })({  count( state( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 is  *t:Bound })({  count( state( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 is Boston  *t:Bound })({  count( state( *n:X#1 cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 is *n:X#2  *t:Bound })({  count( state( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Springfield  *t:Bound })({  count( state( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Springfield ?  *t:Bound })({  count( state( *n:X#1 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 Springfield *n:X#2  *t:Bound })({  count( state( *n:X#1 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 border  *t:Bound })({  count( state( intersection( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 cities  *t:Bound })({  count( state( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 cities named  *t:Bound })({  count( state( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 cities *n:X#2  *t:Bound })({  count( state( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 not  *t:Bound })({  count( *n:X#1 state( all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 does  *t:Bound })({  count( intersection( state( *n:X#1 ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 river  *t:Bound })({  count( intersection( state( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 called Rochester  *t:Bound })({  count( state( *n:X#1 cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 called *n:X#2  *t:Bound })({  count( state( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 or *n:X#2  *t:Bound })({  count( state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 major  *t:Bound })({  count( state( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 major rivers  *t:Bound })({  count( state( *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 major *n:X#2  *t:Bound })({  count( state( *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 city  *t:Bound })({  count( state( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 city named  *t:Bound })({  count( state( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 city *n:X#2  *t:Bound })({  count( state( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 named  *t:Bound })({  count( state( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 named Austin  *t:Bound })({  count( state( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 named Springfield  *t:Bound })({  count( state( *n:X#1 cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 named *n:X#2  *t:Bound })({  count( state( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 rivers  *t:Bound })({  count( state( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 rivers ?  *t:Bound })({  count( state( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 rivers *n:X#2  *t:Bound })({  count( state( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 population  *t:Bound })({  count( state( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 point  *t:Bound })({  count( state( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 whose  *t:Bound })({  count( state( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 whose capital  *t:Bound })({  count( state( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 whose *n:X#2  *t:Bound })({  count( state( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 state  *t:Bound })({  count( state( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 state ?  *t:Bound })({  count( state( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 state *n:X#2  *t:Bound })({  count( state( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 the highest  *t:Bound })({  count( state( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 the largest  *t:Bound })({  count( state( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 the shortest  *t:Bound })({  count( intersection( state( *n:X#1 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 the state  *t:Bound })({  count( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 the *n:X#2  *t:Bound })({  count( intersection( state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many states *n:X#1 the *n:X#2  *t:Bound })({  count( state( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ many big cities are })({ count( major( city( loc_2( }) weight 0.0
*n:X -> ({ many big cities are in Pennsylvania ? })({ count( major( city( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  many big cities are *n:X#1  *t:Bound })({  count( major( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many big *n:X#1  *t:Bound })({  count( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many big *n:X#1 are  *t:Bound })({  count( major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many big *n:X#1 are *n:X#2  *t:Bound })({  count( major( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:X -> ({ many cities })({ count( city( }) weight 0.0
*n:X -> ({ many cities are })({ count( city( loc_2( }) weight 0.0
*n:X -> ({ many cities are in Louisiana ? })({ count( city( loc_2( stateid( 'louisiana' }) weight 0.0
*n:X -> ({ many cities are in Montana ? })({ count( city( loc_2( stateid( 'montana' }) weight 0.0
*n:X -> ({ many cities are there in })({ count( city( loc_2( }) weight 0.0
*n:X -> ({ many cities are there in USA })({ count( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ many cities are there in US })({ count( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ many cities are there in the })({ count( city( loc_2( }) weight 0.0
*n:X -> ({ many cities are there in the United })({ count( city( loc_2( countryid( }) weight 0.0
*n:X -> ({ many cities are there in the United States })({ count( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ many cities are there in the US })({ count( city( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  many cities are *n:X#1  *t:Bound })({  count( city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ many cities does Texas have ? })({ count( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ many cities does the })({ count( city( loc_2( }) weight 0.0
*n:X -> ({ many cities does the USA })({ count( city( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  many cities does the *n:X#1  *t:Bound })({  count( city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ many cities named })({ count( intersection( city( cityid( }) weight 0.0
*n:X -> ({ many cities named Austin })({ count( intersection( city( cityid( 'austin', }) weight 0.0
*n:X -> ({ many cities named Austin are there in the USA ? })({ count( intersection( city( cityid( 'austin', _ , loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  many cities named *n:X#1  *t:Bound })({  count( intersection( city( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many cities *n:X#1  *t:Bound })({  count( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many cities *n:X#1 States  *t:Bound })({  count( city( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many cities *n:X#1 USA  *t:Bound })({  count( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many cities *n:X#1 United  *t:Bound })({  count( city( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many cities *n:X#1 United States  *t:Bound })({  count( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many cities *n:X#1 United *n:X#2  *t:Bound })({  count( city( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many cities *n:X#1 US  *t:Bound })({  count( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ many capitals })({ count( capital( }) weight 0.0
*n:X -> ({ many capitals does Rhode Island have ? })({ count( capital( loc_2( stateid( 'rhode island' }) weight 0.0
*n:Query -> ({ *t:Bound  many capitals *n:X#1  *t:Bound })({  count( capital( *n:X#1  }) weight 0.0
*n:X -> ({ many citizens in })({ population_1( cityid( }) weight 0.0
*n:X -> ({ many citizens in Boulder })({ population_1( cityid( 'boulder', }) weight 0.0
*n:X -> ({ many citizens in Boulder ? })({ population_1( cityid( 'boulder', _ }) weight 0.0
*n:Query -> ({ *t:Bound  many citizens in Boulder *n:X#1  *t:Bound })({  population_1( cityid( 'boulder', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many citizens in *n:X#1  *t:Bound })({  population_1( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many citizens in *n:X#1 ?  *t:Bound })({  population_1( cityid( *n:X#1 _  }) weight 0.0
*n:X -> ({ many major })({ count( major( }) weight 0.0
*n:X -> ({ many major cities })({ count( major( city( }) weight 0.0
*n:X -> ({ many major cities are })({ count( major( city( }) weight 0.0
*n:X -> ({ many major cities are })({ count( major( city( loc_2( }) weight 0.0
*n:X -> ({ many major cities are in })({ count( major( city( loc_2( }) weight 0.0
*n:X -> ({ many major cities are in Arizona ? })({ count( major( city( loc_2( stateid( 'arizona' }) weight 0.0
*n:X -> ({ many major cities are in Florida ? })({ count( major( city( loc_2( stateid( 'florida' }) weight 0.0
*n:X -> ({ many major cities are in Texas ? })({ count( major( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ many major cities are in states })({ count( major( city( loc_2( state( }) weight 0.0
*n:X -> ({ many major cities are in states bordering })({ count( major( city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ many major cities are in states bordering Utah ? })({ count( major( city( loc_2( state( next_to_2( stateid( 'utah' }) weight 0.0
*n:X -> ({ many major cities are in states bordering Nebraska ? })({ count( major( city( loc_2( state( next_to_2( stateid( 'nebraska' }) weight 0.0
*n:X -> ({ many major cities are there ? })({ count( major( city( all }) weight 0.0
*n:X -> ({ many major cities are there in })({ count( major( city( loc_2( }) weight 0.0
*n:X -> ({ many major cities are there in Oregon ? })({ count( major( city( loc_2( stateid( 'oregon' }) weight 0.0
*n:Query -> ({ *t:Bound  many major cities are *n:X#1  *t:Bound })({  count( major( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many major cities *n:X#1  *t:Bound })({  count( major( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many major cities *n:X#1 bordering  *t:Bound })({  count( major( city( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many major cities *n:X#1 states  *t:Bound })({  count( major( city( *n:X#1 state(  }) weight 0.0
*n:X -> ({ many major rivers })({ count( major( river( }) weight 0.0
*n:X -> ({ many major rivers cross })({ count( major( river( traverse_2( }) weight 0.0
*n:X -> ({ many major rivers cross Ohio ? })({ count( major( river( traverse_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  many major rivers cross *n:X#1  *t:Bound })({  count( major( river( traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many major rivers *n:X#1  *t:Bound })({  count( major( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1  *t:Bound })({  count( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 Oregon ?  *t:Bound })({  count( major( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 Oregon *n:X#2  *t:Bound })({  count( major( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 bordering  *t:Bound })({  count( major( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 bordering *n:X#2  *t:Bound })({  count( major( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 are  *t:Bound })({  count( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 are  *t:Bound })({  count( major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 are in  *t:Bound })({  count( major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 are *n:X#2  *t:Bound })({  count( major( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 Utah ?  *t:Bound })({  count( major( *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 Utah *n:X#2  *t:Bound })({  count( major( *n:X#1 *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 Nebraska ?  *t:Bound })({  count( major( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 Nebraska *n:X#2  *t:Bound })({  count( major( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 Ohio ?  *t:Bound })({  count( major( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 Ohio *n:X#2  *t:Bound })({  count( major( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 states  *t:Bound })({  count( major( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 states bordering  *t:Bound })({  count( major( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 states *n:X#2  *t:Bound })({  count( major( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 cross  *t:Bound })({  count( major( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many major *n:X#1 cross *n:X#2  *t:Bound })({  count( major( *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:X -> ({ many inhabitants does Montgomery })({ cityid( 'montgomery', }) weight 0.0
*n:X -> ({ many inhabitants does Montgomery have ? })({ cityid( 'montgomery', _ }) weight 0.0
*n:X -> ({ many rivers })({ count( river( }) weight 0.0
*n:X -> ({ many rivers })({ count( intersection( river( }) weight 0.0
*n:X -> ({ many rivers are })({ count( river( loc_2( }) weight 0.0
*n:X -> ({ many rivers are in Iowa ? })({ count( river( loc_2( stateid( 'iowa' }) weight 0.0
*n:X -> ({ many rivers are in Colorado ? })({ count( river( loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ many rivers are in New York ? })({ count( river( loc_2( stateid( 'new york' }) weight 0.0
*n:X -> ({ many rivers are in Missouri ? })({ count( river( loc_2( stateid( 'missouri' }) weight 0.0
*n:X -> ({ many rivers are in the })({ count( river( loc_2( }) weight 0.0
*n:X -> ({ many rivers are in the state })({ count( river( loc_2( state( }) weight 0.0
*n:X -> ({ many rivers are in the state with })({ count( river( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ many rivers are in the state with the highest })({ count( river( loc_2( state( loc_1( highest( }) weight 0.0
*n:X -> ({ many rivers are in the state with the highest point })({ count( river( loc_2( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ many rivers are in the state with the largest population })({ count( river( loc_2( largest_one( population_1( state( }) weight 0.0
*n:X -> ({ many rivers are in the state that has the most })({ count( river( loc_2( most( state( loc_1( }) weight 0.0
*n:X -> ({ many rivers are found in Colorado ? })({ count( river( loc_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers are found *n:X#1  *t:Bound })({  count( river( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ many rivers are there in })({ count( river( loc_2( }) weight 0.0
*n:X -> ({ many rivers are there in Idaho ? })({ count( river( loc_2( stateid( 'idaho' }) weight 0.0
*n:X -> ({ many rivers are there in Texas ? })({ count( river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ many rivers are there in US })({ count( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ many rivers are called })({ count( river( riverid( }) weight 0.0
*n:X -> ({ many rivers are called Colorado })({ count( river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers are called *n:X#1  *t:Bound })({  count( river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers are *n:X#1  *t:Bound })({  count( river( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ many rivers in })({ count( river( loc_2( }) weight 0.0
*n:X -> ({ many rivers in })({ count( intersection( river( loc_2( }) weight 0.0
*n:X -> ({ many rivers in Texas })({ count( intersection( river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ many rivers in Texas are longer than the Red })({ count( intersection( river( loc_2( stateid( 'texas' , longer( riverid( 'red' }) weight 0.0
*n:X -> ({ many rivers in Washington ? })({ count( river( loc_2( stateid( 'washington' }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers in Washington *n:X#1  *t:Bound })({  count( river( loc_2( *n:X#1 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers in *n:X#1  *t:Bound })({  count( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers in *n:X#1 ?  *t:Bound })({  count( river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ many rivers does Alaska have ? })({ count( river( loc_2( stateid( 'alaska' }) weight 0.0
*n:X -> ({ many rivers does Colorado have ? })({ count( river( loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ many rivers do })({ count( exclude( river( }) weight 0.0
*n:X -> ({ many rivers do not traverse the })({ count( exclude( river( all , traverse_2( }) weight 0.0
*n:X -> ({ many rivers do not traverse the state })({ count( exclude( river( all , traverse_2( state( }) weight 0.0
*n:X -> ({ many rivers do not traverse the state with })({ count( exclude( river( all , traverse_2( state( loc_1( }) weight 0.0
*n:X -> ({ many rivers do not traverse the state with the capital })({ count( exclude( river( all , traverse_2( state( loc_1( capital( }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers do *n:X#1  *t:Bound })({  count( exclude( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers do *n:X#1 with  *t:Bound })({  count( exclude( river( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers do *n:X#1 state  *t:Bound })({  count( exclude( river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers do *n:X#1 the  *t:Bound })({  count( exclude( river( all *n:X#1  }) weight 0.0
*n:X -> ({ many rivers run through })({ count( river( traverse_2( }) weight 0.0
*n:X -> ({ many rivers run through Texas ? })({ count( river( traverse_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ many rivers run through the states })({ count( river( traverse_2( state( }) weight 0.0
*n:X -> ({ many rivers run through the states bordering })({ count( river( traverse_2( state( next_to_2( }) weight 0.0
*n:X -> ({ many rivers run through the states bordering Colorado ? })({ count( river( traverse_2( state( next_to_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers run through *n:X#1  *t:Bound })({  count( river( traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1  *t:Bound })({  count( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1  *t:Bound })({  count( intersection( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1  *t:Bound })({  count( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 bordering  *t:Bound })({  count( river( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 bordering *n:X#2  *t:Bound })({  count( river( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 Colorado  *t:Bound })({  count( river( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 Colorado ?  *t:Bound })({  count( river( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 Colorado *n:X#2  *t:Bound })({  count( river( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 Idaho ?  *t:Bound })({  count( river( *n:X#1 stateid( 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 Idaho *n:X#2  *t:Bound })({  count( river( *n:X#1 *n:X#2 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 Texas ?  *t:Bound })({  count( river( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 Texas *n:X#2  *t:Bound })({  count( river( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 Washington ?  *t:Bound })({  count( river( *n:X#1 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 Washington *n:X#2  *t:Bound })({  count( river( *n:X#1 *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 US  *t:Bound })({  count( river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 found *n:X#2  *t:Bound })({  count( river( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 with  *t:Bound })({  count( river( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 point  *t:Bound })({  count( river( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 state  *t:Bound })({  count( river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 state with  *t:Bound })({  count( river( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 state *n:X#2  *t:Bound })({  count( river( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 the highest  *t:Bound })({  count( river( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 the states  *t:Bound })({  count( river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many rivers *n:X#1 the *n:X#2  *t:Bound })({  count( river( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ many people in })({ population_1( cityid( }) weight 0.0
*n:X -> ({ many people in Boulder })({ population_1( cityid( 'boulder', }) weight 0.0
*n:X -> ({ many people in Boulder ? })({ population_1( cityid( 'boulder', _ }) weight 0.0
*n:Query -> ({ *t:Bound  many people in Boulder *n:X#1  *t:Bound })({  population_1( cityid( 'boulder', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many people in *n:X#1  *t:Bound })({  population_1( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many people in *n:X#1 ?  *t:Bound })({  population_1( cityid( *n:X#1 _  }) weight 0.0
*n:X -> ({ many people lived in Austin })({ population_1( cityid( 'austin', }) weight 0.0
*n:X -> ({ many people lived in Austin ? })({ population_1( cityid( 'austin', _ }) weight 0.0
*n:X -> ({ many people live in })({ population_1( cityid( }) weight 0.0
*n:X -> ({ many people live in Chicago })({ population_1( cityid( 'chicago', }) weight 0.0
*n:X -> ({ many people live in Chicago ? })({ population_1( cityid( 'chicago', _ }) weight 0.0
*n:X -> ({ many people live in Detroit })({ population_1( cityid( 'detroit', }) weight 0.0
*n:X -> ({ many people live in Detroit ? })({ population_1( cityid( 'detroit', _ }) weight 0.0
*n:X -> ({ many people live in Austin })({ population_1( cityid( 'austin', }) weight 0.0
*n:X -> ({ many people live in Austin ? })({ population_1( cityid( 'austin', _ }) weight 0.0
*n:X -> ({ many people live in Austin Texas })({ population_1( cityid( 'austin', 'tx' }) weight 0.0
*n:X -> ({ many people live in Houston })({ population_1( cityid( 'houston', }) weight 0.0
*n:X -> ({ many people live in Houston ? })({ population_1( cityid( 'houston', _ }) weight 0.0
*n:X -> ({ many people live in Riverside })({ population_1( cityid( 'riverside', }) weight 0.0
*n:X -> ({ many people live in Riverside ? })({ population_1( cityid( 'riverside', _ }) weight 0.0
*n:X -> ({ many people live in Minneapolis })({ population_1( cityid( 'minneapolis', }) weight 0.0
*n:X -> ({ many people live in Minneapolis Minnesota })({ population_1( cityid( 'minneapolis', 'mn' }) weight 0.0
*n:X -> ({ many people live in Washington })({ population_1( cityid( 'washington', }) weight 0.0
*n:X -> ({ many people live in Washington DC })({ population_1( cityid( 'washington', 'dc' }) weight 0.0
*n:X -> ({ many people live in Kalamazoo })({ population_1( cityid( 'kalamazoo', }) weight 0.0
*n:X -> ({ many people live in Kalamazoo ? })({ population_1( cityid( 'kalamazoo', _ }) weight 0.0
*n:X -> ({ many people live in San })({ population_1( cityid( 'san }) weight 0.0
*n:X -> ({ many people live in San Francisco })({ population_1( cityid( 'san francisco', }) weight 0.0
*n:X -> ({ many people live in San Francisco ? })({ population_1( cityid( 'san francisco', _ }) weight 0.0
*n:X -> ({ many people live in Spokane })({ population_1( cityid( 'spokane', }) weight 0.0
*n:X -> ({ many people live in Spokane Washington })({ population_1( cityid( 'spokane', 'wa' }) weight 0.0
*n:Query -> ({ *t:Bound  many people live in *n:X#1  *t:Bound })({  population_1( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1  *t:Bound })({  cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1  *t:Bound })({  count( intersection( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1  *t:Bound })({  count( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 States  *t:Bound })({  count( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Oregon ?  *t:Bound })({  count( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Oregon *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Tennessee ?  *t:Bound })({  count( *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Tennessee border ?  *t:Bound })({  count( *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Tennessee border *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Tennessee *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Alaska ?  *t:Bound })({  count( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Alaska *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 bordering  *t:Bound })({  count( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 bordering Colorado ?  *t:Bound })({  count( *n:X#1 next_to_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 bordering Colorado *n:X#2  *t:Bound })({  count( *n:X#1 next_to_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 bordering Utah ?  *t:Bound })({  count( *n:X#1 next_to_2( stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 bordering Utah *n:X#2  *t:Bound })({  count( *n:X#1 next_to_2( *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 bordering Nebraska ?  *t:Bound })({  count( *n:X#1 next_to_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 bordering Nebraska *n:X#2  *t:Bound })({  count( *n:X#1 next_to_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 bordering *n:X#2  *t:Bound })({  count( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 bordering *n:X#2 ?  *t:Bound })({  count( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Iowa ?  *t:Bound })({  count( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Iowa border ?  *t:Bound })({  count( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Iowa border *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Iowa *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are  *t:Bound })({  count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are in  *t:Bound })({  count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are in states  *t:Bound })({  count( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are in the  *t:Bound })({  count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are in *n:X#2  *t:Bound })({  count( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are found *n:X#2  *t:Bound })({  count( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are there ?  *t:Bound })({  count( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are there in  *t:Bound })({  count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are there *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are called  *t:Bound })({  count( *n:X#1 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are called Colorado  *t:Bound })({  count( *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are called *n:X#2  *t:Bound })({  count( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are *n:X#2  *t:Bound })({  count( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 are *n:X#2 major  *t:Bound })({  count( *n:X#1 *n:X#2 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Colorado  *t:Bound })({  count( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Colorado  *t:Bound })({  count( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Colorado ?  *t:Bound })({  count( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Colorado and  *t:Bound })({  count( *n:X#1 stateid( 'colorado' ,  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Colorado *n:X#2  *t:Bound })({  count( *n:X#1 stateid( 'colorado' *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Colorado *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 ?  *t:Bound })({  count( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 ?  *t:Bound })({  count( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 ?  *t:Bound })({  count( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Hawaii ?  *t:Bound })({  count( *n:X#1 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Hawaii *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Austin  *t:Bound })({  count( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Austin ?  *t:Bound })({  count( *n:X#1 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Austin *n:X#2  *t:Bound })({  count( *n:X#1 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Boston  *t:Bound })({  count( *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Idaho ?  *t:Bound })({  count( *n:X#1 stateid( 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Idaho *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 and  *t:Bound })({  count( *n:X#1 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 and border  *t:Bound })({  count( *n:X#1 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 and *n:X#2  *t:Bound })({  count( *n:X#1 , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Utah ?  *t:Bound })({  count( *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Utah *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Texas  *t:Bound })({  count( intersection( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Texas ?  *t:Bound })({  count( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Texas *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Washington ?  *t:Bound })({  count( *n:X#1 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Washington *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 USA  *t:Bound })({  count( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 United  *t:Bound })({  count( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 United States  *t:Bound })({  count( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 United *n:X#2  *t:Bound })({  count( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 capital  *t:Bound })({  count( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 capital is  *t:Bound })({  count( *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 capital is Boston  *t:Bound })({  count( *n:X#1 capital( cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 capital is *n:X#2  *t:Bound })({  count( *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 capital *n:X#2  *t:Bound })({  count( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 capital *n:X#2 Boston  *t:Bound })({  count( *n:X#1 capital( *n:X#2 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have  *t:Bound })({  count( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have ?  *t:Bound })({  cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have cities  *t:Bound })({  count( *n:X#1 loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have cities named  *t:Bound })({  count( *n:X#1 loc_1( city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have cities *n:X#2  *t:Bound })({  count( *n:X#1 loc_1( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have major  *t:Bound })({  count( *n:X#1 loc_1( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have major rivers  *t:Bound })({  count( *n:X#1 loc_1( major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have major *n:X#2  *t:Bound })({  count( *n:X#1 loc_1( major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have a  *t:Bound })({  count( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have a city  *t:Bound })({  count( *n:X#1 loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have a *n:X#2  *t:Bound })({  count( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have rivers  *t:Bound })({  count( *n:X#1 loc_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have rivers ?  *t:Bound })({  count( *n:X#1 loc_1( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have rivers *n:X#2  *t:Bound })({  count( *n:X#1 loc_1( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have *n:X#2  *t:Bound })({  cityid( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have *n:X#2  *t:Bound })({  count( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have *n:X#2 ?  *t:Bound })({  count( *n:X#1 loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have *n:X#2 ?  *t:Bound })({  count( *n:X#1 loc_1( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have *n:X#2 Austin  *t:Bound })({  count( *n:X#1 loc_1( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have *n:X#2 named  *t:Bound })({  count( *n:X#1 loc_1( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 have *n:X#2 rivers  *t:Bound })({  count( *n:X#1 loc_1( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Nebraska ?  *t:Bound })({  count( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Nebraska *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Missouri border ?  *t:Bound })({  count( *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Missouri border *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 is  *t:Bound })({  count( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 is Boston  *t:Bound })({  count( *n:X#1 cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 is *n:X#2  *t:Bound })({  count( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 US  *t:Bound })({  count( intersection( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 US  *t:Bound })({  count( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Ohio ?  *t:Bound })({  count( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Ohio *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 states  *t:Bound })({  count( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 states  *t:Bound })({  count( *n:X#1 state( next_to_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 states bordering  *t:Bound })({  count( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 states bordering *n:X#2  *t:Bound })({  count( *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 states *n:X#2  *t:Bound })({  count( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in  *t:Bound })({  count( intersection( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in  *t:Bound })({  count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in  *t:Bound })({  *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Arizona ?  *t:Bound })({  count( *n:X#1 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Louisiana ?  *t:Bound })({  count( *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Boulder  *t:Bound })({  *n:X#1 cityid( 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Boulder ?  *t:Bound })({  *n:X#1 cityid( 'boulder', _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Boulder *n:X#2  *t:Bound })({  *n:X#1 cityid( 'boulder', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Iowa ?  *t:Bound })({  count( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Colorado ?  *t:Bound })({  count( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Florida ?  *t:Bound })({  count( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Texas ?  *t:Bound })({  count( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Montana ?  *t:Bound })({  count( *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Washington ?  *t:Bound })({  count( *n:X#1 loc_2( stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Washington *n:X#2  *t:Bound })({  count( *n:X#1 loc_2( *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in Missouri ?  *t:Bound })({  count( *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in the  *t:Bound })({  count( intersection( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in the *n:X#2  *t:Bound })({  count( intersection( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in *n:X#2  *t:Bound })({  count( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in *n:X#2  *t:Bound })({  *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in *n:X#2 ?  *t:Bound })({  count( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in *n:X#2 ?  *t:Bound })({  count( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 in *n:X#2 ?  *t:Bound })({  *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Springfield  *t:Bound })({  count( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Springfield ?  *t:Bound })({  count( *n:X#1 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 Springfield *n:X#2  *t:Bound })({  count( *n:X#1 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border  *t:Bound })({  count( *n:X#1 intersection( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border  *t:Bound })({  count( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border Tennessee ?  *t:Bound })({  count( *n:X#1 next_to_2( stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border Tennessee *n:X#2  *t:Bound })({  count( *n:X#1 next_to_2( *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border Alaska ?  *t:Bound })({  count( *n:X#1 next_to_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border Alaska *n:X#2  *t:Bound })({  count( *n:X#1 next_to_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border Iowa ?  *t:Bound })({  count( *n:X#1 next_to_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border Iowa *n:X#2  *t:Bound })({  count( *n:X#1 next_to_2( *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border Hawaii ?  *t:Bound })({  count( *n:X#1 next_to_2( stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border Hawaii *n:X#2  *t:Bound })({  count( *n:X#1 next_to_2( *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border Texas ?  *t:Bound })({  count( *n:X#1 next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border Texas *n:X#2  *t:Bound })({  count( *n:X#1 next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border at  *t:Bound })({  count( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border the largest  *t:Bound })({  count( *n:X#1 next_to_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border the *n:X#2  *t:Bound })({  count( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border *n:X#2  *t:Bound })({  count( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 border *n:X#2 ?  *t:Bound })({  count( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 found *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 lived in Austin  *t:Bound })({  *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities  *t:Bound })({  count( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities are  *t:Bound })({  count( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities are in  *t:Bound })({  count( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities are *n:X#2  *t:Bound })({  count( *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities or *n:X#2  *t:Bound })({  count( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities named  *t:Bound })({  count( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities named Austin  *t:Bound })({  count( *n:X#1 city( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities named *n:X#2  *t:Bound })({  count( *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities *n:X#2  *t:Bound })({  count( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities *n:X#2 bordering  *t:Bound })({  count( *n:X#1 city( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities *n:X#2 ?  *t:Bound })({  count( *n:X#1 city( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities *n:X#2 Austin  *t:Bound })({  count( *n:X#1 city( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cities *n:X#2 states  *t:Bound })({  count( *n:X#1 city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 not  *t:Bound })({  count( *n:X#1 all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 not have  *t:Bound })({  count( *n:X#1 all , loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 not traverse the  *t:Bound })({  count( *n:X#1 all , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 not traverse *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 not *n:X#2  *t:Bound })({  count( *n:X#1 all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 not *n:X#2 the  *t:Bound })({  count( *n:X#1 all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 there ?  *t:Bound })({  count( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 there *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does  *t:Bound })({  count( intersection( *n:X#1 ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does  *t:Bound })({  count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does  *t:Bound })({  count( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does  *t:Bound })({  count( *n:X#1 next_to_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does USA  *t:Bound })({  count( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does the  *t:Bound })({  count( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does the USA  *t:Bound })({  count( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does the shortest  *t:Bound })({  count( intersection( *n:X#1 ,traverse_1( shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does the *n:X#2  *t:Bound })({  count( intersection( *n:X#1 ,traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does the *n:X#2  *t:Bound })({  count( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does the *n:X#2  *t:Bound })({  count( *n:X#1 traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does *n:X#2  *t:Bound })({  count( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 does *n:X#2  *t:Bound })({  count( *n:X#1 next_to_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cross  *t:Bound })({  count( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cross Ohio ?  *t:Bound })({  count( *n:X#1 traverse_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cross Ohio *n:X#2  *t:Bound })({  count( *n:X#1 traverse_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cross *n:X#2  *t:Bound })({  count( *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 cross *n:X#2 ?  *t:Bound })({  count( *n:X#1 traverse_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 river  *t:Bound })({  count( intersection( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in  *t:Bound })({  *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in Chicago  *t:Bound })({  *n:X#1 cityid( 'chicago',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in Detroit  *t:Bound })({  *n:X#1 cityid( 'detroit',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in Austin  *t:Bound })({  *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in Houston  *t:Bound })({  *n:X#1 cityid( 'houston',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in Riverside  *t:Bound })({  *n:X#1 cityid( 'riverside',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in Minneapolis  *t:Bound })({  *n:X#1 cityid( 'minneapolis',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in Washington  *t:Bound })({  *n:X#1 cityid( 'washington',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in Kalamazoo  *t:Bound })({  *n:X#1 cityid( 'kalamazoo',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in San  *t:Bound })({  *n:X#1 cityid( 'san  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in Spokane  *t:Bound })({  *n:X#1 cityid( 'spokane',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 live in *n:X#2  *t:Bound })({  *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 called Rochester  *t:Bound })({  count( *n:X#1 cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 called Rochester ?  *t:Bound })({  count( *n:X#1 cityid( 'rochester', _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 called Rochester *n:X#2  *t:Bound })({  count( *n:X#1 cityid( 'rochester', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 called *n:X#2  *t:Bound })({  count( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 called *n:X#2 ?  *t:Bound })({  count( *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 or *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 or *n:X#2 ?  *t:Bound })({  count( *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 major  *t:Bound })({  count( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 major rivers  *t:Bound })({  count( *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 major rivers ?  *t:Bound })({  count( *n:X#1 major( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 major rivers *n:X#2  *t:Bound })({  count( *n:X#1 major( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 major *n:X#2  *t:Bound })({  count( *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 major *n:X#2 ?  *t:Bound })({  count( *n:X#1 major( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 city  *t:Bound })({  count( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 city called Rochester  *t:Bound })({  count( *n:X#1 city( cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 city called *n:X#2  *t:Bound })({  count( *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 city named  *t:Bound })({  count( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 city named Springfield  *t:Bound })({  count( *n:X#1 city( cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 city named *n:X#2  *t:Bound })({  count( *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 city *n:X#2  *t:Bound })({  count( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 city *n:X#2 ?  *t:Bound })({  count( *n:X#1 city( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 city *n:X#2 Springfield  *t:Bound })({  count( *n:X#1 city( *n:X#2 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named  *t:Bound })({  count( intersection( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named  *t:Bound })({  count( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named Austin  *t:Bound })({  count( intersection( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named Austin  *t:Bound })({  count( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named Austin ?  *t:Bound })({  count( *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named Austin *n:X#2  *t:Bound })({  count( *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named Springfield  *t:Bound })({  count( *n:X#1 cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named Springfield ?  *t:Bound })({  count( *n:X#1 cityid( 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named Springfield *n:X#2  *t:Bound })({  count( *n:X#1 cityid( 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named *n:X#2  *t:Bound })({  count( intersection( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named *n:X#2  *t:Bound })({  count( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 named *n:X#2 ?  *t:Bound })({  count( *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 with  *t:Bound })({  count( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 with the highest  *t:Bound })({  count( *n:X#1 loc_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 with the capital  *t:Bound })({  count( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 with the *n:X#2  *t:Bound })({  count( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 do  *t:Bound })({  count( exclude( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 do not  *t:Bound })({  count( exclude( *n:X#1 all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 do *n:X#2  *t:Bound })({  count( exclude( *n:X#1 all *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 do *n:X#2  *t:Bound })({  count( exclude( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 do *n:X#2 with  *t:Bound })({  count( exclude( *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 do *n:X#2 state  *t:Bound })({  count( exclude( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 do *n:X#2 the  *t:Bound })({  count( exclude( *n:X#1 all *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 rivers  *t:Bound })({  count( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 rivers are  *t:Bound })({  count( river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 rivers ?  *t:Bound })({  count( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 rivers cross  *t:Bound })({  count( *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 rivers cross *n:X#2  *t:Bound })({  count( *n:X#1 river( traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 rivers *n:X#2  *t:Bound })({  count( river( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 rivers *n:X#2  *t:Bound })({  count( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 run through  *t:Bound })({  count( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 run through *n:X#2  *t:Bound })({  count( *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 population  *t:Bound })({  count( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 population ?  *t:Bound })({  count( *n:X#1 population_1( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 population *n:X#2  *t:Bound })({  count( *n:X#1 population_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 higher point than  *t:Bound })({  count( *n:X#1 place( higher_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 higher *n:X#2 than  *t:Bound })({  count( *n:X#1 *n:X#2 higher_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 point  *t:Bound })({  count( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 whose  *t:Bound })({  count( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 whose capital  *t:Bound })({  count( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 whose capital is  *t:Bound })({  count( *n:X#1 loc_1( capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 whose capital *n:X#2  *t:Bound })({  count( *n:X#1 loc_1( capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 whose *n:X#2  *t:Bound })({  count( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 whose *n:X#2 Boston  *t:Bound })({  count( *n:X#1 loc_1( *n:X#2 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 whose *n:X#2 is  *t:Bound })({  count( *n:X#1 loc_1( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 on the state  *t:Bound })({  count( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 on the *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 state  *t:Bound })({  count( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 state ?  *t:Bound })({  count( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 state with  *t:Bound })({  count( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 state *n:X#2  *t:Bound })({  count( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 state *n:X#2 point  *t:Bound })({  count( *n:X#1 state( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the Colorado *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the highest  *t:Bound })({  count( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the highest point  *t:Bound })({  count( *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the highest *n:X#2  *t:Bound })({  count( *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the capital  *t:Bound })({  count( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the Mississippi river  *t:Bound })({  count( *n:X#1 river( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the Mississippi run  *t:Bound })({  count( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the Mississippi *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the Mississippi *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the Missouri *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the states  *t:Bound })({  count( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the states bordering  *t:Bound })({  count( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the states *n:X#2  *t:Bound })({  count( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the largest  *t:Bound })({  count( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the largest state  *t:Bound })({  count( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the largest *n:X#2  *t:Bound })({  count( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the shortest  *t:Bound })({  count( intersection( *n:X#1 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the shortest river  *t:Bound })({  count( intersection( *n:X#1 shortest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the shortest *n:X#2  *t:Bound })({  count( intersection( *n:X#1 shortest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the state *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the *n:X#2  *t:Bound })({  count( intersection( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the *n:X#2 bordering  *t:Bound })({  count( *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the *n:X#2 ?  *t:Bound })({  count( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the *n:X#2 river  *t:Bound })({  count( intersection( *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the *n:X#2 river  *t:Bound })({  count( *n:X#1 river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the *n:X#2 run  *t:Bound })({  count( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the *n:X#2 point  *t:Bound })({  count( *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  many *n:X#1 the *n:X#2 state  *t:Bound })({  count( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:X -> ({ passes })({ traverse_2( }) weight 0.0
*n:X -> ({ passes the states })({ traverse_2( state( }) weight 0.0
*n:Query -> ({ *t:Bound  passes the *n:X#1  *t:Bound })({  traverse_2( *n:X#1  }) weight 0.0
*n:X -> ({ people })({ population_1( }) weight 0.0
*n:X -> ({ people are in the state of Nevada ? })({ population_1( state( stateid( 'nevada' }) weight 0.0
*n:X -> ({ people are there in Iowa ? })({ population_1( stateid( 'iowa' }) weight 0.0
*n:X -> ({ people are there in New York ? })({ population_1( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  people are *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:X -> ({ people reside in Utah ? })({ population_1( stateid( 'utah' }) weight 0.0
*n:Query -> ({ *t:Bound  people reside in *n:X#1 ?  *t:Bound })({  population_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  people reside *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:X -> ({ people live })({ population_1( }) weight 0.0
*n:X -> ({ people live in California ? })({ population_1( stateid( 'california' }) weight 0.0
*n:X -> ({ people live in Hawaii ? })({ population_1( stateid( 'hawaii' }) weight 0.0
*n:X -> ({ people live in Rhode Island ? })({ population_1( stateid( 'rhode island' }) weight 0.0
*n:X -> ({ people live in Kansas ? })({ population_1( stateid( 'kansas' }) weight 0.0
*n:X -> ({ people live in Texas ? })({ population_1( stateid( 'texas' }) weight 0.0
*n:X -> ({ people live in Montana ? })({ population_1( stateid( 'montana' }) weight 0.0
*n:X -> ({ people live in Washington ? })({ population_1( stateid( 'washington' }) weight 0.0
*n:X -> ({ people live in Mississippi ? })({ population_1( stateid( 'mississippi' }) weight 0.0
*n:X -> ({ people live in New Mexico ? })({ population_1( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ people live in New Hampshire ? })({ population_1( stateid( 'new hampshire' }) weight 0.0
*n:X -> ({ people live in New York ? })({ population_1( stateid( 'new york' }) weight 0.0
*n:X -> ({ people live in South Dakota ? })({ population_1( stateid( 'south dakota' }) weight 0.0
*n:X -> ({ people live in the United })({ population_1( countryid( }) weight 0.0
*n:X -> ({ people live in the United States })({ population_1( countryid( 'usa' }) weight 0.0
*n:X -> ({ people live in the capital })({ population_1( capital( loc_2( }) weight 0.0
*n:X -> ({ people live in the capital of Georgia ? })({ population_1( capital( loc_2( stateid( 'georgia' }) weight 0.0
*n:X -> ({ people live in the capital of Texas ? })({ population_1( capital( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ people live in the biggest })({ population_1( largest( }) weight 0.0
*n:X -> ({ people live in the biggest city })({ population_1( largest( city( }) weight 0.0
*n:X -> ({ people live in the biggest city in })({ population_1( largest( city( loc_2( }) weight 0.0
*n:X -> ({ people live in the smallest })({ population_1( smallest( }) weight 0.0
*n:X -> ({ people live in the smallest state })({ population_1( smallest( state( }) weight 0.0
*n:X -> ({ people live in the smallest state bordering })({ population_1( smallest( state( next_to_2( }) weight 0.0
*n:X -> ({ people live in the smallest state bordering Wyoming ? })({ population_1( smallest( state( next_to_2( stateid( 'wyoming' }) weight 0.0
*n:X -> ({ people live in the state with the largest population density })({ population_1( largest_one( density_1( state( }) weight 0.0
*n:Query -> ({ *t:Bound  people live in the *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  people live in the *n:X#1  *t:Bound })({  population_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  people live in *n:X#1 ?  *t:Bound })({  population_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  people live *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  people live *n:X#1 capital  *t:Bound })({  population_1( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  people live *n:X#1 capital *n:X#2  *t:Bound })({  population_1( capital( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ people stay in Utah ? })({ population_1( stateid( 'utah' }) weight 0.0
*n:Query -> ({ *t:Bound  people stay in *n:X#1 ?  *t:Bound })({  population_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  people stay *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  people *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:X -> ({ smallest })({ smallest( }) weight 0.0
*n:X -> ({ smallest city })({ smallest( city( }) weight 0.0
*n:X -> ({ smallest city in })({ smallest( city( loc_2( }) weight 0.0
*n:X -> ({ smallest city in Alaska ? })({ smallest( city( loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city in Alaska *n:X#1  *t:Bound })({  smallest( city( loc_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ smallest city in Arkansas ? })({ smallest( city( loc_2( stateid( 'arkansas' }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city in Arkansas *n:X#1  *t:Bound })({  smallest( city( loc_2( *n:X#1 'arkansas'  }) weight 0.0
*n:X -> ({ smallest city in Hawaii ? })({ smallest( city( loc_2( stateid( 'hawaii' }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city in Hawaii *n:X#1  *t:Bound })({  smallest( city( loc_2( *n:X#1 'hawaii'  }) weight 0.0
*n:X -> ({ smallest city in Washington ? })({ smallest( city( loc_2( stateid( 'washington' }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city in Washington *n:X#1  *t:Bound })({  smallest( city( loc_2( *n:X#1 'washington'  }) weight 0.0
*n:X -> ({ smallest city in the })({ smallest( city( loc_2( }) weight 0.0
*n:X -> ({ smallest city in the USA })({ smallest( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ smallest city in the US })({ smallest( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ smallest city in the largest })({ smallest( city( loc_2( largest( }) weight 0.0
*n:X -> ({ smallest city in the largest state })({ smallest( city( loc_2( largest( state( }) weight 0.0
*n:X -> ({ smallest city in the largest state ? })({ smallest( city( loc_2( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city in the *n:X#1  *t:Bound })({  smallest( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city in *n:X#1  *t:Bound })({  smallest( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city in *n:X#1 ?  *t:Bound })({  smallest( city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ smallest city of the })({ smallest( city( loc_2( }) weight 0.0
*n:X -> ({ smallest city of the smallest })({ smallest( city( loc_2( smallest( }) weight 0.0
*n:X -> ({ smallest city of the smallest state })({ smallest( city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ smallest city of the smallest state in the })({ smallest( city( loc_2( smallest( state( loc_2( }) weight 0.0
*n:X -> ({ smallest city of the smallest state in the US })({ smallest( city( loc_2( smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city of the *n:X#1  *t:Bound })({  smallest( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city of *n:X#1  *t:Bound })({  smallest( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city of *n:X#1 US  *t:Bound })({  smallest( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city of *n:X#1 smallest  *t:Bound })({  smallest( city( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city of *n:X#1 state  *t:Bound })({  smallest( city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1  *t:Bound })({  smallest( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 Alaska ?  *t:Bound })({  smallest( city( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 Alaska *n:X#2  *t:Bound })({  smallest( city( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 Arkansas ?  *t:Bound })({  smallest( city( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 Arkansas *n:X#2  *t:Bound })({  smallest( city( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 ?  *t:Bound })({  smallest( city( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 Hawaii ?  *t:Bound })({  smallest( city( *n:X#1 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 Hawaii *n:X#2  *t:Bound })({  smallest( city( *n:X#1 *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 Washington ?  *t:Bound })({  smallest( city( *n:X#1 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 Washington *n:X#2  *t:Bound })({  smallest( city( *n:X#1 *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 USA  *t:Bound })({  smallest( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 US  *t:Bound })({  smallest( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 largest  *t:Bound })({  smallest( city( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 largest state  *t:Bound })({  smallest( city( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 largest *n:X#2  *t:Bound })({  smallest( city( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 state  *t:Bound })({  smallest( city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 state ?  *t:Bound })({  smallest( city( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest city *n:X#1 state *n:X#2  *t:Bound })({  smallest( city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:X -> ({ smallest state })({ smallest( state( }) weight 0.0
*n:X -> ({ smallest state bordering })({ smallest( state( next_to_2( }) weight 0.0
*n:X -> ({ smallest state bordering Wyoming ? })({ smallest( state( next_to_2( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state bordering Wyoming *n:X#1  *t:Bound })({  smallest( state( next_to_2( *n:X#1 'wyoming'  }) weight 0.0
*n:X -> ({ smallest state bordering Ohio ? })({ smallest( state( next_to_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state bordering Ohio *n:X#1  *t:Bound })({  smallest( state( next_to_2( *n:X#1 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state bordering *n:X#1  *t:Bound })({  smallest( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state bordering *n:X#1 ?  *t:Bound })({  smallest( state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ smallest state ? })({ smallest( state( all }) weight 0.0
*n:X -> ({ smallest state by area })({ smallest_one( area_1( state( }) weight 0.0
*n:X -> ({ smallest state by area ? })({ smallest_one( area_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state by area *n:X#1  *t:Bound })({  smallest_one( area_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state by *n:X#1  *t:Bound })({  smallest_one( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state by *n:X#1 ?  *t:Bound })({  smallest_one( *n:X#1 state( all  }) weight 0.0
*n:X -> ({ smallest state in the })({ smallest( state( loc_2( }) weight 0.0
*n:X -> ({ smallest state in the USA })({ smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ smallest state in the US })({ smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state in the *n:X#1  *t:Bound })({  smallest( state( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ smallest state through which })({ smallest( state( traverse_1( }) weight 0.0
*n:X -> ({ smallest state through which the Mississippi runs })({ smallest( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ smallest state through which the longest })({ smallest( state( traverse_1( longest( }) weight 0.0
*n:X -> ({ smallest state through which the longest river })({ smallest( state( traverse_1( longest( river( }) weight 0.0
*n:X -> ({ smallest state through which the longest river runs ? })({ smallest( state( traverse_1( longest( river( all }) weight 0.0
*n:X -> ({ smallest state that borders })({ smallest( state( next_to_2( }) weight 0.0
*n:X -> ({ smallest state that borders Texas ? })({ smallest( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ smallest state that borders the most })({ smallest( most( state( next_to_2( }) weight 0.0
*n:X -> ({ smallest state that borders the most states })({ smallest( most( state( next_to_2( state( }) weight 0.0
*n:X -> ({ smallest state that borders the most states ? })({ smallest( most( state( next_to_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state that borders *n:X#1  *t:Bound })({  smallest( state( next_to_2( *n:X#1  }) weight 0.0
*n:X -> ({ smallest state that the Mississippi river runs through })({ smallest( state( traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state that the *n:X#1  *t:Bound })({  smallest( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1  *t:Bound })({  smallest( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 Texas ?  *t:Bound })({  smallest( state( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 Texas *n:X#2  *t:Bound })({  smallest( state( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 USA  *t:Bound })({  smallest( state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 Wyoming ?  *t:Bound })({  smallest( state( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 Wyoming *n:X#2  *t:Bound })({  smallest( state( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 US  *t:Bound })({  smallest( state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 Ohio ?  *t:Bound })({  smallest( state( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 Ohio *n:X#2  *t:Bound })({  smallest( state( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 runs ?  *t:Bound })({  smallest( state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 runs *n:X#2  *t:Bound })({  smallest( state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 river  *t:Bound })({  smallest( state( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 the longest  *t:Bound })({  smallest( state( *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest state *n:X#1 the *n:X#2  *t:Bound })({  smallest( state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1  *t:Bound })({  smallest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Alaska ?  *t:Bound })({  smallest( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Alaska *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 bordering  *t:Bound })({  smallest( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 bordering Wyoming ?  *t:Bound })({  smallest( *n:X#1 next_to_2( stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 bordering Wyoming *n:X#2  *t:Bound })({  smallest( *n:X#1 next_to_2( *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 bordering Ohio ?  *t:Bound })({  smallest( *n:X#1 next_to_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 bordering Ohio *n:X#2  *t:Bound })({  smallest( *n:X#1 next_to_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 bordering *n:X#2  *t:Bound })({  smallest( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 bordering *n:X#2 ?  *t:Bound })({  smallest( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Arkansas ?  *t:Bound })({  smallest( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Arkansas *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 ?  *t:Bound })({  smallest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Hawaii ?  *t:Bound })({  smallest( *n:X#1 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Hawaii *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Texas ?  *t:Bound })({  smallest( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Texas *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Washington ?  *t:Bound })({  smallest( *n:X#1 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Washington *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 USA  *t:Bound })({  smallest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Wyoming ?  *t:Bound })({  smallest( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Wyoming *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 by area  *t:Bound })({  smallest_one( area_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 by area ?  *t:Bound })({  smallest_one( area_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 by area *n:X#2  *t:Bound })({  smallest_one( area_1( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 by *n:X#2  *t:Bound })({  smallest_one( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 by *n:X#2 ?  *t:Bound })({  smallest_one( *n:X#2 *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 US  *t:Bound })({  smallest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Ohio ?  *t:Bound })({  smallest( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 Ohio *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 states  *t:Bound })({  smallest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 states ?  *t:Bound })({  smallest( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 states *n:X#2  *t:Bound })({  smallest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in  *t:Bound })({  smallest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in Alaska ?  *t:Bound })({  smallest( *n:X#1 loc_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in Alaska *n:X#2  *t:Bound })({  smallest( *n:X#1 loc_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in Arkansas ?  *t:Bound })({  smallest( *n:X#1 loc_2( stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in Arkansas *n:X#2  *t:Bound })({  smallest( *n:X#1 loc_2( *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in Hawaii ?  *t:Bound })({  smallest( *n:X#1 loc_2( stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in Hawaii *n:X#2  *t:Bound })({  smallest( *n:X#1 loc_2( *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in Washington ?  *t:Bound })({  smallest( *n:X#1 loc_2( stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in Washington *n:X#2  *t:Bound })({  smallest( *n:X#1 loc_2( *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in the  *t:Bound })({  smallest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in the USA  *t:Bound })({  smallest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in the US  *t:Bound })({  smallest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in the largest  *t:Bound })({  smallest( *n:X#1 loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in the *n:X#2  *t:Bound })({  smallest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in *n:X#2  *t:Bound })({  smallest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 in *n:X#2 ?  *t:Bound })({  smallest( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 largest  *t:Bound })({  smallest( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 largest state  *t:Bound })({  smallest( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 largest state ?  *t:Bound })({  smallest( *n:X#1 largest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 largest state *n:X#2  *t:Bound })({  smallest( *n:X#1 largest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 largest *n:X#2  *t:Bound })({  smallest( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 largest *n:X#2 ?  *t:Bound })({  smallest( *n:X#1 largest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 runs ?  *t:Bound })({  smallest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 runs *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 river  *t:Bound })({  smallest( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 river runs ?  *t:Bound })({  smallest( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 river runs *n:X#2  *t:Bound })({  smallest( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 through which  *t:Bound })({  smallest( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 of the  *t:Bound })({  smallest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 of the smallest  *t:Bound })({  smallest( *n:X#1 loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 of the *n:X#2  *t:Bound })({  smallest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 of *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 of *n:X#2 US  *t:Bound })({  smallest( *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 of *n:X#2 smallest  *t:Bound })({  smallest( *n:X#1 *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 of *n:X#2 state  *t:Bound })({  smallest( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 that borders  *t:Bound })({  smallest( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 that borders *n:X#2  *t:Bound })({  smallest( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 that the *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 smallest  *t:Bound })({  smallest( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 smallest state  *t:Bound })({  smallest( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 smallest state *n:X#2  *t:Bound })({  smallest( *n:X#1 smallest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 smallest *n:X#2  *t:Bound })({  smallest( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 state  *t:Bound })({  smallest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 state ?  *t:Bound })({  smallest( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 state in the  *t:Bound })({  smallest( *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 state *n:X#2  *t:Bound })({  smallest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 the Mississippi runs  *t:Bound })({  smallest( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 the Mississippi *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 the longest  *t:Bound })({  smallest( *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 the longest river  *t:Bound })({  smallest( *n:X#1 longest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 the longest *n:X#2  *t:Bound })({  smallest( *n:X#1 longest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 the *n:X#2  *t:Bound })({  smallest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 the *n:X#2 runs  *t:Bound })({  smallest( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  smallest *n:X#1 the *n:X#2 river  *t:Bound })({  smallest( *n:X#1 *n:X#2 river(  }) weight 0.0
*n:X -> ({ state })({ state( }) weight 0.0
*n:X -> ({ state . })({ state( all }) weight 0.0
*n:X -> ({ state bordering })({ state( next_to_2( }) weight 0.0
*n:X -> ({ state bordering Arkansas ? })({ state( next_to_2( stateid( 'arkansas' }) weight 0.0
*n:Query -> ({ *t:Bound  state bordering Arkansas *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'arkansas'  }) weight 0.0
*n:X -> ({ state bordering Texas ? })({ state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  state bordering Texas *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ state bordering Wyoming ? })({ state( next_to_2( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  state bordering Wyoming *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'wyoming'  }) weight 0.0
*n:X -> ({ state bordering Oklahoma ? })({ state( next_to_2( stateid( 'oklahoma' }) weight 0.0
*n:Query -> ({ *t:Bound  state bordering Oklahoma *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'oklahoma'  }) weight 0.0
*n:X -> ({ state bordering Ohio ? })({ state( next_to_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  state bordering Ohio *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  state bordering *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state bordering *n:X#1 ?  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ state ? })({ state( stateid( }) weight 0.0
*n:X -> ({ state ? })({ state( all }) weight 0.0
*n:X -> ({ state is })({ answer( state( }) weight 0.0
*n:X -> ({ state in })({ state( loc_2( }) weight 0.0
*n:X -> ({ state in USA })({ state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ state in continental })({ state( loc_2( countryid( }) weight 0.0
*n:X -> ({ state in continental US })({ state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  state in continental *n:X#1  *t:Bound })({  state( loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ state in the })({ state( loc_2( }) weight 0.0
*n:X -> ({ state in the USA })({ state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ state in the US })({ state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  state in the *n:X#1  *t:Bound })({  state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state in *n:X#1  *t:Bound })({  state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state in *n:X#1 US  *t:Bound })({  state( loc_2( *n:X#1 'usa'  }) weight 0.0
*n:X -> ({ state does })({ answer( state( }) weight 0.0
*n:X -> ({ state traversed })({ state( traverse_1( }) weight 0.0
*n:X -> ({ state traversed by the Mississippi river })({ state( traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  state traversed *n:X#1  *t:Bound })({  state( traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state traversed *n:X#1 river  *t:Bound })({  state( traverse_1( river( *n:X#1  }) weight 0.0
*n:X -> ({ state through which })({ state( traverse_1( }) weight 0.0
*n:X -> ({ state through which the Mississippi runs })({ state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ state through which the longest })({ state( traverse_1( longest( }) weight 0.0
*n:X -> ({ state through which the longest river })({ state( traverse_1( longest( river( }) weight 0.0
*n:X -> ({ state through which the longest river runs ? })({ state( traverse_1( longest( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  state through which the *n:X#1  *t:Bound })({  state( traverse_1( *n:X#1  }) weight 0.0
*n:X -> ({ state with })({ state( loc_1( }) weight 0.0
*n:X -> ({ state with capital })({ state( loc_1( capital( }) weight 0.0
*n:X -> ({ state with capital Des })({ state( loc_1( capital( cityid( 'des }) weight 0.0
*n:X -> ({ state with capital Des Moines })({ state( loc_1( capital( cityid( 'des moines', }) weight 0.0
*n:X -> ({ state with capital Des Moines ? })({ state( loc_1( capital( cityid( 'des moines', _ }) weight 0.0
*n:X -> ({ state with capital Austin })({ state( loc_1( capital( cityid( 'austin', }) weight 0.0
*n:X -> ({ state with capital Austin ? })({ state( loc_1( capital( cityid( 'austin', _ }) weight 0.0
*n:Query -> ({ *t:Bound  state with capital *n:X#1  *t:Bound })({  state( loc_1( capital( cityid( *n:X#1  }) weight 0.0
*n:X -> ({ state with the highest })({ state( loc_1( highest( }) weight 0.0
*n:X -> ({ state with the highest elevation })({ state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ state with the highest elevation ? })({ state( loc_1( highest( place( all }) weight 0.0
*n:X -> ({ state with the highest elevation in the })({ state( loc_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ state with the highest elevation in the United })({ state( loc_1( highest( place( loc_2( countryid( }) weight 0.0
*n:X -> ({ state with the highest elevation in the United States })({ state( loc_1( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ state with the highest population density })({ largest_one( density_1( state( }) weight 0.0
*n:X -> ({ state with the highest population density ? })({ largest_one( density_1( state( all }) weight 0.0
*n:X -> ({ state with the highest point })({ state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ state with the highest point ? })({ state( loc_1( highest( place( all }) weight 0.0
*n:Query -> ({ *t:Bound  state with the highest *n:X#1  *t:Bound })({  state( loc_1( highest( *n:X#1  }) weight 0.0
*n:X -> ({ state with the capital })({ state( loc_1( capital( }) weight 0.0
*n:X -> ({ state with the capital Albany })({ state( loc_1( capital( cityid( 'albany', }) weight 0.0
*n:X -> ({ state with the capital Albany ? })({ state( loc_1( capital( cityid( 'albany', _ }) weight 0.0
*n:X -> ({ state with the capital Des })({ state( loc_1( capital( cityid( 'des }) weight 0.0
*n:X -> ({ state with the capital Des Moines })({ state( loc_1( capital( cityid( 'des moines', }) weight 0.0
*n:X -> ({ state with the capital Des Moines ? })({ state( loc_1( capital( cityid( 'des moines', _ }) weight 0.0
*n:Query -> ({ *t:Bound  state with the capital *n:X#1  *t:Bound })({  state( loc_1( capital( cityid( *n:X#1  }) weight 0.0
*n:X -> ({ state with the longest })({ state( loc_1( longest( }) weight 0.0
*n:X -> ({ state with the longest river })({ state( loc_1( longest( river( }) weight 0.0
*n:X -> ({ state with the longest river ? })({ state( loc_1( longest( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  state with the longest *n:X#1  *t:Bound })({  state( loc_1( longest( *n:X#1  }) weight 0.0
*n:X -> ({ state with the lowest })({ state( loc_1( lowest( }) weight 0.0
*n:X -> ({ state with the lowest population })({ smallest_one( population_1( state( }) weight 0.0
*n:X -> ({ state with the lowest population ? })({ smallest_one( population_1( state( all }) weight 0.0
*n:X -> ({ state with the lowest population density })({ smallest_one( density_1( state( }) weight 0.0
*n:X -> ({ state with the lowest population density ? })({ smallest_one( density_1( state( all }) weight 0.0
*n:X -> ({ state with the lowest point })({ state( loc_1( lowest( place( }) weight 0.0
*n:X -> ({ state with the lowest point ? })({ state( loc_1( lowest( place( all }) weight 0.0
*n:X -> ({ state with the lowest point in the })({ state( loc_1( lowest( place( loc_2( }) weight 0.0
*n:X -> ({ state with the lowest point in the USA })({ state( loc_1( lowest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  state with the lowest *n:X#1  *t:Bound })({  smallest_one( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the lowest *n:X#1  *t:Bound })({  state( loc_1( lowest( *n:X#1  }) weight 0.0
*n:X -> ({ state with the largest })({ state( loc_1( largest( }) weight 0.0
*n:X -> ({ state with the largest capital })({ state( loc_1( largest( capital( }) weight 0.0
*n:X -> ({ state with the largest capital city })({ state( loc_1( largest( capital( city( }) weight 0.0
*n:X -> ({ state with the largest capital city in the })({ state( loc_1( largest( capital( city( loc_2( }) weight 0.0
*n:X -> ({ state with the largest capital city in the US })({ state( loc_1( largest( capital( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ state with the largest density })({ largest_one( density_1( state( }) weight 0.0
*n:X -> ({ state with the largest density in })({ largest_one( density_1( state( loc_2( }) weight 0.0
*n:X -> ({ state with the largest density in USA })({ largest_one( density_1( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ state with the largest area })({ largest_one( area_1( state( }) weight 0.0
*n:X -> ({ state with the largest area ? })({ largest_one( area_1( state( all }) weight 0.0
*n:X -> ({ state with the largest population density })({ largest_one( density_1( state( }) weight 0.0
*n:X -> ({ state with the largest population density ? })({ largest_one( density_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  state with the largest *n:X#1  *t:Bound })({  largest_one( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the largest *n:X#1  *t:Bound })({  state( loc_1( largest( *n:X#1  }) weight 0.0
*n:X -> ({ state with the smallest area })({ smallest_one( area_1( state( }) weight 0.0
*n:X -> ({ state with the smallest area ? })({ smallest_one( area_1( state( all }) weight 0.0
*n:X -> ({ state with the smallest population density })({ smallest_one( density_1( state( }) weight 0.0
*n:X -> ({ state with the smallest population density ? })({ smallest_one( density_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  state with the smallest *n:X#1  *t:Bound })({  smallest_one( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1  *t:Bound })({  state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 Albany  *t:Bound })({  state( loc_1( *n:X#1 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 States  *t:Bound })({  state( loc_1( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 Des  *t:Bound })({  state( loc_1( *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 ?  *t:Bound })({  state( loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 ?  *t:Bound })({  state( loc_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 Moines  *t:Bound })({  state( loc_1( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 USA  *t:Bound })({  state( loc_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 United  *t:Bound })({  state( loc_1( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 capital  *t:Bound })({  state( loc_1( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 US  *t:Bound })({  state( loc_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 river  *t:Bound })({  state( loc_1( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 city  *t:Bound })({  state( loc_1( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 elevation  *t:Bound })({  state( loc_1( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  state with the *n:X#1 point  *t:Bound })({  state( loc_1( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  state with *n:X#1  *t:Bound })({  state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state with *n:X#1 Des  *t:Bound })({  state( loc_1( *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  state with *n:X#1 ?  *t:Bound })({  state( loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  state with *n:X#1 Moines  *t:Bound })({  state( loc_1( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  state with *n:X#1 Moines ?  *t:Bound })({  state( loc_1( *n:X#1 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  state with *n:X#1 Moines *n:X#2  *t:Bound })({  state( loc_1( *n:X#1 moines', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state with *n:X#1 Austin  *t:Bound })({  state( loc_1( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:X -> ({ state of Oregon ? })({ state( stateid( 'oregon' }) weight 0.0
*n:X -> ({ state of California ? })({ state( stateid( 'california' }) weight 0.0
*n:X -> ({ state of Indiana ? })({ state( stateid( 'indiana' }) weight 0.0
*n:X -> ({ state of Texas ? })({ state( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  state of *n:X#1 ?  *t:Bound })({  state( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ state that has the most })({ most( state( loc_1( }) weight 0.0
*n:X -> ({ state that has the most rivers })({ most( state( loc_1( river( }) weight 0.0
*n:X -> ({ state that has the most rivers ? })({ most( state( loc_1( river( all }) weight 0.0
*n:X -> ({ state that borders })({ state( next_to_2( }) weight 0.0
*n:X -> ({ state that borders Tennessee ? })({ state( next_to_2( stateid( 'tennessee' }) weight 0.0
*n:Query -> ({ *t:Bound  state that borders Tennessee *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'tennessee'  }) weight 0.0
*n:X -> ({ state that borders California ? })({ state( next_to_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  state that borders California *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ state that borders Indiana ? })({ state( next_to_2( stateid( 'indiana' }) weight 0.0
*n:Query -> ({ *t:Bound  state that borders Indiana *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'indiana'  }) weight 0.0
*n:X -> ({ state that borders Texas ? })({ state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  state that borders Texas *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ state that borders the most })({ most( state( next_to_2( }) weight 0.0
*n:X -> ({ state that borders the most states })({ most( state( next_to_2( state( }) weight 0.0
*n:X -> ({ state that borders the most states ? })({ most( state( next_to_2( state( all }) weight 0.0
*n:X -> ({ state that borders the state })({ state( next_to_2( state( }) weight 0.0
*n:X -> ({ state that borders the state with })({ state( next_to_2( largest_one( }) weight 0.0
*n:X -> ({ state that borders the state with })({ state( next_to_2( state( loc_1( }) weight 0.0
*n:X -> ({ state that borders the state with the highest population })({ state( next_to_2( largest_one( population_1( }) weight 0.0
*n:X -> ({ state that borders the state with the highest population ? })({ state( next_to_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ state that borders the state with the lowest })({ state( next_to_2( state( loc_1( lowest( }) weight 0.0
*n:X -> ({ state that borders the state with the lowest point })({ state( next_to_2( state( loc_1( lowest( place( }) weight 0.0
*n:X -> ({ state that borders the state that borders })({ state( next_to_2( state( next_to_2( }) weight 0.0
*n:X -> ({ state that borders the state that borders Texas ? })({ state( next_to_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  state that borders the *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state that borders *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state that borders *n:X#1 ?  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ state that contains })({ state( loc_1( }) weight 0.0
*n:X -> ({ state that contains the highest })({ state( loc_1( highest( }) weight 0.0
*n:X -> ({ state that contains the highest point })({ state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ state that contains the highest point ? })({ state( loc_1( highest( place( all }) weight 0.0
*n:Query -> ({ *t:Bound  state that contains the *n:X#1  *t:Bound })({  state( loc_1( *n:X#1  }) weight 0.0
*n:X -> ({ state that the Mississippi river runs through })({ state( traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  state that the Mississippi *n:X#1  *t:Bound })({  state( *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  state that the *n:X#1  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state that the *n:X#1 through  *t:Bound })({  state( traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state that *n:X#1  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state that *n:X#1 ?  *t:Bound })({  state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  state that *n:X#1 Texas ?  *t:Bound })({  state( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  state that *n:X#1 Texas *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  state that *n:X#1 point  *t:Bound })({  state( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  state that *n:X#1 point ?  *t:Bound })({  state( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  state that *n:X#1 point *n:X#2  *t:Bound })({  state( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state that *n:X#1 the highest  *t:Bound })({  state( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  state that *n:X#1 the most  *t:Bound })({  most( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state that *n:X#1 the *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ state whose })({ state( loc_1( }) weight 0.0
*n:X -> ({ state whose capital })({ state( loc_1( capital( }) weight 0.0
*n:X -> ({ state whose capital is })({ state( loc_1( capital( cityid( }) weight 0.0
*n:X -> ({ state whose capital is Boston })({ state( loc_1( capital( cityid( 'boston', }) weight 0.0
*n:X -> ({ state whose capital is Boston ? })({ state( loc_1( capital( cityid( 'boston', _ }) weight 0.0
*n:Query -> ({ *t:Bound  state whose capital is *n:X#1  *t:Bound })({  state( loc_1( capital( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose capital *n:X#1  *t:Bound })({  state( loc_1( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose capital *n:X#1 ?  *t:Bound })({  state( loc_1( capital( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose capital *n:X#1 Boston  *t:Bound })({  state( loc_1( capital( *n:X#1 'boston',  }) weight 0.0
*n:X -> ({ state whose lowest point })({ state( loc_1( place( }) weight 0.0
*n:X -> ({ state whose lowest point is sea })({ state( loc_1( place( elevation_2( }) weight 0.0
*n:X -> ({ state whose lowest point is sea level })({ state( loc_1( place( elevation_2( 0 }) weight 0.0
*n:Query -> ({ *t:Bound  state whose lowest *n:X#1  *t:Bound })({  state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose lowest *n:X#1 level  *t:Bound })({  state( loc_1( *n:X#1 0  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose *n:X#1  *t:Bound })({  state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose *n:X#1 ?  *t:Bound })({  state( loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose *n:X#1 Boston  *t:Bound })({  state( loc_1( *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose *n:X#1 Boston ?  *t:Bound })({  state( loc_1( *n:X#1 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose *n:X#1 Boston *n:X#2  *t:Bound })({  state( loc_1( *n:X#1 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose *n:X#1 is  *t:Bound })({  state( loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose *n:X#1 is Boston  *t:Bound })({  state( loc_1( *n:X#1 cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  state whose *n:X#1 is *n:X#2  *t:Bound })({  state( loc_1( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Albany  *t:Bound })({  state( *n:X#1 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Albany ?  *t:Bound })({  state( *n:X#1 cityid( 'albany', _  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Albany *n:X#2  *t:Bound })({  state( *n:X#1 cityid( 'albany', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 States  *t:Bound })({  state( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Tennessee ?  *t:Bound })({  state( *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Tennessee *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 California ?  *t:Bound })({  state( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 California *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Des  *t:Bound })({  state( *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Des Moines  *t:Bound })({  state( *n:X#1 cityid( 'des moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Des *n:X#2  *t:Bound })({  state( *n:X#1 cityid( 'des *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Arkansas ?  *t:Bound })({  state( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Arkansas *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Indiana ?  *t:Bound })({  state( *n:X#1 stateid( 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Indiana *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 ?  *t:Bound })({  state( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 ?  *t:Bound })({  state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 ?  *t:Bound })({  state( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 ?  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Moines  *t:Bound })({  state( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Moines ?  *t:Bound })({  state( *n:X#1 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Moines *n:X#2  *t:Bound })({  state( *n:X#1 moines', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Austin  *t:Bound })({  state( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Austin ?  *t:Bound })({  state( *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Austin *n:X#2  *t:Bound })({  state( *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Boston  *t:Bound })({  state( *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Boston ?  *t:Bound })({  state( *n:X#1 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Boston *n:X#2  *t:Bound })({  state( *n:X#1 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Texas ?  *t:Bound })({  state( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Texas *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 USA  *t:Bound })({  state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 United  *t:Bound })({  state( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 United States  *t:Bound })({  state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 United *n:X#2  *t:Bound })({  state( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital  *t:Bound })({  state( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital Des  *t:Bound })({  state( *n:X#1 capital( cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital Austin  *t:Bound })({  state( *n:X#1 capital( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital is  *t:Bound })({  state( *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital is Boston  *t:Bound })({  state( *n:X#1 capital( cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital is *n:X#2  *t:Bound })({  state( *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital city  *t:Bound })({  state( *n:X#1 capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital city *n:X#2  *t:Bound })({  state( *n:X#1 capital( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital *n:X#2  *t:Bound })({  state( *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital *n:X#2  *t:Bound })({  state( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital *n:X#2 ?  *t:Bound })({  state( *n:X#1 capital( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 capital *n:X#2 Boston  *t:Bound })({  state( *n:X#1 capital( *n:X#2 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Wyoming ?  *t:Bound })({  state( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Wyoming *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 level  *t:Bound })({  state( *n:X#1 0  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 density  *t:Bound })({  *n:X#1 density_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 density in  *t:Bound })({  *n:X#1 density_1( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 density in *n:X#2  *t:Bound })({  *n:X#1 density_1( state( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 density *n:X#2  *t:Bound })({  *n:X#1 density_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Oklahoma ?  *t:Bound })({  state( *n:X#1 stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Oklahoma *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 lowest point  *t:Bound })({  state( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 lowest *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 lowest *n:X#2 level  *t:Bound })({  state( *n:X#1 *n:X#2 0  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 is  *t:Bound })({  state( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 is Boston  *t:Bound })({  state( *n:X#1 cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 is Boston ?  *t:Bound })({  state( *n:X#1 cityid( 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 is Boston *n:X#2  *t:Bound })({  state( *n:X#1 cityid( 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 is sea  *t:Bound })({  state( *n:X#1 elevation_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 is sea level  *t:Bound })({  state( *n:X#1 elevation_2( 0  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 is sea *n:X#2  *t:Bound })({  state( *n:X#1 elevation_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 is *n:X#2  *t:Bound })({  state( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 is *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 is *n:X#2 ?  *t:Bound })({  state( *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 is *n:X#2 level  *t:Bound })({  state( *n:X#1 *n:X#2 0  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 US  *t:Bound })({  state( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 US  *t:Bound })({  state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Ohio ?  *t:Bound })({  state( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 Ohio *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 in  *t:Bound })({  *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 in USA  *t:Bound })({  *n:X#1 state( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 in the  *t:Bound })({  state( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 in the USA  *t:Bound })({  state( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 in the United  *t:Bound })({  state( *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 in the US  *t:Bound })({  state( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 in the *n:X#2  *t:Bound })({  state( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 in *n:X#2  *t:Bound })({  *n:X#1 state( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 runs ?  *t:Bound })({  state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 runs *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 area  *t:Bound })({  *n:X#1 area_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 area ?  *t:Bound })({  *n:X#1 area_1( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 area *n:X#2  *t:Bound })({  *n:X#1 area_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 river  *t:Bound })({  state( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 river ?  *t:Bound })({  state( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 river runs ?  *t:Bound })({  state( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 river runs *n:X#2  *t:Bound })({  state( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 river *n:X#2  *t:Bound })({  state( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 city  *t:Bound })({  state( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 city in the  *t:Bound })({  state( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 city *n:X#2  *t:Bound })({  state( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 continental  *t:Bound })({  state( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 continental US  *t:Bound })({  state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 continental *n:X#2  *t:Bound })({  state( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 with  *t:Bound })({  state( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 with the lowest  *t:Bound })({  state( *n:X#1 loc_1( lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 with the *n:X#2  *t:Bound })({  state( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 elevation  *t:Bound })({  state( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 elevation ?  *t:Bound })({  state( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 elevation in the  *t:Bound })({  state( *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 elevation *n:X#2  *t:Bound })({  state( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 elevation *n:X#2 States  *t:Bound })({  state( *n:X#1 place( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 elevation *n:X#2 United  *t:Bound })({  state( *n:X#1 place( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 population density  *t:Bound })({  *n:X#1 density_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 population density ?  *t:Bound })({  *n:X#1 density_1( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 population density *n:X#2  *t:Bound })({  *n:X#1 density_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 population *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 population *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 that borders  *t:Bound })({  state( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 that borders *n:X#2  *t:Bound })({  state( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 that *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 point  *t:Bound })({  state( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 point ?  *t:Bound })({  state( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 point in the  *t:Bound })({  state( *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 point *n:X#2  *t:Bound })({  state( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the highest  *t:Bound })({  state( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the highest elevation  *t:Bound })({  state( *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the highest population  *t:Bound })({  state( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the highest point  *t:Bound })({  state( *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the highest *n:X#2  *t:Bound })({  state( *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the highest *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the capital  *t:Bound })({  state( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the capital Albany  *t:Bound })({  state( *n:X#1 capital( cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the capital Des  *t:Bound })({  state( *n:X#1 capital( cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the capital *n:X#2  *t:Bound })({  state( *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the Mississippi runs  *t:Bound })({  state( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the Mississippi *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the longest  *t:Bound })({  state( *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the longest river  *t:Bound })({  state( *n:X#1 longest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the longest *n:X#2  *t:Bound })({  state( *n:X#1 longest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the lowest  *t:Bound })({  state( *n:X#1 lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the lowest population  *t:Bound })({  *n:X#1 population_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the lowest point  *t:Bound })({  state( *n:X#1 lowest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the lowest *n:X#2  *t:Bound })({  state( *n:X#1 lowest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the lowest *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the largest  *t:Bound })({  state( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the largest capital  *t:Bound })({  state( *n:X#1 largest( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the largest *n:X#2  *t:Bound })({  state( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the state  *t:Bound })({  state( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the state with  *t:Bound })({  state( *n:X#1 largest_one(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the state with  *t:Bound })({  state( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the state *n:X#2  *t:Bound })({  state( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the state *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 Albany  *t:Bound })({  state( *n:X#1 *n:X#2 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 States  *t:Bound })({  state( *n:X#1 *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 Des  *t:Bound })({  state( *n:X#1 *n:X#2 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 ?  *t:Bound })({  state( *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 ?  *t:Bound })({  state( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 Moines  *t:Bound })({  state( *n:X#1 *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 USA  *t:Bound })({  state( *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 United  *t:Bound })({  state( *n:X#1 *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 capital  *t:Bound })({  state( *n:X#1 *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 US  *t:Bound })({  state( *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 runs  *t:Bound })({  state( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 river  *t:Bound })({  state( *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 city  *t:Bound })({  state( *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 with  *t:Bound })({  state( *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 elevation  *t:Bound })({  state( *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  state *n:X#1 the *n:X#2 point  *t:Bound })({  state( *n:X#1 *n:X#2 place(  }) weight 0.0
*n:X -> ({ the })({ answer( }) weight 0.0
*n:X -> ({ the })({ loc_2( }) weight 0.0
*n:X -> ({ the })({ all }) weight 0.0
*n:X -> ({ the 50 capitals })({ answer( capital( }) weight 0.0
*n:X -> ({ the 50 capitals in the })({ answer( capital( loc_2( }) weight 0.0
*n:X -> ({ the 50 capitals in the USA })({ answer( capital( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  the 50 capitals *n:X#1  *t:Bound })({  answer( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the 50 capitals *n:X#1 USA  *t:Bound })({  answer( capital( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ the highest point })({ highest( place( loc_2( }) weight 0.0
*n:X -> ({ the highest point of Delaware ? })({ highest( place( loc_2( stateid( 'delaware' }) weight 0.0
*n:X -> ({ the highest point of Louisiana ? })({ highest( place( loc_2( stateid( 'louisiana' }) weight 0.0
*n:X -> ({ the highest point of Alabama ? })({ highest( place( loc_2( stateid( 'alabama' }) weight 0.0
*n:X -> ({ the highest point of Florida ? })({ highest( place( loc_2( stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  the highest point *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the highest *n:X#1  *t:Bound })({  highest( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ the USA })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ the United })({ loc_2( countryid( }) weight 0.0
*n:X -> ({ the United States })({ loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  the United *n:X#1  *t:Bound })({  loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ the capital })({ capital( loc_2( }) weight 0.0
*n:X -> ({ the capital of which state })({ answer( state( loc_1( capital( cityid( }) weight 0.0
*n:Query -> ({ *t:Bound  the capital of which *n:X#1  *t:Bound })({  answer( *n:X#1 loc_1( capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  the capital of *n:X#1  *t:Bound })({  answer( *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  the capital of *n:X#1 state  *t:Bound })({  answer( state( *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  the capital *n:X#1 which state  *t:Bound })({  answer( state( loc_1( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the capital *n:X#1 which *n:X#2  *t:Bound })({  answer( *n:X#2 loc_1( capital( *n:X#1  }) weight 0.0
*n:X -> ({ the longest })({ answer( longest( }) weight 0.0
*n:X -> ({ the longest river })({ answer( longest( river( }) weight 0.0
*n:X -> ({ the longest river in })({ answer( longest( river( loc_2( }) weight 0.0
*n:X -> ({ the longest river in US })({ answer( longest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  the longest river in *n:X#1  *t:Bound })({  answer( longest( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the longest river *n:X#1  *t:Bound })({  answer( longest( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the longest *n:X#1  *t:Bound })({  answer( longest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the longest *n:X#1 US  *t:Bound })({  answer( longest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the longest *n:X#1 in  *t:Bound })({  answer( longest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the longest *n:X#1 in *n:X#2  *t:Bound })({  answer( longest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:X -> ({ the US })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ the states })({ answer( state( }) weight 0.0
*n:X -> ({ the states })({ loc_2( state( }) weight 0.0
*n:X -> ({ the states . })({ answer( state( all }) weight 0.0
*n:X -> ({ the states which have })({ answer( count( state( }) weight 0.0
*n:X -> ({ the states which have elevations })({ answer( count( state( low_point_2( }) weight 0.0
*n:X -> ({ the states which have elevations lower })({ answer( count( state( low_point_2( lower_2( }) weight 0.0
*n:X -> ({ the states which have elevations lower than what })({ answer( count( state( low_point_2( lower_2( low_point_1( }) weight 0.0
*n:Query -> ({ *t:Bound  the states which have *n:X#1  *t:Bound })({  answer( count( state( *n:X#1  }) weight 0.0
*n:X -> ({ the states which border })({ loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ the states which border Texas ? })({ loc_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  the states which border *n:X#1  *t:Bound })({  loc_2( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the states which *n:X#1  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  the states which *n:X#1  *t:Bound })({  loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the states which *n:X#1 elevations  *t:Bound })({  answer( *n:X#1 state( low_point_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the states *n:X#1  *t:Bound })({  answer( state( *n:X#1  }) weight 0.0
*n:X -> ({ the largest })({ loc_2( largest( }) weight 0.0
*n:X -> ({ the largest state })({ loc_2( largest( state( }) weight 0.0
*n:X -> ({ the largest state ? })({ loc_2( largest( state( all }) weight 0.0
*n:X -> ({ the largest state in the })({ loc_2( largest( state( loc_2( }) weight 0.0
*n:X -> ({ the largest state in the US })({ loc_2( largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ the largest state through which })({ loc_2( largest( state( traverse_1( }) weight 0.0
*n:X -> ({ the largest state through which the Mississippi runs })({ loc_2( largest( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  the largest state *n:X#1  *t:Bound })({  loc_2( largest( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the largest *n:X#1  *t:Bound })({  loc_2( largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the largest *n:X#1 ?  *t:Bound })({  loc_2( largest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  the largest *n:X#1 US  *t:Bound })({  loc_2( largest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the largest *n:X#1 in the  *t:Bound })({  loc_2( largest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the largest *n:X#1 through which  *t:Bound })({  loc_2( largest( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  the largest *n:X#1 the *n:X#2  *t:Bound })({  loc_2( largest( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ the major })({ answer( major( }) weight 0.0
*n:X -> ({ the major lakes })({ answer( major( lake( }) weight 0.0
*n:X -> ({ the major lakes in })({ answer( major( lake( loc_2( }) weight 0.0
*n:X -> ({ the major lakes in Michigan . })({ answer( major( lake( loc_2( stateid( 'michigan' }) weight 0.0
*n:Query -> ({ *t:Bound  the major lakes in *n:X#1  *t:Bound })({  answer( major( lake( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the major lakes *n:X#1  *t:Bound })({  answer( major( lake( *n:X#1  }) weight 0.0
*n:X -> ({ the major cities })({ major( city( loc_2( }) weight 0.0
*n:X -> ({ the major cities of Texas ? })({ major( city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  the major cities *n:X#1  *t:Bound })({  major( city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ the major rivers })({ answer( major( river( }) weight 0.0
*n:X -> ({ the major rivers in })({ answer( major( river( loc_2( }) weight 0.0
*n:X -> ({ the major rivers in Florida . })({ answer( major( river( loc_2( stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  the major rivers in *n:X#1  *t:Bound })({  answer( major( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the major rivers *n:X#1  *t:Bound })({  answer( major( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the major *n:X#1  *t:Bound })({  answer( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the major *n:X#1  *t:Bound })({  major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the major *n:X#1 Florida .  *t:Bound })({  answer( major( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  the major *n:X#1 Florida *n:X#2  *t:Bound })({  answer( major( *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  the major *n:X#1 Michigan .  *t:Bound })({  answer( major( *n:X#1 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  the major *n:X#1 Michigan *n:X#2  *t:Bound })({  answer( major( *n:X#1 *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  the major *n:X#1 in  *t:Bound })({  answer( major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the major *n:X#1 in *n:X#2  *t:Bound })({  answer( major( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:X -> ({ the rivers })({ answer( river( }) weight 0.0
*n:X -> ({ the rivers in })({ answer( river( loc_2( }) weight 0.0
*n:X -> ({ the rivers in Arkansas . })({ answer( river( loc_2( stateid( 'arkansas' }) weight 0.0
*n:Query -> ({ *t:Bound  the rivers in Arkansas *n:X#1  *t:Bound })({  answer( river( loc_2( *n:X#1 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  the rivers in *n:X#1  *t:Bound })({  answer( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the rivers in *n:X#1 .  *t:Bound })({  answer( river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the rivers *n:X#1  *t:Bound })({  answer( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the rivers *n:X#1 Arkansas .  *t:Bound })({  answer( river( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  the rivers *n:X#1 Arkansas *n:X#2  *t:Bound })({  answer( river( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:X -> ({ the smallest })({ loc_2( smallest( }) weight 0.0
*n:X -> ({ the smallest state })({ loc_2( smallest( state( }) weight 0.0
*n:X -> ({ the smallest state ? })({ loc_2( smallest( state( all }) weight 0.0
*n:X -> ({ the smallest state in the })({ loc_2( smallest( state( loc_2( }) weight 0.0
*n:X -> ({ the smallest state in the US })({ loc_2( smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  the smallest state *n:X#1  *t:Bound })({  loc_2( smallest( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the smallest *n:X#1  *t:Bound })({  loc_2( smallest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the smallest *n:X#1 ?  *t:Bound })({  loc_2( smallest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  the smallest *n:X#1 US  *t:Bound })({  loc_2( smallest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the smallest *n:X#1 in the  *t:Bound })({  loc_2( smallest( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ the state })({ loc_2( state( }) weight 0.0
*n:X -> ({ the state with })({ loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ the state with the highest })({ loc_2( state( loc_1( highest( }) weight 0.0
*n:X -> ({ the state with the highest elevation })({ loc_2( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ the state with the highest elevation ? })({ loc_2( state( loc_1( highest( place( all }) weight 0.0
*n:X -> ({ the state with the highest point })({ loc_2( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ the state with the highest point ? })({ loc_2( state( loc_1( highest( place( all }) weight 0.0
*n:X -> ({ the state with the longest })({ loc_2( state( loc_1( longest( }) weight 0.0
*n:X -> ({ the state with the longest river })({ loc_2( state( loc_1( longest( river( }) weight 0.0
*n:X -> ({ the state with the longest river ? })({ loc_2( state( loc_1( longest( river( all }) weight 0.0
*n:X -> ({ the state with the lowest })({ loc_2( state( loc_1( lowest( }) weight 0.0
*n:X -> ({ the state with the lowest point })({ loc_2( state( loc_1( lowest( place( }) weight 0.0
*n:X -> ({ the state with the lowest point ? })({ loc_2( state( loc_1( lowest( place( all }) weight 0.0
*n:X -> ({ the state with the largest })({ loc_2( state( loc_1( largest( }) weight 0.0
*n:X -> ({ the state with the largest capital })({ loc_2( state( loc_1( largest( capital( }) weight 0.0
*n:X -> ({ the state with the largest capital city })({ loc_2( state( loc_1( largest( capital( city( }) weight 0.0
*n:X -> ({ the state with the largest capital city in the })({ loc_2( state( loc_1( largest( capital( city( loc_2( }) weight 0.0
*n:X -> ({ the state with the largest capital city in the US })({ loc_2( state( loc_1( largest( capital( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ the state with the largest area })({ answer( largest_one( area_1( state( }) weight 0.0
*n:X -> ({ the state with the largest area })({ loc_2( largest_one( area_1( state( }) weight 0.0
*n:X -> ({ the state with the largest area . })({ answer( largest_one( area_1( state( all }) weight 0.0
*n:X -> ({ the state with the largest area ? })({ loc_2( largest_one( area_1( state( all }) weight 0.0
*n:X -> ({ the state with the largest population })({ loc_2( largest_one( population_1( state( }) weight 0.0
*n:X -> ({ the state with the largest population ? })({ loc_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ the state with the largest population density })({ loc_2( largest_one( density_1( state( }) weight 0.0
*n:X -> ({ the state with the largest population density ? })({ loc_2( largest_one( density_1( state( all }) weight 0.0
*n:X -> ({ the state with the smallest population density })({ loc_2( smallest_one( density_1( state( }) weight 0.0
*n:X -> ({ the state with the smallest population density ? })({ loc_2( smallest_one( density_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  the state with the *n:X#1  *t:Bound })({  loc_2( state( loc_1( *n:X#1  }) weight 0.0
*n:X -> ({ the state that borders })({ loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ the state that borders the most })({ loc_2( most( state( next_to_2( }) weight 0.0
*n:X -> ({ the state that borders the most states })({ loc_2( most( state( next_to_2( state( }) weight 0.0
*n:X -> ({ the state that borders the most states ? })({ loc_2( most( state( next_to_2( state( all }) weight 0.0
*n:X -> ({ the state that borders the state })({ loc_2( state( next_to_2( state( }) weight 0.0
*n:X -> ({ the state that borders the state that borders })({ loc_2( state( next_to_2( state( next_to_2( }) weight 0.0
*n:X -> ({ the state that borders the state that borders Texas ? })({ loc_2( state( next_to_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1  *t:Bound })({  loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 ?  *t:Bound })({  loc_2( state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 Texas ?  *t:Bound })({  loc_2( state( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 Texas *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 capital  *t:Bound })({  loc_2( state( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 capital city  *t:Bound })({  loc_2( state( *n:X#1 capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 capital *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 US  *t:Bound })({  loc_2( state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 in the  *t:Bound })({  loc_2( state( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 river  *t:Bound })({  loc_2( state( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 river ?  *t:Bound })({  loc_2( state( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 river *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 city  *t:Bound })({  loc_2( state( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 city *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 elevation  *t:Bound })({  loc_2( state( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 elevation ?  *t:Bound })({  loc_2( state( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 elevation *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 that borders  *t:Bound })({  loc_2( state( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 that *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 point  *t:Bound })({  loc_2( state( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 point ?  *t:Bound })({  loc_2( state( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 point *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 the highest  *t:Bound })({  loc_2( state( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 the longest  *t:Bound })({  loc_2( state( *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 the lowest  *t:Bound })({  loc_2( state( *n:X#1 lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 the largest  *t:Bound })({  loc_2( state( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 the state  *t:Bound })({  loc_2( state( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  the state *n:X#1 the *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 States  *t:Bound })({  loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 .  *t:Bound })({  answer( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 Arkansas .  *t:Bound })({  answer( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 Arkansas *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 ?  *t:Bound })({  loc_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 Florida .  *t:Bound })({  answer( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 Florida *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 Texas ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 Texas *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 USA  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 lakes  *t:Bound })({  answer( *n:X#1 lake(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 lakes in  *t:Bound })({  answer( *n:X#1 lake( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 lakes in *n:X#2  *t:Bound })({  answer( *n:X#1 lake( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 lakes *n:X#2  *t:Bound })({  answer( *n:X#1 lake( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 capital  *t:Bound })({  loc_2( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 capital city  *t:Bound })({  loc_2( *n:X#1 capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 capital city *n:X#2  *t:Bound })({  loc_2( *n:X#1 capital( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 capital *n:X#2  *t:Bound })({  loc_2( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 Michigan .  *t:Bound })({  answer( *n:X#1 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 Michigan *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 elevations  *t:Bound })({  answer( *n:X#1 low_point_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 elevations lower  *t:Bound })({  answer( *n:X#1 low_point_2( lower_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 elevations lower *n:X#2  *t:Bound })({  answer( *n:X#1 low_point_2( lower_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 elevations *n:X#2  *t:Bound })({  answer( *n:X#1 low_point_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 US  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 US  *t:Bound })({  loc_2( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 states  *t:Bound })({  loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 states ?  *t:Bound })({  loc_2( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 states *n:X#2  *t:Bound })({  loc_2( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in Arkansas .  *t:Bound })({  answer( *n:X#1 loc_2( stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in Arkansas *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in Florida .  *t:Bound })({  answer( *n:X#1 loc_2( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in Florida *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in Michigan .  *t:Bound })({  answer( *n:X#1 loc_2( stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in Michigan *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in US  *t:Bound })({  answer( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in the  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in the  *t:Bound })({  loc_2( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in the USA  *t:Bound })({  answer( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in the US  *t:Bound })({  loc_2( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in the *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in the *n:X#2  *t:Bound })({  loc_2( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 in *n:X#2 .  *t:Bound })({  answer( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 cities  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 cities *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 river  *t:Bound })({  answer( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 river  *t:Bound })({  loc_2( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 river ?  *t:Bound })({  loc_2( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 river in  *t:Bound })({  answer( *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 river in *n:X#2  *t:Bound })({  answer( *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 river *n:X#2  *t:Bound })({  answer( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 river *n:X#2  *t:Bound })({  loc_2( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 city  *t:Bound })({  loc_2( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 city in the  *t:Bound })({  loc_2( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 city *n:X#2  *t:Bound })({  loc_2( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 through which  *t:Bound })({  loc_2( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 with  *t:Bound })({  loc_2( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 with the highest  *t:Bound })({  loc_2( *n:X#1 loc_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 with the longest  *t:Bound })({  loc_2( *n:X#1 loc_1( longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 with the lowest  *t:Bound })({  loc_2( *n:X#1 loc_1( lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 with the largest  *t:Bound })({  loc_2( *n:X#1 loc_1( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 with the *n:X#2  *t:Bound })({  loc_2( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 of Delaware ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 of Louisiana ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 of Alabama ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 of Florida ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 of Texas ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 of which state  *t:Bound })({  answer( state( loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 of which *n:X#2  *t:Bound })({  answer( *n:X#2 loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 of *n:X#2  *t:Bound })({  answer( *n:X#2 *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 of *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 of *n:X#2 state  *t:Bound })({  answer( state( *n:X#2 *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 than what  *t:Bound })({  answer( *n:X#1 low_point_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 elevation  *t:Bound })({  loc_2( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 elevation ?  *t:Bound })({  loc_2( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 elevation *n:X#2  *t:Bound })({  loc_2( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 rivers  *t:Bound })({  answer( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 rivers in  *t:Bound })({  answer( *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 rivers in *n:X#2  *t:Bound })({  answer( *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 rivers *n:X#2  *t:Bound })({  answer( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 that borders  *t:Bound })({  loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 that borders *n:X#2  *t:Bound })({  loc_2( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 that *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 which have  *t:Bound })({  answer( count( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 which have elevations  *t:Bound })({  answer( count( *n:X#1 low_point_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 which have *n:X#2  *t:Bound })({  answer( count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 which border  *t:Bound })({  loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 which border *n:X#2  *t:Bound })({  loc_2( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 which state  *t:Bound })({  answer( state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 which *n:X#2  *t:Bound })({  answer( *n:X#2 loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 which *n:X#2  *t:Bound })({  answer( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 which *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 which *n:X#2 elevations  *t:Bound })({  answer( *n:X#2 *n:X#1 low_point_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 point  *t:Bound })({  loc_2( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 point  *t:Bound })({  *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 point ?  *t:Bound })({  loc_2( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 point *n:X#2  *t:Bound })({  loc_2( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 point *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 lower  *t:Bound })({  answer( *n:X#1 lower_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 lower than what  *t:Bound })({  answer( *n:X#1 lower_2( low_point_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 lower *n:X#2  *t:Bound })({  answer( *n:X#1 lower_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 state  *t:Bound })({  answer( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 state  *t:Bound })({  loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 state ?  *t:Bound })({  loc_2( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 state in the  *t:Bound })({  loc_2( *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 state through which  *t:Bound })({  loc_2( *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 state *n:X#2  *t:Bound })({  loc_2( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the highest  *t:Bound })({  loc_2( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the highest elevation  *t:Bound })({  loc_2( *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the highest point  *t:Bound })({  loc_2( *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the highest *n:X#2  *t:Bound })({  loc_2( *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the Mississippi runs  *t:Bound })({  loc_2( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the Mississippi *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the longest  *t:Bound })({  loc_2( *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the longest river  *t:Bound })({  loc_2( *n:X#1 longest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the longest *n:X#2  *t:Bound })({  loc_2( *n:X#1 longest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the lowest  *t:Bound })({  loc_2( *n:X#1 lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the lowest point  *t:Bound })({  loc_2( *n:X#1 lowest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the lowest *n:X#2  *t:Bound })({  loc_2( *n:X#1 lowest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the largest  *t:Bound })({  loc_2( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the largest capital  *t:Bound })({  loc_2( *n:X#1 largest( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the largest *n:X#2  *t:Bound })({  loc_2( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the state  *t:Bound })({  loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the *n:X#2 ?  *t:Bound })({  loc_2( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the *n:X#2 capital  *t:Bound })({  loc_2( *n:X#1 *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the *n:X#2 US  *t:Bound })({  loc_2( *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the *n:X#2 runs  *t:Bound })({  loc_2( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the *n:X#2 river  *t:Bound })({  loc_2( *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the *n:X#2 city  *t:Bound })({  loc_2( *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the *n:X#2 elevation  *t:Bound })({  loc_2( *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  the *n:X#1 the *n:X#2 point  *t:Bound })({  loc_2( *n:X#1 *n:X#2 place(  }) weight 0.0
*n:X -> ({ towns named Springfield })({ cityid( 'springfield', }) weight 0.0
*n:X -> ({ towns named Springfield ? })({ cityid( 'springfield', _ }) weight 0.0
*n:Query -> ({ *t:Bound  towns named Springfield *n:X#1  *t:Bound })({  cityid( 'springfield', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  towns *n:X#1 Springfield  *t:Bound })({  *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  towns *n:X#1 Springfield ?  *t:Bound })({  *n:X#1 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  towns *n:X#1 Springfield *n:X#2  *t:Bound })({  *n:X#1 'springfield', *n:X#2  }) weight 0.0
*n:X -> ({ traverses })({ traverse_2( }) weight 0.0
*n:X -> ({ Des })({ 'des }) weight 0.0
*n:X -> ({ Des Moines })({ 'des moines', }) weight 0.0
*n:X -> ({ Des Moines ? })({ 'des moines', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Des Moines *n:X#1  *t:Bound })({  'des moines', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Des *n:X#1  *t:Bound })({  'des *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Des *n:X#1 ?  *t:Bound })({  'des *n:X#1 _  }) weight 0.0
*n:X -> ({ Iowa })({ 'iowa' }) weight 0.0
*n:X -> ({ Iowa ? })({ stateid( 'iowa' }) weight 0.0
*n:X -> ({ Iowa borders how many states ? })({ count( state( next_to_1( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  Iowa borders how *n:X#1 ?  *t:Bound })({  *n:X#1 next_to_1( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  Iowa borders *n:X#1  *t:Bound })({  *n:X#1 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  Iowa borders *n:X#1 ?  *t:Bound })({  *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:X -> ({ Iowa border ? })({ stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  Iowa border *n:X#1  *t:Bound })({  *n:X#1 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  Iowa *n:X#1  *t:Bound })({  *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ Jersey })({ jersey' }) weight 0.0
*n:X -> ({ Minnesota })({ 'minnesota' }) weight 0.0
*n:X -> ({ Minnesota })({ 'mn' }) weight 0.0
*n:X -> ({ Minnesota by })({ 'minnesota' }) weight 0.0
*n:X -> ({ Platte })({ platte' }) weight 0.0
*n:X -> ({ Tucson })({ 'tucson', }) weight 0.0
*n:X -> ({ Tucson ? })({ 'tucson', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Tucson *n:X#1  *t:Bound })({  'tucson', *n:X#1  }) weight 0.0
*n:X -> ({ Washington })({ 'washington' }) weight 0.0
*n:X -> ({ Washington })({ 'washington', }) weight 0.0
*n:X -> ({ Washington })({ 'wa' }) weight 0.0
*n:X -> ({ Washington ? })({ stateid( 'washington' }) weight 0.0
*n:X -> ({ Washington DC })({ 'washington', 'dc' }) weight 0.0
*n:X -> ({ Washington state ? })({ state( stateid( 'washington' }) weight 0.0
*n:Query -> ({ *t:Bound  Washington state *n:X#1  *t:Bound })({  state( *n:X#1 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  Washington *n:X#1  *t:Bound })({  'washington', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Washington *n:X#1  *t:Bound })({  *n:X#1 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  Washington *n:X#1 ?  *t:Bound })({  *n:X#1 stateid( 'washington'  }) weight 0.0
*n:X -> ({ Wyoming })({ 'wyoming' }) weight 0.0
*n:X -> ({ Wyoming ? })({ stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  Wyoming *n:X#1  *t:Bound })({  *n:X#1 'wyoming'  }) weight 0.0
*n:X -> ({ traversed })({ traverse_1( }) weight 0.0
*n:X -> ({ traversed by the Mississippi river })({ traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  traversed by the Mississippi *n:X#1  *t:Bound })({  traverse_1( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  traversed by the *n:X#1 river  *t:Bound })({  traverse_1( river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  traversed *n:X#1  *t:Bound })({  traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  traversed *n:X#1 river  *t:Bound })({  traverse_1( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  traversed *n:X#1 the Mississippi river  *t:Bound })({  traverse_1( river( *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  traversed *n:X#1 the Mississippi *n:X#2  *t:Bound })({  traverse_1( *n:X#2 *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  traversed *n:X#1 the *n:X#2 river  *t:Bound })({  traverse_1( river( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ Atlanta })({ 'atlanta', }) weight 0.0
*n:X -> ({ Atlanta ? })({ 'atlanta', _ }) weight 0.0
*n:X -> ({ Atlanta GA })({ 'atlanta', 'ga' }) weight 0.0
*n:Query -> ({ *t:Bound  Atlanta *n:X#1  *t:Bound })({  'atlanta', *n:X#1  }) weight 0.0
*n:X -> ({ Give me })({ answer( }) weight 0.0
*n:X -> ({ Give me all the states })({ answer( state( loc_2( }) weight 0.0
*n:X -> ({ Give me all the states of USA })({ answer( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  Give me all the *n:X#1  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ Give me the })({ answer( }) weight 0.0
*n:X -> ({ Give me the lakes })({ answer( lake( }) weight 0.0
*n:X -> ({ Give me the lakes in })({ answer( lake( loc_2( }) weight 0.0
*n:X -> ({ Give me the lakes in California . })({ answer( lake( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the lakes *n:X#1  *t:Bound })({  answer( lake( *n:X#1  }) weight 0.0
*n:X -> ({ Give me the longest })({ answer( longest( }) weight 0.0
*n:X -> ({ Give me the longest river })({ answer( longest( river( }) weight 0.0
*n:X -> ({ Give me the longest river that passes through })({ answer( longest( river( traverse_2( }) weight 0.0
*n:X -> ({ Give me the longest river that passes through the US })({ answer( longest( river( traverse_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the longest *n:X#1  *t:Bound })({  answer( longest( *n:X#1  }) weight 0.0
*n:X -> ({ Give me the states })({ answer( state( }) weight 0.0
*n:X -> ({ Give me the states that border })({ answer( state( next_to_2( }) weight 0.0
*n:X -> ({ Give me the states that border Utah . })({ answer( state( next_to_2( stateid( 'utah' }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the states *n:X#1  *t:Bound })({  answer( state( *n:X#1  }) weight 0.0
*n:X -> ({ Give me the largest })({ answer( largest( }) weight 0.0
*n:X -> ({ Give me the largest state })({ answer( largest( state( }) weight 0.0
*n:X -> ({ Give me the largest state . })({ answer( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the largest *n:X#1  *t:Bound })({  answer( largest( *n:X#1  }) weight 0.0
*n:X -> ({ Give me the cities })({ answer( city( }) weight 0.0
*n:X -> ({ Give me the cities in })({ answer( city( loc_2( }) weight 0.0
*n:X -> ({ Give me the cities in Virginia . })({ answer( city( loc_2( stateid( 'virginia' }) weight 0.0
*n:X -> ({ Give me the cities in Texas . })({ answer( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ Give me the cities in USA })({ answer( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ Give me the cities which are })({ answer( city( loc_2( }) weight 0.0
*n:X -> ({ Give me the cities which are in Texas . })({ answer( city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the cities *n:X#1  *t:Bound })({  answer( city( *n:X#1  }) weight 0.0
*n:X -> ({ Give me the number })({ answer( count( }) weight 0.0
*n:X -> ({ Give me the number of rivers in California . })({ answer( count( river( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the number *n:X#1  *t:Bound })({  answer( count( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the *n:X#1 .  *t:Bound })({  answer( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the *n:X#1 USA  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the *n:X#1 in  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the *n:X#1 river  *t:Bound })({  answer( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  Give me the *n:X#1 state  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  Give me *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Give me *n:X#1 states  *t:Bound })({  answer( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Give me *n:X#1 of USA  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  Give me *n:X#1 of *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ Riverside })({ 'riverside', }) weight 0.0
*n:X -> ({ Riverside ? })({ 'riverside', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Riverside *n:X#1  *t:Bound })({  'riverside', *n:X#1  }) weight 0.0
*n:X -> ({ USA })({ countryid( 'usa' }) weight 0.0
*n:X -> ({ no })({ , }) weight 0.0
*n:X -> ({ no surrounding })({ , next_to_2( }) weight 0.0
*n:X -> ({ no surrounding states })({ , next_to_2( state( }) weight 0.0
*n:X -> ({ no surrounding states . })({ , next_to_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  no surrounding states *n:X#1  *t:Bound })({  , next_to_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  no surrounding *n:X#1  *t:Bound })({  , next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  no surrounding *n:X#1 .  *t:Bound })({  , next_to_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  no *n:X#1  *t:Bound })({  , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  no *n:X#1 .  *t:Bound })({  , *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  no *n:X#1 states  *t:Bound })({  , *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  no *n:X#1 states .  *t:Bound })({  , *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  no *n:X#1 states *n:X#2  *t:Bound })({  , *n:X#1 state( *n:X#2  }) weight 0.0
*n:X -> ({ not })({ , }) weight 0.0
*n:X -> ({ not have })({ , loc_1( }) weight 0.0
*n:X -> ({ not have rivers })({ , loc_1( river( }) weight 0.0
*n:X -> ({ not have rivers ? })({ , loc_1( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  not have rivers *n:X#1  *t:Bound })({  , loc_1( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  not have *n:X#1  *t:Bound })({  , loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  not have *n:X#1 ?  *t:Bound })({  , loc_1( *n:X#1 all  }) weight 0.0
*n:X -> ({ not traverse })({ , traverse_2( }) weight 0.0
*n:X -> ({ not traverse the })({ all , traverse_2( }) weight 0.0
*n:X -> ({ not traverse the state })({ all , traverse_2( state( }) weight 0.0
*n:X -> ({ not traverse the state with })({ all , traverse_2( state( loc_1( }) weight 0.0
*n:X -> ({ not traverse the state with the capital })({ all , traverse_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ not traverse the state with the capital Albany })({ all , traverse_2( state( loc_1( capital( cityid( 'albany', }) weight 0.0
*n:X -> ({ not traverse the state with the capital Albany ? })({ all , traverse_2( state( loc_1( capital( cityid( 'albany', _ }) weight 0.0
*n:Query -> ({ *t:Bound  not traverse the state *n:X#1  *t:Bound })({  all , traverse_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  not traverse the *n:X#1  *t:Bound })({  all , traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  not traverse the *n:X#1 ?  *t:Bound })({  all , traverse_2( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  not traverse the *n:X#1 with  *t:Bound })({  all , traverse_2( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  not traverse *n:X#1  *t:Bound })({  *n:X#1 , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  not traverse *n:X#1 state  *t:Bound })({  *n:X#1 , traverse_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  not traverse *n:X#1 state with  *t:Bound })({  *n:X#1 , traverse_2( state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  not traverse *n:X#1 state *n:X#2  *t:Bound })({  *n:X#1 , traverse_2( state( *n:X#2  }) weight 0.0
*n:X -> ({ not run through })({ , traverse_2( }) weight 0.0
*n:X -> ({ not run through Texas ? })({ , traverse_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  not run through Texas *n:X#1  *t:Bound })({  , traverse_2( *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  not run through *n:X#1  *t:Bound })({  , traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  not run through *n:X#1 ?  *t:Bound })({  , traverse_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1  *t:Bound })({  , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 ?  *t:Bound })({  , *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 Texas ?  *t:Bound })({  , *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 Texas *n:X#2  *t:Bound })({  , *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 rivers  *t:Bound })({  , *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 rivers ?  *t:Bound })({  , *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 rivers *n:X#2  *t:Bound })({  , *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 the  *t:Bound })({  all , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 the state  *t:Bound })({  all , *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 the state with  *t:Bound })({  all , *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 the state *n:X#2  *t:Bound })({  all , *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 the *n:X#2  *t:Bound })({  all , *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 the *n:X#2 ?  *t:Bound })({  all , *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  not *n:X#1 the *n:X#2 with  *t:Bound })({  all , *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:X -> ({ size })({ size( }) weight 0.0
*n:X -> ({ size of California ? })({ size( stateid( 'california' }) weight 0.0
*n:X -> ({ size of Florida ? })({ size( stateid( 'florida' }) weight 0.0
*n:X -> ({ size of Texas ? })({ size( stateid( 'texas' }) weight 0.0
*n:X -> ({ size of the capital of Texas ? })({ size( capital( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ size of the largest })({ size( largest( }) weight 0.0
*n:X -> ({ size of the largest state })({ size( largest( state( }) weight 0.0
*n:X -> ({ size of the largest state in the })({ size( largest( state( loc_2( }) weight 0.0
*n:X -> ({ size of the largest state in the USA })({ size( largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  size of the largest *n:X#1  *t:Bound })({  size( largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  size of the *n:X#1  *t:Bound })({  size( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  size of the *n:X#1 USA  *t:Bound })({  size( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  size of the *n:X#1 state  *t:Bound })({  size( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  size of *n:X#1 ?  *t:Bound })({  size( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  size *n:X#1  *t:Bound })({  size( *n:X#1  }) weight 0.0
*n:X -> ({ than what })({ low_point_1( }) weight 0.0
*n:X -> ({ than what Alabama has . })({ low_point_1( stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  than what Alabama has *n:X#1  *t:Bound })({  low_point_1( *n:X#1 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  than what *n:X#1  *t:Bound })({  low_point_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  than what *n:X#1 has .  *t:Bound })({  low_point_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  than what *n:X#1 has *n:X#2  *t:Bound })({  low_point_1( *n:X#2 *n:X#1  }) weight 0.0
*n:X -> ({ than the Red })({ longer( }) weight 0.0
*n:X -> ({ Death })({ 'death }) weight 0.0
*n:X -> ({ Death Valley })({ 'death valley' }) weight 0.0
*n:Query -> ({ *t:Bound  Death *n:X#1  *t:Bound })({  'death *n:X#1  }) weight 0.0
*n:X -> ({ States })({ 'usa' }) weight 0.0
*n:X -> ({ States })({ state( }) weight 0.0
*n:X -> ({ States bordering })({ state( next_to_2( }) weight 0.0
*n:X -> ({ States bordering Iowa ? })({ state( next_to_2( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  States bordering Iowa *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  States bordering *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  States bordering *n:X#1 ?  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  States *n:X#1  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  States *n:X#1 Iowa ?  *t:Bound })({  state( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  States *n:X#1 Iowa *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:X -> ({ Tennessee })({ 'tennessee' }) weight 0.0
*n:X -> ({ Tennessee ? })({ stateid( 'tennessee' }) weight 0.0
*n:X -> ({ Tennessee border ? })({ stateid( 'tennessee' }) weight 0.0
*n:Query -> ({ *t:Bound  Tennessee border *n:X#1  *t:Bound })({  *n:X#1 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  Tennessee *n:X#1  *t:Bound })({  *n:X#1 'tennessee'  }) weight 0.0
*n:X -> ({ adjacent })({ next_to_2( }) weight 0.0
*n:X -> ({ adjacent state })({ state( next_to_2( }) weight 0.0
*n:X -> ({ adjacent state of California ? })({ state( next_to_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  adjacent state of *n:X#1 ?  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  adjacent state *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  adjacent *n:X#1  *t:Bound })({  *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  adjacent *n:X#1 of California ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  adjacent *n:X#1 of *n:X#2 ?  *t:Bound })({  *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:X -> ({ are })({ loc_2( }) weight 0.0
*n:X -> ({ are })({ riverid( }) weight 0.0
*n:X -> ({ are in })({ loc_2( }) weight 0.0
*n:X -> ({ are in Arizona ? })({ loc_2( stateid( 'arizona' }) weight 0.0
*n:X -> ({ are in Louisiana ? })({ loc_2( stateid( 'louisiana' }) weight 0.0
*n:X -> ({ are in Iowa ? })({ loc_2( stateid( 'iowa' }) weight 0.0
*n:X -> ({ are in Colorado ? })({ loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ are in Florida ? })({ loc_2( stateid( 'florida' }) weight 0.0
*n:X -> ({ are in Texas . })({ loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ are in Texas ? })({ loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  are in Texas *n:X#1  *t:Bound })({  loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ are in Montana ? })({ loc_2( stateid( 'montana' }) weight 0.0
*n:X -> ({ are in New York ? })({ loc_2( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  are in New *n:X#1 ?  *t:Bound })({  loc_2( stateid( 'new *n:X#1  }) weight 0.0
*n:X -> ({ are in Missouri ? })({ loc_2( stateid( 'missouri' }) weight 0.0
*n:X -> ({ are in states })({ loc_2( state( }) weight 0.0
*n:X -> ({ are in states bordering })({ loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ are in states bordering Utah ? })({ loc_2( state( next_to_2( stateid( 'utah' }) weight 0.0
*n:X -> ({ are in states bordering Nebraska ? })({ loc_2( state( next_to_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  are in states bordering *n:X#1  *t:Bound })({  loc_2( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are in states *n:X#1  *t:Bound })({  loc_2( state( *n:X#1  }) weight 0.0
*n:X -> ({ are in the })({ loc_2( }) weight 0.0
*n:X -> ({ are in the USA })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ are in the United })({ loc_2( countryid( }) weight 0.0
*n:X -> ({ are in the United States })({ loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  are in the United *n:X#1  *t:Bound })({  loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ are in the state })({ loc_2( state( }) weight 0.0
*n:X -> ({ are in the state with })({ loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ are in the state with the highest })({ loc_2( state( loc_1( highest( }) weight 0.0
*n:X -> ({ are in the state with the highest point })({ loc_2( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ are in the state with the highest point ? })({ loc_2( state( loc_1( highest( place( all }) weight 0.0
*n:X -> ({ are in the state with the largest population })({ loc_2( largest_one( population_1( state( }) weight 0.0
*n:X -> ({ are in the state with the largest population ? })({ loc_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ are in the state that has the most })({ loc_2( most( state( loc_1( }) weight 0.0
*n:X -> ({ are in the state that has the most rivers })({ loc_2( most( state( loc_1( river( }) weight 0.0
*n:X -> ({ are in the state that has the most rivers ? })({ loc_2( most( state( loc_1( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  are in the state *n:X#1  *t:Bound })({  loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are in the *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are in the *n:X#1 States  *t:Bound })({  loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  are in the *n:X#1 ?  *t:Bound })({  loc_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  are in the *n:X#1 with  *t:Bound })({  loc_2( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  are in the *n:X#1 rivers  *t:Bound })({  loc_2( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  are in the *n:X#1 point  *t:Bound })({  loc_2( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  are in *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are in *n:X#1 .  *t:Bound })({  loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are in *n:X#1 bordering  *t:Bound })({  loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  are in *n:X#1 bordering *n:X#2  *t:Bound })({  loc_2( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  are in *n:X#1 ?  *t:Bound })({  loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are in *n:X#1 Utah ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  are in *n:X#1 Utah *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  are in *n:X#1 Nebraska ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  are in *n:X#1 Nebraska *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  are in *n:X#1 York ?  *t:Bound })({  loc_2( stateid( *n:X#1 york'  }) weight 0.0
*n:X -> ({ are found in Colorado ? })({ loc_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  are found in *n:X#1 ?  *t:Bound })({  loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are found *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ are there in })({ loc_2( }) weight 0.0
*n:X -> ({ are there in Oregon ? })({ loc_2( stateid( 'oregon' }) weight 0.0
*n:Query -> ({ *t:Bound  are there in Oregon *n:X#1  *t:Bound })({  loc_2( *n:X#1 'oregon'  }) weight 0.0
*n:X -> ({ are there in Iowa ? })({ stateid( 'iowa' }) weight 0.0
*n:X -> ({ are there in Idaho ? })({ loc_2( stateid( 'idaho' }) weight 0.0
*n:Query -> ({ *t:Bound  are there in Idaho *n:X#1  *t:Bound })({  loc_2( *n:X#1 'idaho'  }) weight 0.0
*n:X -> ({ are there in Texas ? })({ loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  are there in Texas *n:X#1  *t:Bound })({  loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ are there in USA })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ are there in United })({ loc_2( countryid( }) weight 0.0
*n:X -> ({ are there in United States })({ loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  are there in United *n:X#1  *t:Bound })({  loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ are there in New York ? })({ stateid( 'new york' }) weight 0.0
*n:X -> ({ are there in US })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ are there in the })({ loc_2( }) weight 0.0
*n:X -> ({ are there in the USA })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ are there in the USA ? })({ _ , loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ are there in the United })({ loc_2( countryid( }) weight 0.0
*n:X -> ({ are there in the United States })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ are there in the US })({ loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  are there in the *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are there in *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are there in *n:X#1 States  *t:Bound })({  loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  are there in *n:X#1 ?  *t:Bound })({  loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are there in *n:X#1 ?  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:X -> ({ are located in Pennsylvania ? })({ loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  are located in *n:X#1 ?  *t:Bound })({  loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are located *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ are next to major })({ next_to_2( major( }) weight 0.0
*n:X -> ({ are next to major rivers })({ next_to_2( major( river( }) weight 0.0
*n:X -> ({ are next to major rivers ? })({ next_to_2( major( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  are next to major *n:X#1  *t:Bound })({  next_to_2( major( *n:X#1  }) weight 0.0
*n:X -> ({ are called })({ riverid( }) weight 0.0
*n:X -> ({ are called Colorado })({ riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  are called *n:X#1  *t:Bound })({  riverid( *n:X#1  }) weight 0.0
*n:X -> ({ are major })({ major( }) weight 0.0
*n:X -> ({ are major rivers })({ major( river( }) weight 0.0
*n:X -> ({ are major rivers in })({ major( river( loc_2( }) weight 0.0
*n:X -> ({ are major rivers in Texas ? })({ major( river( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  are major rivers in *n:X#1  *t:Bound })({  major( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are major rivers *n:X#1  *t:Bound })({  major( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are major *n:X#1  *t:Bound })({  major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are major *n:X#1 Texas ?  *t:Bound })({  major( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  are major *n:X#1 Texas *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  are major *n:X#1 in  *t:Bound })({  major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  are major *n:X#1 in *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:X -> ({ are longer })({ riverid( 'red' }) weight 0.0
*n:X -> ({ are longer than the Red })({ longer( riverid( 'red' }) weight 0.0
*n:Query -> ({ *t:Bound  are longer *n:X#1  *t:Bound })({  *n:X#1 riverid( 'red'  }) weight 0.0
*n:X -> ({ are the })({ loc_2( }) weight 0.0
*n:X -> ({ are the highest points })({ highest( place( loc_2( }) weight 0.0
*n:X -> ({ are the highest points of states surrounding Mississippi ? })({ highest( place( loc_2( state( next_to_2( stateid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  are the highest points *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are the highest *n:X#1  *t:Bound })({  highest( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ are the lakes in })({ lake( loc_2( }) weight 0.0
*n:X -> ({ are the lakes in states })({ lake( loc_2( state( }) weight 0.0
*n:X -> ({ are the lakes in states bordering })({ lake( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ are the lakes in states bordering Texas ? })({ lake( loc_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  are the lakes in *n:X#1  *t:Bound })({  lake( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ are the cities in })({ city( loc_2( }) weight 0.0
*n:X -> ({ are the cities in California ? })({ city( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  are the cities in *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ are the cities of the })({ city( loc_2( }) weight 0.0
*n:X -> ({ are the cities of the state })({ city( loc_2( state( }) weight 0.0
*n:X -> ({ are the cities of the state with })({ city( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ are the cities of the state with the highest })({ city( loc_2( state( loc_1( highest( }) weight 0.0
*n:X -> ({ are the cities of the state with the highest point })({ city( loc_2( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ are the capitals })({ capital( loc_2( }) weight 0.0
*n:X -> ({ are the capitals of states that border Missouri ? })({ capital( loc_2( state( next_to_2( stateid( 'missouri' }) weight 0.0
*n:X -> ({ are the capitals of the })({ capital( loc_2( }) weight 0.0
*n:X -> ({ are the capitals of the states })({ capital( loc_2( state( }) weight 0.0
*n:X -> ({ are the capitals of the states that border })({ capital( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ are the capitals of the states that border Texas ? })({ capital( loc_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  are the capitals *n:X#1  *t:Bound })({  capital( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ are the rivers })({ river( loc_2( }) weight 0.0
*n:X -> ({ are the rivers in })({ river( loc_2( }) weight 0.0
*n:X -> ({ are the rivers in Alaska ? })({ river( loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  are the rivers in *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ are the rivers of Montana ? })({ river( loc_2( stateid( 'montana' }) weight 0.0
*n:Query -> ({ *t:Bound  are the rivers *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are the *n:X#1  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  are the *n:X#1 in  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  are the *n:X#1 in states  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  are the *n:X#1 in *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  are the *n:X#1 points  *t:Bound })({  *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  are the *n:X#1 points *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  are the *n:X#1 of the  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  are *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are *n:X#1  *t:Bound })({  riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  are *n:X#1 major  *t:Bound })({  *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  are *n:X#1 major rivers  *t:Bound })({  *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  are *n:X#1 major rivers ?  *t:Bound })({  *n:X#1 major( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  are *n:X#1 major rivers *n:X#2  *t:Bound })({  *n:X#1 major( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  are *n:X#1 major *n:X#2  *t:Bound })({  *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  are *n:X#1 major *n:X#2 ?  *t:Bound })({  *n:X#1 major( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  are *n:X#1 than the Red  *t:Bound })({  longer( riverid( *n:X#1  }) weight 0.0
*n:X -> ({ flowing through })({ traverse_2( }) weight 0.0
*n:X -> ({ flowing through New York ? })({ traverse_2( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  flowing through New York *n:X#1  *t:Bound })({  traverse_2( *n:X#1 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  flowing through New *n:X#1 ?  *t:Bound })({  traverse_2( stateid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  flowing through *n:X#1  *t:Bound })({  traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  flowing through *n:X#1 ?  *t:Bound })({  traverse_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  flowing through *n:X#1 York ?  *t:Bound })({  traverse_2( stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  flowing through *n:X#1 York *n:X#2  *t:Bound })({  traverse_2( *n:X#2 *n:X#1 york'  }) weight 0.0
*n:X -> ({ high })({ high_point_1( }) weight 0.0
*n:X -> ({ high })({ elevation_1( }) weight 0.0
*n:X -> ({ high are the highest })({ elevation_1( highest( }) weight 0.0
*n:X -> ({ high are the highest points })({ elevation_1( highest( place( }) weight 0.0
*n:X -> ({ high are the highest points of all the })({ elevation_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ high are the highest points of all the states })({ elevation_1( highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ high are the highest points of all the states ? })({ elevation_1( highest( place( loc_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  high are the highest *n:X#1  *t:Bound })({  elevation_1( highest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  high are the *n:X#1  *t:Bound })({  elevation_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  high are the *n:X#1 ?  *t:Bound })({  elevation_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  high are the *n:X#1 states  *t:Bound })({  elevation_1( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  high are the *n:X#1 points  *t:Bound })({  elevation_1( *n:X#1 place(  }) weight 0.0
*n:X -> ({ high points })({ high_point_1( }) weight 0.0
*n:X -> ({ high points of states surrounding Mississippi ? })({ high_point_1( state( next_to_2( stateid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  high points *n:X#1  *t:Bound })({  high_point_1( *n:X#1  }) weight 0.0
*n:X -> ({ high point of Wyoming ? })({ high_point_1( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  high point of *n:X#1 ?  *t:Bound })({  high_point_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  high point *n:X#1  *t:Bound })({  high_point_1( *n:X#1  }) weight 0.0
*n:X -> ({ highest })({ highest( }) weight 0.0
*n:X -> ({ highest points })({ highest( place( }) weight 0.0
*n:X -> ({ highest points of all the })({ highest( place( loc_2( }) weight 0.0
*n:X -> ({ highest points of all the states })({ highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ highest points of all the states ? })({ highest( place( loc_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  highest points of *n:X#1  *t:Bound })({  highest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest points of *n:X#1 ?  *t:Bound })({  highest( place( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest points of *n:X#1 states  *t:Bound })({  highest( place( *n:X#1 state(  }) weight 0.0
*n:X -> ({ highest elevation })({ highest( place( }) weight 0.0
*n:X -> ({ highest elevation ? })({ highest( place( all }) weight 0.0
*n:X -> ({ highest elevation in })({ highest( place( loc_2( }) weight 0.0
*n:X -> ({ highest elevation in Texas ? })({ highest( place( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  highest elevation in Texas *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ highest elevation in New Mexico ? })({ highest( place( loc_2( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ highest elevation in South Carolina ? })({ highest( place( loc_2( stateid( 'south carolina' }) weight 0.0
*n:X -> ({ highest elevation in the })({ highest( place( loc_2( }) weight 0.0
*n:X -> ({ highest elevation in the United })({ highest( place( loc_2( countryid( }) weight 0.0
*n:X -> ({ highest elevation in the United States })({ highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  highest elevation in the *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest elevation in *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest elevation in *n:X#1 ?  *t:Bound })({  highest( place( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest elevation *n:X#1  *t:Bound })({  highest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest elevation *n:X#1 States  *t:Bound })({  highest( place( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest elevation *n:X#1 Texas ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest elevation *n:X#1 Texas *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest elevation *n:X#1 United  *t:Bound })({  highest( place( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest elevation *n:X#1 United States  *t:Bound })({  highest( place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest elevation *n:X#1 United *n:X#2  *t:Bound })({  highest( place( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:X -> ({ highest mountain })({ highest( mountain( }) weight 0.0
*n:X -> ({ highest mountain in })({ highest( mountain( loc_2( }) weight 0.0
*n:X -> ({ highest mountain in Alaska ? })({ highest( mountain( loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  highest mountain in Alaska *n:X#1  *t:Bound })({  highest( mountain( loc_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ highest mountain in Texas ? })({ highest( mountain( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  highest mountain in Texas *n:X#1  *t:Bound })({  highest( mountain( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ highest mountain in US })({ highest( mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ highest mountain in the })({ highest( mountain( loc_2( }) weight 0.0
*n:X -> ({ highest mountain in the US })({ highest( mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  highest mountain in the *n:X#1  *t:Bound })({  highest( mountain( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest mountain in *n:X#1  *t:Bound })({  highest( mountain( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest mountain in *n:X#1 ?  *t:Bound })({  highest( mountain( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest mountain *n:X#1  *t:Bound })({  highest( mountain( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest mountain *n:X#1 Alaska ?  *t:Bound })({  highest( mountain( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest mountain *n:X#1 Alaska *n:X#2  *t:Bound })({  highest( mountain( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest mountain *n:X#1 Texas ?  *t:Bound })({  highest( mountain( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest mountain *n:X#1 Texas *n:X#2  *t:Bound })({  highest( mountain( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest mountain *n:X#1 US  *t:Bound })({  highest( mountain( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ highest point })({ highest( place( }) weight 0.0
*n:X -> ({ highest point ? })({ highest( place( all }) weight 0.0
*n:X -> ({ highest point in })({ highest( place( loc_2( }) weight 0.0
*n:X -> ({ highest point in Delaware ? })({ highest( place( loc_2( stateid( 'delaware' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in Delaware *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'delaware'  }) weight 0.0
*n:X -> ({ highest point in America })({ highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ highest point in Iowa ? })({ highest( place( loc_2( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in Iowa *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ highest point in Colorado ? })({ highest( place( loc_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in Colorado *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'colorado'  }) weight 0.0
*n:X -> ({ highest point in Rhode Island ? })({ highest( place( loc_2( stateid( 'rhode island' }) weight 0.0
*n:X -> ({ highest point in Virginia ? })({ highest( place( loc_2( stateid( 'virginia' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in Virginia *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'virginia'  }) weight 0.0
*n:X -> ({ highest point in Florida ? })({ highest( place( loc_2( stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in Florida *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'florida'  }) weight 0.0
*n:X -> ({ highest point in Maine ? })({ highest( place( loc_2( stateid( 'maine' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in Maine *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'maine'  }) weight 0.0
*n:X -> ({ highest point in Kansas ? })({ highest( place( loc_2( stateid( 'kansas' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in Kansas *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'kansas'  }) weight 0.0
*n:X -> ({ highest point in Texas ? })({ highest( place( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in Texas *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ highest point in Montana ? })({ highest( place( loc_2( stateid( 'montana' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in Montana *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'montana'  }) weight 0.0
*n:X -> ({ highest point in USA })({ highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ highest point in New Mexico ? })({ highest( place( loc_2( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ highest point in Wyoming ? })({ highest( place( loc_2( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in Wyoming *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'wyoming'  }) weight 0.0
*n:X -> ({ highest point in each state })({ highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ highest point in each state whose })({ highest( place( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ highest point in each state whose lowest point })({ highest( place( loc_2( state( loc_1( place( }) weight 0.0
*n:X -> ({ highest point in each state whose lowest point is sea })({ highest( place( loc_2( state( loc_1( place( elevation_2( }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in each *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ highest point in Nevada in meters ? })({ highest( place( loc_2( stateid( 'nevada' }) weight 0.0
*n:X -> ({ highest point in Ohio ? })({ highest( place( loc_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in Ohio *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1 'ohio'  }) weight 0.0
*n:X -> ({ highest point in states })({ highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ highest point in states bordering })({ highest( place( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ highest point in states bordering Georgia ? })({ highest( place( loc_2( state( next_to_2( stateid( 'georgia' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in states *n:X#1  *t:Bound })({  highest( place( loc_2( state( *n:X#1  }) weight 0.0
*n:X -> ({ highest point in the })({ highest( place( loc_2( }) weight 0.0
*n:X -> ({ highest point in the country })({ highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ highest point in the USA })({ highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ highest point in the United })({ highest( place( loc_2( countryid( }) weight 0.0
*n:X -> ({ highest point in the United States })({ highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ highest point in the US })({ highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ highest point in the states })({ highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ highest point in the states bordering })({ highest( place( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ highest point in the states bordering Colorado ? })({ highest( place( loc_2( state( next_to_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ highest point in the largest })({ highest( place( loc_2( largest( }) weight 0.0
*n:X -> ({ highest point in the largest state })({ highest( place( loc_2( largest( state( }) weight 0.0
*n:X -> ({ highest point in the largest state ? })({ highest( place( loc_2( largest( state( all }) weight 0.0
*n:X -> ({ highest point in the smallest })({ highest( place( loc_2( smallest( }) weight 0.0
*n:X -> ({ highest point in the smallest state })({ highest( place( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ highest point in the smallest state ? })({ highest( place( loc_2( smallest( state( all }) weight 0.0
*n:X -> ({ highest point in the state })({ highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ highest point in the state with })({ highest( place( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ highest point in the state with capital })({ highest( place( loc_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ highest point in the state with capital Des })({ highest( place( loc_2( state( loc_1( capital( cityid( 'des }) weight 0.0
*n:X -> ({ highest point in the state with capital Des Moines })({ highest( place( loc_2( state( loc_1( capital( cityid( 'des moines', }) weight 0.0
*n:X -> ({ highest point in the state with capital Des Moines ? })({ highest( place( loc_2( state( loc_1( capital( cityid( 'des moines', _ }) weight 0.0
*n:X -> ({ highest point in the state with capital Austin })({ highest( place( loc_2( state( loc_1( capital( cityid( 'austin', }) weight 0.0
*n:X -> ({ highest point in the state with capital Austin ? })({ highest( place( loc_2( state( loc_1( capital( cityid( 'austin', _ }) weight 0.0
*n:X -> ({ highest point in the state with the capital })({ highest( place( loc_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ highest point in the state with the capital Des })({ highest( place( loc_2( state( loc_1( capital( cityid( 'des }) weight 0.0
*n:X -> ({ highest point in the state with the capital Des Moines })({ highest( place( loc_2( state( loc_1( capital( cityid( 'des moines', }) weight 0.0
*n:X -> ({ highest point in the state with the most })({ highest( place( loc_2( most( state( }) weight 0.0
*n:X -> ({ highest point in the state with the most rivers })({ highest( place( loc_2( most( state( traverse_1( river( }) weight 0.0
*n:X -> ({ highest point in the state with the most rivers ? })({ highest( place( loc_2( most( state( traverse_1( river( all }) weight 0.0
*n:X -> ({ highest point in the state with the smallest population })({ highest( place( loc_2( smallest_one( population_1( state( }) weight 0.0
*n:X -> ({ highest point in the state with the smallest population ? })({ highest( place( loc_2( smallest_one( population_1( state( all }) weight 0.0
*n:X -> ({ highest point in the state of Oregon ? })({ highest( place( loc_2( state( stateid( 'oregon' }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in the *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in *n:X#1 bordering  *t:Bound })({  highest( place( loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point in *n:X#1 ?  *t:Bound })({  highest( place( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ highest point of the })({ highest( place( loc_2( }) weight 0.0
*n:X -> ({ highest point of the USA })({ highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ highest point of the state })({ highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ highest point of the state with })({ highest( place( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ highest point of the state with the largest })({ highest( place( loc_2( state( loc_1( largest( }) weight 0.0
*n:X -> ({ highest point of the state with the largest capital })({ highest( place( loc_2( state( loc_1( largest( capital( }) weight 0.0
*n:X -> ({ highest point of the state with the largest capital city })({ highest( place( loc_2( state( loc_1( largest( capital( city( }) weight 0.0
*n:X -> ({ highest point of the state with the largest area })({ highest( place( loc_2( largest_one( area_1( state( }) weight 0.0
*n:X -> ({ highest point of the state with the largest area ? })({ highest( place( loc_2( largest_one( area_1( state( all }) weight 0.0
*n:X -> ({ highest point of the state with the smallest population density })({ highest( place( loc_2( smallest_one( density_1( state( }) weight 0.0
*n:Query -> ({ *t:Bound  highest point of the *n:X#1  *t:Bound })({  highest( place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point of *n:X#1  *t:Bound })({  highest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point of *n:X#1 ?  *t:Bound })({  highest( place( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point of *n:X#1 USA  *t:Bound })({  highest( place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point of *n:X#1 capital  *t:Bound })({  highest( place( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point of *n:X#1 city  *t:Bound })({  highest( place( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point of *n:X#1 with  *t:Bound })({  highest( place( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point of *n:X#1 state  *t:Bound })({  highest( place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1  *t:Bound })({  highest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 States  *t:Bound })({  highest( place( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Des  *t:Bound })({  highest( place( *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Delaware ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Delaware *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 bordering  *t:Bound })({  highest( place( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 bordering *n:X#2  *t:Bound })({  highest( place( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 America  *t:Bound })({  highest( place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Iowa ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Iowa *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 country  *t:Bound })({  highest( place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Colorado ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Colorado *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Georgia ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Georgia *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 ?  *t:Bound })({  highest( place( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 ?  *t:Bound })({  highest( place( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Moines  *t:Bound })({  highest( place( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Moines ?  *t:Bound })({  highest( place( *n:X#1 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Moines *n:X#2  *t:Bound })({  highest( place( *n:X#1 moines', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Austin  *t:Bound })({  highest( place( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Virginia ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Virginia *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Florida ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Florida *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Maine ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Maine *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Kansas ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Kansas *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Texas ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Texas *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Montana ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Montana *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 USA  *t:Bound })({  highest( place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 United  *t:Bound })({  highest( place( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 United States  *t:Bound })({  highest( place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 United *n:X#2  *t:Bound })({  highest( place( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 capital  *t:Bound })({  highest( place( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Wyoming ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Wyoming *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 each state  *t:Bound })({  highest( place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 each *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 lowest point  *t:Bound })({  highest( place( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 lowest *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 is sea  *t:Bound })({  highest( place( *n:X#1 elevation_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 is *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 US  *t:Bound })({  highest( place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Ohio ?  *t:Bound })({  highest( place( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 Ohio *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 states  *t:Bound })({  highest( place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 states bordering  *t:Bound })({  highest( place( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 states *n:X#2  *t:Bound })({  highest( place( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 largest  *t:Bound })({  highest( place( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 largest state  *t:Bound })({  highest( place( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 largest *n:X#2  *t:Bound })({  highest( place( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 with  *t:Bound })({  highest( place( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 with capital  *t:Bound })({  highest( place( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 with *n:X#2  *t:Bound })({  highest( place( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 rivers  *t:Bound })({  highest( place( *n:X#1 traverse_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 whose  *t:Bound })({  highest( place( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 smallest  *t:Bound })({  highest( place( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 smallest state  *t:Bound })({  highest( place( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 smallest *n:X#2  *t:Bound })({  highest( place( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 state  *t:Bound })({  highest( place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 state ?  *t:Bound })({  highest( place( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 state with  *t:Bound })({  highest( place( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 state *n:X#2  *t:Bound })({  highest( place( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 the capital  *t:Bound })({  highest( place( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest point *n:X#1 the *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1  *t:Bound })({  highest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 States  *t:Bound })({  highest( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Alaska ?  *t:Bound })({  highest( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Alaska *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Des  *t:Bound })({  highest( *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Des Moines  *t:Bound })({  highest( *n:X#1 cityid( 'des moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Des *n:X#2  *t:Bound })({  highest( *n:X#1 cityid( 'des *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Delaware ?  *t:Bound })({  highest( *n:X#1 stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Delaware *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 bordering  *t:Bound })({  highest( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 bordering Colorado ?  *t:Bound })({  highest( *n:X#1 next_to_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 bordering Colorado *n:X#2  *t:Bound })({  highest( *n:X#1 next_to_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 bordering Georgia ?  *t:Bound })({  highest( *n:X#1 next_to_2( stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 bordering Georgia *n:X#2  *t:Bound })({  highest( *n:X#1 next_to_2( *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 bordering *n:X#2  *t:Bound })({  highest( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 bordering *n:X#2 ?  *t:Bound })({  highest( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 America  *t:Bound })({  highest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Iowa ?  *t:Bound })({  highest( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Iowa *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 country  *t:Bound })({  highest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Colorado ?  *t:Bound })({  highest( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Colorado *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Georgia ?  *t:Bound })({  highest( *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Georgia *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 ?  *t:Bound })({  highest( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 ?  *t:Bound })({  highest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Moines  *t:Bound })({  highest( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Moines ?  *t:Bound })({  highest( *n:X#1 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Moines *n:X#2  *t:Bound })({  highest( *n:X#1 moines', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Rhode Island ?  *t:Bound })({  highest( *n:X#1 stateid( 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Rhode Island *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Rhode *n:X#2 ?  *t:Bound })({  highest( *n:X#1 stateid( 'rhode *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Austin  *t:Bound })({  highest( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Austin ?  *t:Bound })({  highest( *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Austin *n:X#2  *t:Bound })({  highest( *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Virginia ?  *t:Bound })({  highest( *n:X#1 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Virginia *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Florida ?  *t:Bound })({  highest( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Florida *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Maine ?  *t:Bound })({  highest( *n:X#1 stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Maine *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Kansas ?  *t:Bound })({  highest( *n:X#1 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Kansas *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Texas ?  *t:Bound })({  highest( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Texas *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Montana ?  *t:Bound })({  highest( *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Montana *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 USA  *t:Bound })({  highest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 United  *t:Bound })({  highest( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 United States  *t:Bound })({  highest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 United *n:X#2  *t:Bound })({  highest( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 capital  *t:Bound })({  highest( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 capital Des  *t:Bound })({  highest( *n:X#1 capital( cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 capital Austin  *t:Bound })({  highest( *n:X#1 capital( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 capital city  *t:Bound })({  highest( *n:X#1 capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 capital *n:X#2  *t:Bound })({  highest( *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 capital *n:X#2  *t:Bound })({  highest( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 New Mexico ?  *t:Bound })({  highest( *n:X#1 stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 New Mexico *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 New *n:X#2 ?  *t:Bound })({  highest( *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Wyoming ?  *t:Bound })({  highest( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Wyoming *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 each state  *t:Bound })({  highest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 each state whose  *t:Bound })({  highest( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 each state *n:X#2  *t:Bound })({  highest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 each *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 each *n:X#2 whose  *t:Bound })({  highest( *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 lowest point  *t:Bound })({  highest( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 lowest *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 is sea  *t:Bound })({  highest( *n:X#1 elevation_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 is *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 South Carolina ?  *t:Bound })({  highest( *n:X#1 stateid( 'south carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 South Carolina *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'south carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 South *n:X#2 ?  *t:Bound })({  highest( *n:X#1 stateid( 'south *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 US  *t:Bound })({  highest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Ohio ?  *t:Bound })({  highest( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 Ohio *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 states  *t:Bound })({  highest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 states bordering  *t:Bound })({  highest( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 states bordering *n:X#2  *t:Bound })({  highest( *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 states ?  *t:Bound })({  highest( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 states *n:X#2  *t:Bound })({  highest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in  *t:Bound })({  highest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Alaska ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Alaska *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Delaware ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Delaware *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in America  *t:Bound })({  highest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Iowa ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Iowa *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Colorado ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Colorado *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Virginia ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Virginia *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Florida ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Florida *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Maine ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Maine *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Kansas ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Kansas *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Texas ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Texas *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Montana ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Montana *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in USA  *t:Bound })({  highest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Wyoming ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Wyoming *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in each state  *t:Bound })({  highest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in each *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in US  *t:Bound })({  highest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Ohio ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in Ohio *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in states  *t:Bound })({  highest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in states bordering  *t:Bound })({  highest( *n:X#1 loc_2( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in states *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in the  *t:Bound })({  highest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in the country  *t:Bound })({  highest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in the USA  *t:Bound })({  highest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in the United  *t:Bound })({  highest( *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in the US  *t:Bound })({  highest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in the states  *t:Bound })({  highest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in the largest  *t:Bound })({  highest( *n:X#1 loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in the smallest  *t:Bound })({  highest( *n:X#1 loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in the state  *t:Bound })({  highest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in the *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in *n:X#2 bordering  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 in *n:X#2 ?  *t:Bound })({  highest( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 largest  *t:Bound })({  highest( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 largest state  *t:Bound })({  highest( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 largest state ?  *t:Bound })({  highest( *n:X#1 largest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 largest state *n:X#2  *t:Bound })({  highest( *n:X#1 largest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 largest *n:X#2  *t:Bound })({  highest( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 largest *n:X#2 ?  *t:Bound })({  highest( *n:X#1 largest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 city  *t:Bound })({  highest( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 with  *t:Bound })({  highest( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 with capital  *t:Bound })({  highest( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 with the capital  *t:Bound })({  highest( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 with the largest  *t:Bound })({  highest( *n:X#1 loc_1( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 with the *n:X#2  *t:Bound })({  highest( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 with *n:X#2  *t:Bound })({  highest( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 with *n:X#2 ?  *t:Bound })({  highest( *n:X#1 loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 with *n:X#2 Moines  *t:Bound })({  highest( *n:X#1 loc_1( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of Oregon ?  *t:Bound })({  highest( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of all the  *t:Bound })({  highest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of the  *t:Bound })({  highest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of the USA  *t:Bound })({  highest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of the state  *t:Bound })({  highest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of the *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of *n:X#2 ?  *t:Bound })({  highest( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of *n:X#2 ?  *t:Bound })({  highest( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of *n:X#2 USA  *t:Bound })({  highest( *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of *n:X#2 capital  *t:Bound })({  highest( *n:X#1 *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of *n:X#2 states  *t:Bound })({  highest( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of *n:X#2 city  *t:Bound })({  highest( *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of *n:X#2 with  *t:Bound })({  highest( *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 of *n:X#2 state  *t:Bound })({  highest( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 rivers  *t:Bound })({  highest( *n:X#1 traverse_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 rivers ?  *t:Bound })({  highest( *n:X#1 traverse_1( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 rivers *n:X#2  *t:Bound })({  highest( *n:X#1 traverse_1( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 whose  *t:Bound })({  highest( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 whose lowest point  *t:Bound })({  highest( *n:X#1 loc_1( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 whose lowest *n:X#2  *t:Bound })({  highest( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 smallest  *t:Bound })({  highest( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 smallest state  *t:Bound })({  highest( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 smallest state ?  *t:Bound })({  highest( *n:X#1 smallest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 smallest state *n:X#2  *t:Bound })({  highest( *n:X#1 smallest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 smallest *n:X#2  *t:Bound })({  highest( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 smallest *n:X#2 ?  *t:Bound })({  highest( *n:X#1 smallest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 state  *t:Bound })({  highest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 state ?  *t:Bound })({  highest( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 state with  *t:Bound })({  highest( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 state with capital  *t:Bound })({  highest( *n:X#1 state( loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 state with *n:X#2  *t:Bound })({  highest( *n:X#1 state( loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 state *n:X#2  *t:Bound })({  highest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 state *n:X#2 ?  *t:Bound })({  highest( *n:X#1 state( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 state *n:X#2 Moines  *t:Bound })({  highest( *n:X#1 state( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 state *n:X#2 capital  *t:Bound })({  highest( *n:X#1 state( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 state *n:X#2 city  *t:Bound })({  highest( *n:X#1 state( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 the capital  *t:Bound })({  highest( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 the capital Des  *t:Bound })({  highest( *n:X#1 capital( cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 the capital *n:X#2  *t:Bound })({  highest( *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 the largest  *t:Bound })({  highest( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 the largest capital  *t:Bound })({  highest( *n:X#1 largest( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 the largest *n:X#2  *t:Bound })({  highest( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 the *n:X#2  *t:Bound })({  highest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 the *n:X#2 Des  *t:Bound })({  highest( *n:X#1 *n:X#2 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 the *n:X#2 Moines  *t:Bound })({  highest( *n:X#1 *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 the *n:X#2 capital  *t:Bound })({  highest( *n:X#1 *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  highest *n:X#1 the *n:X#2 city  *t:Bound })({  highest( *n:X#1 *n:X#2 city(  }) weight 0.0
*n:X -> ({ lakes })({ lake( }) weight 0.0
*n:X -> ({ lakes in })({ lake( loc_2( }) weight 0.0
*n:X -> ({ lakes in California . })({ lake( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  lakes in California *n:X#1  *t:Bound })({  lake( loc_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ lakes in United })({ lake( loc_2( countryid( }) weight 0.0
*n:X -> ({ lakes in United States })({ lake( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  lakes in United *n:X#1  *t:Bound })({  lake( loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ lakes in Michigan . })({ lake( loc_2( stateid( 'michigan' }) weight 0.0
*n:Query -> ({ *t:Bound  lakes in Michigan *n:X#1  *t:Bound })({  lake( loc_2( *n:X#1 'michigan'  }) weight 0.0
*n:X -> ({ lakes in the })({ lake( loc_2( }) weight 0.0
*n:X -> ({ lakes in the US })({ lake( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  lakes in the *n:X#1  *t:Bound })({  lake( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes in *n:X#1  *t:Bound })({  lake( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes in *n:X#1 States  *t:Bound })({  lake( loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes in *n:X#1 .  *t:Bound })({  lake( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes *n:X#1  *t:Bound })({  lake( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes *n:X#1 States  *t:Bound })({  lake( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes *n:X#1 California .  *t:Bound })({  lake( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes *n:X#1 California *n:X#2  *t:Bound })({  lake( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes *n:X#1 United  *t:Bound })({  lake( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes *n:X#1 United States  *t:Bound })({  lake( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes *n:X#1 United *n:X#2  *t:Bound })({  lake( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes *n:X#1 Michigan .  *t:Bound })({  lake( *n:X#1 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes *n:X#1 Michigan *n:X#2  *t:Bound })({  lake( *n:X#1 *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  lakes *n:X#1 US  *t:Bound })({  lake( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ level })({ 0 }) weight 0.0
*n:X -> ({ lowest })({ lowest( }) weight 0.0
*n:X -> ({ lowest elevation })({ lowest( place( }) weight 0.0
*n:X -> ({ lowest elevation in })({ lowest( place( loc_2( }) weight 0.0
*n:X -> ({ lowest elevation in Pennsylvania ? })({ lowest( place( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  lowest elevation in Pennsylvania *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest elevation in *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest elevation in *n:X#1 ?  *t:Bound })({  lowest( place( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest elevation *n:X#1  *t:Bound })({  lowest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest elevation *n:X#1 Pennsylvania ?  *t:Bound })({  lowest( place( *n:X#1 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest elevation *n:X#1 Pennsylvania *n:X#2  *t:Bound })({  lowest( place( *n:X#1 *n:X#2 'pennsylvania'  }) weight 0.0
*n:X -> ({ lowest point })({ lowest( place( }) weight 0.0
*n:X -> ({ lowest point ? })({ lowest( place( all }) weight 0.0
*n:X -> ({ lowest point in })({ lowest( place( loc_2( }) weight 0.0
*n:X -> ({ lowest point in Oregon ? })({ lowest( place( loc_2( stateid( 'oregon' }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point in Oregon *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1 'oregon'  }) weight 0.0
*n:X -> ({ lowest point in California ? })({ lowest( place( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point in California *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ lowest point in Louisiana ? })({ lowest( place( loc_2( stateid( 'louisiana' }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point in Louisiana *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1 'louisiana'  }) weight 0.0
*n:X -> ({ lowest point in Arkansas ? })({ lowest( place( loc_2( stateid( 'arkansas' }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point in Arkansas *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1 'arkansas'  }) weight 0.0
*n:X -> ({ lowest point in Wisconsin ? })({ lowest( place( loc_2( stateid( 'wisconsin' }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point in Wisconsin *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1 'wisconsin'  }) weight 0.0
*n:X -> ({ lowest point in Texas ? })({ lowest( place( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point in Texas *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ lowest point in Massachusetts ? })({ lowest( place( loc_2( stateid( 'massachusetts' }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point in Massachusetts *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1 'massachusetts'  }) weight 0.0
*n:X -> ({ lowest point in USA })({ lowest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ lowest point in Mississippi ? })({ lowest( place( loc_2( stateid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point in Mississippi *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1 'mississippi'  }) weight 0.0
*n:X -> ({ lowest point in Nebraska in meters ? })({ lowest( place( loc_2( stateid( 'nebraska' }) weight 0.0
*n:X -> ({ lowest point in the })({ lowest( place( loc_2( }) weight 0.0
*n:X -> ({ lowest point in the USA })({ lowest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ lowest point in the United })({ lowest( place( loc_2( countryid( }) weight 0.0
*n:X -> ({ lowest point in the United States })({ lowest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ lowest point in the state })({ lowest( place( loc_2( state( }) weight 0.0
*n:X -> ({ lowest point in the state of California ? })({ lowest( place( loc_2( state( stateid( 'california' }) weight 0.0
*n:X -> ({ lowest point in the state of Texas ? })({ lowest( place( loc_2( state( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point in the *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point in *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point in *n:X#1 ?  *t:Bound })({  lowest( place( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ lowest point of all })({ lowest( place( loc_2( }) weight 0.0
*n:X -> ({ lowest point of all states })({ lowest( place( loc_2( state( }) weight 0.0
*n:X -> ({ lowest point of all states through which })({ lowest( place( loc_2( state( traverse_1( }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point of all *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ lowest point of the })({ lowest( place( loc_2( }) weight 0.0
*n:X -> ({ lowest point of the US })({ lowest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ lowest point of the state with the largest area })({ lowest( place( loc_2( largest_one( area_1( state( }) weight 0.0
*n:X -> ({ lowest point of the state with the largest area ? })({ lowest( place( loc_2( largest_one( area_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point of the *n:X#1  *t:Bound })({  lowest( place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point of *n:X#1  *t:Bound })({  lowest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point of *n:X#1 ?  *t:Bound })({  lowest( place( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point of *n:X#1 US  *t:Bound })({  lowest( place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point of *n:X#1 states  *t:Bound })({  lowest( place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1  *t:Bound })({  lowest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 States  *t:Bound })({  lowest( place( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Oregon ?  *t:Bound })({  lowest( place( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Oregon *n:X#2  *t:Bound })({  lowest( place( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 California ?  *t:Bound })({  lowest( place( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 California *n:X#2  *t:Bound })({  lowest( place( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Louisiana ?  *t:Bound })({  lowest( place( *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Louisiana *n:X#2  *t:Bound })({  lowest( place( *n:X#1 *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Arkansas ?  *t:Bound })({  lowest( place( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Arkansas *n:X#2  *t:Bound })({  lowest( place( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Wisconsin ?  *t:Bound })({  lowest( place( *n:X#1 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Wisconsin *n:X#2  *t:Bound })({  lowest( place( *n:X#1 *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Texas ?  *t:Bound })({  lowest( place( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Texas *n:X#2  *t:Bound })({  lowest( place( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Massachusetts ?  *t:Bound })({  lowest( place( *n:X#1 stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Massachusetts *n:X#2  *t:Bound })({  lowest( place( *n:X#1 *n:X#2 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 USA  *t:Bound })({  lowest( place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 United  *t:Bound })({  lowest( place( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 United States  *t:Bound })({  lowest( place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 United *n:X#2  *t:Bound })({  lowest( place( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Mississippi ?  *t:Bound })({  lowest( place( *n:X#1 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 Mississippi *n:X#2  *t:Bound })({  lowest( place( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 state  *t:Bound })({  lowest( place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest point *n:X#1 state *n:X#2  *t:Bound })({  lowest( place( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1  *t:Bound })({  lowest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 States  *t:Bound })({  lowest( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Oregon ?  *t:Bound })({  lowest( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Oregon *n:X#2  *t:Bound })({  lowest( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 California ?  *t:Bound })({  lowest( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 California *n:X#2  *t:Bound })({  lowest( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Louisiana ?  *t:Bound })({  lowest( *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Louisiana *n:X#2  *t:Bound })({  lowest( *n:X#1 *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Arkansas ?  *t:Bound })({  lowest( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Arkansas *n:X#2  *t:Bound })({  lowest( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 ?  *t:Bound })({  lowest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Wisconsin ?  *t:Bound })({  lowest( *n:X#1 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Wisconsin *n:X#2  *t:Bound })({  lowest( *n:X#1 *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Texas ?  *t:Bound })({  lowest( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Texas *n:X#2  *t:Bound })({  lowest( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Massachusetts ?  *t:Bound })({  lowest( *n:X#1 stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Massachusetts *n:X#2  *t:Bound })({  lowest( *n:X#1 *n:X#2 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 USA  *t:Bound })({  lowest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 United  *t:Bound })({  lowest( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 United States  *t:Bound })({  lowest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 United *n:X#2  *t:Bound })({  lowest( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Pennsylvania ?  *t:Bound })({  lowest( *n:X#1 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Pennsylvania *n:X#2  *t:Bound })({  lowest( *n:X#1 *n:X#2 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Mississippi ?  *t:Bound })({  lowest( *n:X#1 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 Mississippi *n:X#2  *t:Bound })({  lowest( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 US  *t:Bound })({  lowest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 states  *t:Bound })({  lowest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 states through which  *t:Bound })({  lowest( *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 states *n:X#2  *t:Bound })({  lowest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in  *t:Bound })({  lowest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Oregon ?  *t:Bound })({  lowest( *n:X#1 loc_2( stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Oregon *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in California ?  *t:Bound })({  lowest( *n:X#1 loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in California *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Louisiana ?  *t:Bound })({  lowest( *n:X#1 loc_2( stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Louisiana *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Arkansas ?  *t:Bound })({  lowest( *n:X#1 loc_2( stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Arkansas *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Wisconsin ?  *t:Bound })({  lowest( *n:X#1 loc_2( stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Wisconsin *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Texas ?  *t:Bound })({  lowest( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Texas *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Massachusetts ?  *t:Bound })({  lowest( *n:X#1 loc_2( stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Massachusetts *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in USA  *t:Bound })({  lowest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Pennsylvania ?  *t:Bound })({  lowest( *n:X#1 loc_2( stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Pennsylvania *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Mississippi ?  *t:Bound })({  lowest( *n:X#1 loc_2( stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in Mississippi *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in the  *t:Bound })({  lowest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in the USA  *t:Bound })({  lowest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in the United  *t:Bound })({  lowest( *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in the state  *t:Bound })({  lowest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in the *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 in *n:X#2 ?  *t:Bound })({  lowest( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 through which  *t:Bound })({  lowest( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of California ?  *t:Bound })({  lowest( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of Texas ?  *t:Bound })({  lowest( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of all  *t:Bound })({  lowest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of all states  *t:Bound })({  lowest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of all *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of the  *t:Bound })({  lowest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of the US  *t:Bound })({  lowest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of the *n:X#2  *t:Bound })({  lowest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of *n:X#2  *t:Bound })({  lowest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of *n:X#2 ?  *t:Bound })({  lowest( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of *n:X#2 ?  *t:Bound })({  lowest( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of *n:X#2 US  *t:Bound })({  lowest( *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 of *n:X#2 states  *t:Bound })({  lowest( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 state  *t:Bound })({  lowest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  lowest *n:X#1 state *n:X#2  *t:Bound })({  lowest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:X -> ({ states })({ state( }) weight 0.0
*n:X -> ({ states . })({ state( all }) weight 0.0
*n:X -> ({ states bordering })({ state( next_to_2( }) weight 0.0
*n:X -> ({ states bordering Colorado ? })({ state( next_to_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  states bordering Colorado *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'colorado'  }) weight 0.0
*n:X -> ({ states bordering Georgia ? })({ state( next_to_2( stateid( 'georgia' }) weight 0.0
*n:Query -> ({ *t:Bound  states bordering Georgia *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'georgia'  }) weight 0.0
*n:X -> ({ states bordering Utah ? })({ state( next_to_2( stateid( 'utah' }) weight 0.0
*n:Query -> ({ *t:Bound  states bordering Utah *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'utah'  }) weight 0.0
*n:X -> ({ states bordering Texas ? })({ state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  states bordering Texas *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ states bordering Nebraska ? })({ state( next_to_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  states bordering Nebraska *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  states bordering *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states bordering *n:X#1 ?  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ states are in the })({ state( loc_2( }) weight 0.0
*n:X -> ({ states are in the USA })({ state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ states are in the United })({ state( loc_2( countryid( }) weight 0.0
*n:X -> ({ states are in the United States })({ state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  states are in the *n:X#1  *t:Bound })({  state( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ states are there ? })({ state( all }) weight 0.0
*n:X -> ({ states are there in })({ state( loc_2( }) weight 0.0
*n:X -> ({ states are there in United })({ state( loc_2( countryid( }) weight 0.0
*n:X -> ({ states are there in United States })({ state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ states are there in the })({ state( loc_2( }) weight 0.0
*n:X -> ({ states are there in the USA })({ state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  states are there in *n:X#1  *t:Bound })({  state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states are there *n:X#1  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:X -> ({ states are next to major })({ state( next_to_2( major( }) weight 0.0
*n:X -> ({ states are next to major rivers })({ state( next_to_2( major( river( }) weight 0.0
*n:X -> ({ states are next to major rivers ? })({ state( next_to_2( major( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  states are *n:X#1 major  *t:Bound })({  state( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  states are *n:X#1 major rivers  *t:Bound })({  state( *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  states are *n:X#1 major *n:X#2  *t:Bound })({  state( *n:X#1 major( *n:X#2  }) weight 0.0
*n:X -> ({ states ? })({ state( all }) weight 0.0
*n:X -> ({ states have })({ state( loc_1( }) weight 0.0
*n:X -> ({ states have cities })({ state( loc_1( city( }) weight 0.0
*n:X -> ({ states have cities or towns named Springfield })({ state( loc_1( city( cityid( 'springfield', }) weight 0.0
*n:X -> ({ states have cities or towns named Springfield ? })({ state( loc_1( city( cityid( 'springfield', _ }) weight 0.0
*n:Query -> ({ *t:Bound  states have cities or *n:X#1  *t:Bound })({  state( loc_1( city( *n:X#1  }) weight 0.0
*n:X -> ({ states have cities named })({ state( loc_1( city( cityid( }) weight 0.0
*n:X -> ({ states have cities named Austin })({ state( loc_1( city( cityid( 'austin', }) weight 0.0
*n:X -> ({ states have cities named Austin ? })({ state( loc_1( city( cityid( 'austin', _ }) weight 0.0
*n:Query -> ({ *t:Bound  states have cities named *n:X#1  *t:Bound })({  state( loc_1( city( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states have cities *n:X#1  *t:Bound })({  state( loc_1( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states have cities *n:X#1 ?  *t:Bound })({  state( loc_1( city( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states have cities *n:X#1 Austin  *t:Bound })({  state( loc_1( city( *n:X#1 'austin',  }) weight 0.0
*n:X -> ({ states have major })({ state( loc_1( major( }) weight 0.0
*n:X -> ({ states have major rivers })({ state( loc_1( major( river( }) weight 0.0
*n:X -> ({ states have major rivers ? })({ state( loc_1( major( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  states have major rivers *n:X#1  *t:Bound })({  state( loc_1( major( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states have major *n:X#1  *t:Bound })({  state( loc_1( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states have major *n:X#1 ?  *t:Bound })({  state( loc_1( major( *n:X#1 all  }) weight 0.0
*n:X -> ({ states have a })({ state( loc_1( }) weight 0.0
*n:X -> ({ states have a city })({ state( loc_1( city( }) weight 0.0
*n:X -> ({ states have a city called Rochester })({ state( loc_1( city( cityid( 'rochester', }) weight 0.0
*n:X -> ({ states have a city called Rochester ? })({ state( loc_1( city( cityid( 'rochester', _ }) weight 0.0
*n:X -> ({ states have a city named })({ state( loc_1( city( cityid( }) weight 0.0
*n:X -> ({ states have a city named Springfield })({ state( loc_1( city( cityid( 'springfield', }) weight 0.0
*n:X -> ({ states have a city named Springfield ? })({ state( loc_1( city( cityid( 'springfield', _ }) weight 0.0
*n:Query -> ({ *t:Bound  states have a city *n:X#1  *t:Bound })({  state( loc_1( city( *n:X#1  }) weight 0.0
*n:X -> ({ states have a higher point than })({ state( loc_1( place( higher_2( }) weight 0.0
*n:X -> ({ states have a higher point than the highest })({ state( loc_1( place( higher_2( highest( }) weight 0.0
*n:X -> ({ states have a higher point than the highest point })({ state( loc_1( place( higher_2( highest( place( }) weight 0.0
*n:Query -> ({ *t:Bound  states have a *n:X#1  *t:Bound })({  state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states have a *n:X#1 ?  *t:Bound })({  state( loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states have a *n:X#1 Springfield  *t:Bound })({  state( loc_1( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  states have a *n:X#1 named  *t:Bound })({  state( loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states have a *n:X#1 point  *t:Bound })({  state( loc_1( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1  *t:Bound })({  state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 ?  *t:Bound })({  state( loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 ?  *t:Bound })({  state( loc_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 Austin  *t:Bound })({  state( loc_1( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 Austin ?  *t:Bound })({  state( loc_1( *n:X#1 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 Austin *n:X#2  *t:Bound })({  state( loc_1( *n:X#1 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 or *n:X#2  *t:Bound })({  state( loc_1( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 named  *t:Bound })({  state( loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 named Austin  *t:Bound })({  state( loc_1( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 named *n:X#2  *t:Bound })({  state( loc_1( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 rivers  *t:Bound })({  state( loc_1( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 rivers ?  *t:Bound })({  state( loc_1( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  states have *n:X#1 rivers *n:X#2  *t:Bound })({  state( loc_1( *n:X#1 river( *n:X#2  }) weight 0.0
*n:X -> ({ states in the })({ state( loc_2( }) weight 0.0
*n:X -> ({ states in the US })({ state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ states in the US does })({ state( loc_2( countryid( 'usa' ,traverse_1( }) weight 0.0
*n:X -> ({ states in the US does the shortest })({ state( loc_2( countryid( 'usa' ,traverse_1( shortest( }) weight 0.0
*n:X -> ({ states in the US does the shortest river })({ state( loc_2( countryid( 'usa' ,traverse_1( shortest( river( }) weight 0.0
*n:Query -> ({ *t:Bound  states in the US *n:X#1  *t:Bound })({  state( loc_2( countryid( 'usa' *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states in the *n:X#1  *t:Bound })({  state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states in the *n:X#1 does  *t:Bound })({  state( loc_2( *n:X#1 ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  states in the *n:X#1 river  *t:Bound })({  state( loc_2( *n:X#1 river(  }) weight 0.0
*n:X -> ({ states border })({ state( intersection( next_to_2( }) weight 0.0
*n:X -> ({ states border })({ state( next_to_2( }) weight 0.0
*n:X -> ({ states border Tennessee ? })({ state( next_to_2( stateid( 'tennessee' }) weight 0.0
*n:Query -> ({ *t:Bound  states border Tennessee *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'tennessee'  }) weight 0.0
*n:X -> ({ states border Alaska ? })({ state( next_to_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  states border Alaska *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ states border Iowa ? })({ state( next_to_2( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  states border Iowa *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ states border Colorado })({ state( intersection( next_to_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ states border Colorado and })({ state( intersection( next_to_2( stateid( 'colorado' , }) weight 0.0
*n:X -> ({ states border Colorado and border })({ state( intersection( next_to_2( stateid( 'colorado' , next_to_2( }) weight 0.0
*n:X -> ({ states border Colorado and border New Mexico ? })({ state( intersection( next_to_2( stateid( 'colorado' , next_to_2( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ states border Hawaii ? })({ state( next_to_2( stateid( 'hawaii' }) weight 0.0
*n:Query -> ({ *t:Bound  states border Hawaii *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'hawaii'  }) weight 0.0
*n:X -> ({ states border Texas ? })({ state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  states border Texas *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ states border at })({ state( next_to_2( }) weight 0.0
*n:X -> ({ states border at least one other state })({ state( next_to_2( state( }) weight 0.0
*n:X -> ({ states border at least one other state ? })({ state( next_to_2( state( all }) weight 0.0
*n:X -> ({ states border on the state })({ state( next_to_2( state( }) weight 0.0
*n:X -> ({ states border on the state whose })({ state( next_to_2( state( loc_1( }) weight 0.0
*n:X -> ({ states border on the state whose capital })({ state( next_to_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ states border on the state whose capital is })({ state( next_to_2( state( loc_1( capital( cityid( }) weight 0.0
*n:X -> ({ states border on the state whose capital is Boston })({ state( next_to_2( state( loc_1( capital( cityid( 'boston', }) weight 0.0
*n:X -> ({ states border on the state whose capital is Boston ? })({ state( next_to_2( state( loc_1( capital( cityid( 'boston', _ }) weight 0.0
*n:Query -> ({ *t:Bound  states border on the *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:X -> ({ states border the Mississippi river })({ state( next_to_2( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  states border the Mississippi *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:X -> ({ states border the largest })({ state( next_to_2( largest( }) weight 0.0
*n:X -> ({ states border the largest state })({ state( next_to_2( largest( state( }) weight 0.0
*n:X -> ({ states border the largest state ? })({ state( next_to_2( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  states border the largest *n:X#1  *t:Bound })({  state( next_to_2( largest( *n:X#1  }) weight 0.0
*n:X -> ({ states border the state })({ state( next_to_2( }) weight 0.0
*n:X -> ({ states border the state with the largest })({ state( next_to_2( largest_one( }) weight 0.0
*n:X -> ({ states border the state with the largest population })({ state( next_to_2( largest_one( population_1( }) weight 0.0
*n:X -> ({ states border the state with the largest population ? })({ state( next_to_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ states border the state that borders the most })({ state( next_to_2( most( }) weight 0.0
*n:X -> ({ states border the state that borders the most states })({ state( next_to_2( most( state( next_to_2( state( }) weight 0.0
*n:X -> ({ states border the state that borders the most states ? })({ state( next_to_2( most( state( next_to_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  states border the state *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states border the *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states border the *n:X#1 ?  *t:Bound })({  state( next_to_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  states border the *n:X#1 river  *t:Bound })({  state( next_to_2( river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states border the *n:X#1 state  *t:Bound })({  state( next_to_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  states border *n:X#1  *t:Bound })({  state( intersection( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states border *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states border *n:X#1 ?  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ states surrounding })({ state( next_to_2( }) weight 0.0
*n:X -> ({ states for Michigan ? })({ state( next_to_2( stateid( 'michigan' }) weight 0.0
*n:Query -> ({ *t:Bound  states for Michigan *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'michigan'  }) weight 0.0
*n:X -> ({ states does })({ state( loc_2( }) weight 0.0
*n:X -> ({ states does })({ state( traverse_1( }) weight 0.0
*n:X -> ({ states does })({ state( next_to_1( }) weight 0.0
*n:X -> ({ states does Tennessee border ? })({ state( next_to_1( stateid( 'tennessee' }) weight 0.0
*n:Query -> ({ *t:Bound  states does Tennessee border *n:X#1  *t:Bound })({  state( next_to_1( *n:X#1 'tennessee'  }) weight 0.0
*n:X -> ({ states does Iowa border ? })({ state( next_to_1( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  states does Iowa border *n:X#1  *t:Bound })({  state( next_to_1( *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ states does USA })({ state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ states does Missouri border ? })({ state( next_to_1( stateid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  states does Missouri border *n:X#1  *t:Bound })({  state( next_to_1( *n:X#1 'missouri'  }) weight 0.0
*n:X -> ({ states does the Colorado river flow })({ state( traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ states does the Colorado river run })({ state( traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  states does the Colorado *n:X#1  *t:Bound })({  state( traverse_1( *n:X#1 'colorado'  }) weight 0.0
*n:X -> ({ states does the Mississippi river run })({ state( traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ states does the Mississippi run })({ state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  states does the Mississippi *n:X#1  *t:Bound })({  state( traverse_1( *n:X#1 'mississippi'  }) weight 0.0
*n:X -> ({ states does the Missouri river run })({ state( traverse_1( river( riverid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  states does the Missouri *n:X#1  *t:Bound })({  state( traverse_1( *n:X#1 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  states does the *n:X#1  *t:Bound })({  state( traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states does the *n:X#1 run  *t:Bound })({  state( traverse_1( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states does *n:X#1  *t:Bound })({  state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states does *n:X#1  *t:Bound })({  state( next_to_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states does *n:X#1 border ?  *t:Bound })({  state( next_to_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states does *n:X#1 border *n:X#2  *t:Bound })({  state( next_to_1( *n:X#2 *n:X#1  }) weight 0.0
*n:X -> ({ states through which })({ state( traverse_1( }) weight 0.0
*n:X -> ({ states through which the Colorado river runs })({ state( traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ states through which the Mississippi runs })({ state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ states through which the Mississippi river runs })({ state( traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ states through which the longest })({ state( traverse_1( longest( }) weight 0.0
*n:X -> ({ states through which the longest river })({ state( traverse_1( longest( river( }) weight 0.0
*n:X -> ({ states through which the longest river runs ? })({ state( traverse_1( longest( river( all }) weight 0.0
*n:X -> ({ states through which the major })({ state( traverse_1( major( }) weight 0.0
*n:X -> ({ states through which the major river })({ state( traverse_1( major( river( }) weight 0.0
*n:X -> ({ states through which the major river in })({ state( traverse_1( major( river( loc_2( }) weight 0.0
*n:X -> ({ states through which the major river in Virginia runs ? })({ state( traverse_1( major( river( loc_2( stateid( 'virginia' }) weight 0.0
*n:Query -> ({ *t:Bound  states through which the *n:X#1  *t:Bound })({  state( traverse_1( *n:X#1  }) weight 0.0
*n:X -> ({ states do })({ exclude( state( }) weight 0.0
*n:X -> ({ states do not })({ exclude( state( all , }) weight 0.0
*n:X -> ({ states do not have })({ exclude( state( all , loc_1( }) weight 0.0
*n:X -> ({ states do not have rivers })({ exclude( state( all , loc_1( river( }) weight 0.0
*n:X -> ({ states do not have rivers ? })({ exclude( state( all , loc_1( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  states do not *n:X#1  *t:Bound })({  exclude( state( all , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states do *n:X#1  *t:Bound })({  exclude( state( all *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states do *n:X#1 ?  *t:Bound })({  exclude( state( all *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  states do *n:X#1 have  *t:Bound })({  exclude( state( all *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  states do *n:X#1 rivers  *t:Bound })({  exclude( state( all *n:X#1 river(  }) weight 0.0
*n:X -> ({ states that have })({ state( loc_1( }) weight 0.0
*n:X -> ({ states that have cities })({ state( loc_1( city( }) weight 0.0
*n:X -> ({ states that have cities named })({ state( loc_1( city( cityid( }) weight 0.0
*n:X -> ({ states that have cities named Durham })({ state( loc_1( city( cityid( 'durham', }) weight 0.0
*n:X -> ({ states that have cities named Durham ? })({ state( loc_1( city( cityid( 'durham', _ }) weight 0.0
*n:Query -> ({ *t:Bound  states that have cities *n:X#1  *t:Bound })({  state( loc_1( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states that have *n:X#1  *t:Bound })({  state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states that have *n:X#1 Durham  *t:Bound })({  state( loc_1( *n:X#1 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  states that have *n:X#1 ?  *t:Bound })({  state( loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states that have *n:X#1 named  *t:Bound })({  state( loc_1( *n:X#1 cityid(  }) weight 0.0
*n:X -> ({ states that border })({ state( next_to_2( }) weight 0.0
*n:X -> ({ states that border California ? })({ state( next_to_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  states that border California *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ states that border Utah . })({ state( next_to_2( stateid( 'utah' }) weight 0.0
*n:Query -> ({ *t:Bound  states that border Utah *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'utah'  }) weight 0.0
*n:X -> ({ states that border Texas ? })({ state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  states that border Texas *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ states that border Nebraska ? })({ state( next_to_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  states that border Nebraska *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'nebraska'  }) weight 0.0
*n:X -> ({ states that border the largest })({ state( next_to_2( largest( }) weight 0.0
*n:X -> ({ states that border the largest state })({ state( next_to_2( largest( state( }) weight 0.0
*n:X -> ({ states that border the largest state ? })({ state( next_to_2( largest( state( all }) weight 0.0
*n:X -> ({ states that border the state with the greatest })({ state( next_to_2( largest_one( }) weight 0.0
*n:X -> ({ states that border the state with the greatest population })({ state( next_to_2( largest_one( population_1( }) weight 0.0
*n:X -> ({ states that border the state with the greatest population ? })({ state( next_to_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ states that border the state that borders the most })({ state( next_to_2( most( state( next_to_2( }) weight 0.0
*n:X -> ({ states that border the state that borders the most states })({ state( next_to_2( most( state( next_to_2( state( }) weight 0.0
*n:Query -> ({ *t:Bound  states that border the *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states that border *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states that border *n:X#1 .  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states that border *n:X#1 ?  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ states that the Rio Grande runs through })({ state( traverse_1( riverid( 'rio grande' }) weight 0.0
*n:X -> ({ states that the Potomac runs through })({ state( traverse_1( riverid( 'potomac' }) weight 0.0
*n:Query -> ({ *t:Bound  states that the Potomac *n:X#1  *t:Bound })({  state( *n:X#1 'potomac'  }) weight 0.0
*n:Query -> ({ *t:Bound  states that the *n:X#1  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states that the *n:X#1 through  *t:Bound })({  state( traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states that *n:X#1  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states that *n:X#1 Durham  *t:Bound })({  state( *n:X#1 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  states that *n:X#1 Durham ?  *t:Bound })({  state( *n:X#1 'durham', _  }) weight 0.0
*n:Query -> ({ *t:Bound  states that *n:X#1 Durham *n:X#2  *t:Bound })({  state( *n:X#1 'durham', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states that *n:X#1 ?  *t:Bound })({  state( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states that *n:X#1 cities  *t:Bound })({  state( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  states that *n:X#1 cities named  *t:Bound })({  state( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states that *n:X#1 cities *n:X#2  *t:Bound })({  state( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states that *n:X#1 named  *t:Bound })({  state( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states that *n:X#1 named Durham  *t:Bound })({  state( *n:X#1 cityid( 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  states that *n:X#1 named *n:X#2  *t:Bound })({  state( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:X -> ({ states which have })({ count( state( }) weight 0.0
*n:X -> ({ states which have })({ state( all }) weight 0.0
*n:X -> ({ states which have elevations })({ count( state( low_point_2( }) weight 0.0
*n:X -> ({ states which have elevations lower })({ count( state( low_point_2( lower_2( }) weight 0.0
*n:X -> ({ states which have elevations lower than what })({ count( state( low_point_2( lower_2( low_point_1( }) weight 0.0
*n:X -> ({ states which have elevations lower than what Alabama has . })({ count( state( low_point_2( lower_2( low_point_1( stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  states which have elevations *n:X#1  *t:Bound })({  count( state( low_point_2( *n:X#1  }) weight 0.0
*n:X -> ({ states which have no })({ state( all , }) weight 0.0
*n:X -> ({ states which have no surrounding })({ state( all , next_to_2( }) weight 0.0
*n:X -> ({ states which have no surrounding states })({ state( all , next_to_2( state( }) weight 0.0
*n:X -> ({ states which have no surrounding states . })({ state( all , next_to_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  states which have no *n:X#1  *t:Bound })({  state( all , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states which have *n:X#1  *t:Bound })({  count( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states which have *n:X#1  *t:Bound })({  state( all *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states which have *n:X#1 .  *t:Bound })({  state( all *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  states which have *n:X#1 states  *t:Bound })({  state( all *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  states which have *n:X#1 surrounding  *t:Bound })({  state( all *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states which have *n:X#1 lower  *t:Bound })({  count( state( *n:X#1 lower_2(  }) weight 0.0
*n:X -> ({ states which border })({ state( next_to_2( }) weight 0.0
*n:X -> ({ states which border Texas ? })({ state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  states which border Texas *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  states which border *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states which border *n:X#1 ?  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 .  *t:Bound })({  state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 Texas ?  *t:Bound })({  state( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 Texas *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 elevations  *t:Bound })({  *n:X#1 state( low_point_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 elevations lower  *t:Bound })({  *n:X#1 state( low_point_2( lower_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 elevations *n:X#2  *t:Bound })({  *n:X#1 state( low_point_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 states  *t:Bound })({  state( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 states .  *t:Bound })({  state( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 states *n:X#2  *t:Bound })({  state( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 no  *t:Bound })({  state( *n:X#1 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 no surrounding  *t:Bound })({  state( *n:X#1 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 no *n:X#2  *t:Bound })({  state( *n:X#1 , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 surrounding  *t:Bound })({  state( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 surrounding states  *t:Bound })({  state( *n:X#1 next_to_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  states which *n:X#1 surrounding *n:X#2  *t:Bound })({  state( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1  *t:Bound })({  state( intersection( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1  *t:Bound })({  state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 States  *t:Bound })({  state( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Tennessee ?  *t:Bound })({  state( *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Tennessee border ?  *t:Bound })({  state( *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Tennessee border *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Tennessee *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Alaska ?  *t:Bound })({  state( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Alaska *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 California ?  *t:Bound })({  state( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 California *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Iowa ?  *t:Bound })({  state( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Iowa border ?  *t:Bound })({  state( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Iowa border *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Iowa *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Colorado  *t:Bound })({  state( intersection( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Colorado ?  *t:Bound })({  state( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Colorado *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Georgia ?  *t:Bound })({  state( *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Georgia *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 ?  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 ?  *t:Bound })({  state( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 ?  *t:Bound })({  state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 ?  *t:Bound })({  state( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Hawaii ?  *t:Bound })({  state( *n:X#1 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Hawaii *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Austin  *t:Bound })({  state( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Austin ?  *t:Bound })({  state( *n:X#1 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Austin *n:X#2  *t:Bound })({  state( *n:X#1 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Boston  *t:Bound })({  state( *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Boston ?  *t:Bound })({  state( *n:X#1 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Boston *n:X#2  *t:Bound })({  state( *n:X#1 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Virginia runs ?  *t:Bound })({  state( *n:X#1 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Virginia runs *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 and  *t:Bound })({  state( intersection( *n:X#1 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 and border  *t:Bound })({  state( intersection( *n:X#1 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 and *n:X#2  *t:Bound })({  state( intersection( *n:X#1 , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Utah .  *t:Bound })({  state( *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Utah ?  *t:Bound })({  state( *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Utah *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Texas ?  *t:Bound })({  state( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Texas *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 USA  *t:Bound })({  state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 United  *t:Bound })({  state( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 United States  *t:Bound })({  state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 United *n:X#2  *t:Bound })({  state( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 capital  *t:Bound })({  state( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 capital is  *t:Bound })({  state( *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 capital is Boston  *t:Bound })({  state( *n:X#1 capital( cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 capital is *n:X#2  *t:Bound })({  state( *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 capital *n:X#2  *t:Bound })({  state( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 capital *n:X#2 ?  *t:Bound })({  state( *n:X#1 capital( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 capital *n:X#2 Boston  *t:Bound })({  state( *n:X#1 capital( *n:X#2 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Nebraska ?  *t:Bound })({  state( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Nebraska *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Missouri border ?  *t:Bound })({  state( *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Missouri border *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 is  *t:Bound })({  state( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 is Boston  *t:Bound })({  state( *n:X#1 cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 is Boston ?  *t:Bound })({  state( *n:X#1 cityid( 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 is Boston *n:X#2  *t:Bound })({  state( *n:X#1 cityid( 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 is *n:X#2  *t:Bound })({  state( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 is *n:X#2 ?  *t:Bound })({  state( *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 US  *t:Bound })({  state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 US does  *t:Bound })({  state( *n:X#1 countryid( 'usa' ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 US *n:X#2  *t:Bound })({  state( *n:X#1 countryid( 'usa' *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 states  *t:Bound })({  state( next_to_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 in  *t:Bound })({  state( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 in *n:X#2  *t:Bound })({  state( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Springfield  *t:Bound })({  state( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Springfield ?  *t:Bound })({  state( *n:X#1 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 Springfield *n:X#2  *t:Bound })({  state( *n:X#1 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 border  *t:Bound })({  state( intersection( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 border *n:X#2  *t:Bound })({  state( intersection( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 runs ?  *t:Bound })({  state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 runs *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 cities  *t:Bound })({  state( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 cities or *n:X#2  *t:Bound })({  state( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 cities named  *t:Bound })({  state( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 cities named Austin  *t:Bound })({  state( *n:X#1 city( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 cities named *n:X#2  *t:Bound })({  state( *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 cities *n:X#2  *t:Bound })({  state( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 cities *n:X#2 ?  *t:Bound })({  state( *n:X#1 city( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 cities *n:X#2 Austin  *t:Bound })({  state( *n:X#1 city( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 not  *t:Bound })({  *n:X#1 state( all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 not have  *t:Bound })({  *n:X#1 state( all , loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 not *n:X#2  *t:Bound })({  *n:X#1 state( all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 does  *t:Bound })({  state( *n:X#1 ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 does the shortest  *t:Bound })({  state( *n:X#1 ,traverse_1( shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 does the *n:X#2  *t:Bound })({  state( *n:X#1 ,traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 river  *t:Bound })({  state( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 river in  *t:Bound })({  state( *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 river in *n:X#2  *t:Bound })({  state( *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 river runs ?  *t:Bound })({  state( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 river runs *n:X#2  *t:Bound })({  state( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 river *n:X#2  *t:Bound })({  state( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 called Rochester  *t:Bound })({  state( *n:X#1 cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 called Rochester ?  *t:Bound })({  state( *n:X#1 cityid( 'rochester', _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 called Rochester *n:X#2  *t:Bound })({  state( *n:X#1 cityid( 'rochester', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 called *n:X#2  *t:Bound })({  state( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 called *n:X#2 ?  *t:Bound })({  state( *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 or *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 or *n:X#2 ?  *t:Bound })({  state( *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 major  *t:Bound })({  state( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 major rivers  *t:Bound })({  state( *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 major rivers ?  *t:Bound })({  state( *n:X#1 major( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 major rivers *n:X#2  *t:Bound })({  state( *n:X#1 major( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 major *n:X#2  *t:Bound })({  state( *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 major *n:X#2 ?  *t:Bound })({  state( *n:X#1 major( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 city  *t:Bound })({  state( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 city called Rochester  *t:Bound })({  state( *n:X#1 city( cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 city called *n:X#2  *t:Bound })({  state( *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 city named  *t:Bound })({  state( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 city named Springfield  *t:Bound })({  state( *n:X#1 city( cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 city named *n:X#2  *t:Bound })({  state( *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 city *n:X#2  *t:Bound })({  state( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 city *n:X#2 ?  *t:Bound })({  state( *n:X#1 city( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 city *n:X#2 Springfield  *t:Bound })({  state( *n:X#1 city( *n:X#2 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 named  *t:Bound })({  state( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 named Austin  *t:Bound })({  state( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 named Austin ?  *t:Bound })({  state( *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 named Austin *n:X#2  *t:Bound })({  state( *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 named Springfield  *t:Bound })({  state( *n:X#1 cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 named Springfield ?  *t:Bound })({  state( *n:X#1 cityid( 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 named Springfield *n:X#2  *t:Bound })({  state( *n:X#1 cityid( 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 named *n:X#2  *t:Bound })({  state( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 named *n:X#2 ?  *t:Bound })({  state( *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 rivers  *t:Bound })({  state( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 rivers ?  *t:Bound })({  state( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 rivers *n:X#2  *t:Bound })({  state( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 population  *t:Bound })({  state( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 population ?  *t:Bound })({  state( *n:X#1 population_1( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 population *n:X#2  *t:Bound })({  state( *n:X#1 population_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 higher point than  *t:Bound })({  state( *n:X#1 place( higher_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 higher *n:X#2 than  *t:Bound })({  state( *n:X#1 *n:X#2 higher_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 point  *t:Bound })({  state( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 whose  *t:Bound })({  state( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 whose capital  *t:Bound })({  state( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 whose capital is  *t:Bound })({  state( *n:X#1 loc_1( capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 whose capital *n:X#2  *t:Bound })({  state( *n:X#1 loc_1( capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 whose *n:X#2  *t:Bound })({  state( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 whose *n:X#2 ?  *t:Bound })({  state( *n:X#1 loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 whose *n:X#2 Boston  *t:Bound })({  state( *n:X#1 loc_1( *n:X#2 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 whose *n:X#2 is  *t:Bound })({  state( *n:X#1 loc_1( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 on the state  *t:Bound })({  state( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 on the *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 state  *t:Bound })({  state( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 state ?  *t:Bound })({  state( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 state *n:X#2  *t:Bound })({  state( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the Colorado *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the highest  *t:Bound })({  state( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the highest point  *t:Bound })({  state( *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the highest *n:X#2  *t:Bound })({  state( *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the Mississippi runs  *t:Bound })({  state( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the Mississippi river  *t:Bound })({  state( *n:X#1 river( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the Mississippi run  *t:Bound })({  state( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the Mississippi *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the Mississippi *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the longest  *t:Bound })({  state( *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the longest river  *t:Bound })({  state( *n:X#1 longest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the longest *n:X#2  *t:Bound })({  state( *n:X#1 longest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the Missouri *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the largest  *t:Bound })({  state( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the largest state  *t:Bound })({  state( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the largest *n:X#2  *t:Bound })({  state( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the major  *t:Bound })({  state( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the major river  *t:Bound })({  state( *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the major *n:X#2  *t:Bound })({  state( *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the shortest  *t:Bound })({  state( *n:X#1 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the shortest river  *t:Bound })({  state( *n:X#1 shortest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the shortest *n:X#2  *t:Bound })({  state( *n:X#1 shortest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the state  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the state *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the *n:X#2 ?  *t:Bound })({  state( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the *n:X#2 in  *t:Bound })({  state( *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the *n:X#2 runs  *t:Bound })({  state( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the *n:X#2 river  *t:Bound })({  state( *n:X#1 river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the *n:X#2 river  *t:Bound })({  state( *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the *n:X#2 run  *t:Bound })({  state( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the *n:X#2 point  *t:Bound })({  state( *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  states *n:X#1 the *n:X#2 state  *t:Bound })({  state( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:X -> ({ surrounding })({ next_to_2( }) weight 0.0
*n:X -> ({ surrounding states })({ next_to_2( state( }) weight 0.0
*n:X -> ({ surrounding states . })({ next_to_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  surrounding states *n:X#1  *t:Bound })({  next_to_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  surrounding *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  surrounding *n:X#1 .  *t:Bound })({  next_to_2( *n:X#1 all  }) weight 0.0
*n:X -> ({ total })({ sum( }) weight 0.0
*n:X -> ({ total length of all })({ sum( len( }) weight 0.0
*n:X -> ({ total length of all rivers })({ sum( len( river( }) weight 0.0
*n:X -> ({ total length of all rivers in the USA ? })({ sum( len( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  total length of all *n:X#1  *t:Bound })({  sum( len( *n:X#1  }) weight 0.0
*n:X -> ({ total population })({ sum( population_1( }) weight 0.0
*n:X -> ({ total population of the states })({ sum( population_1( state( }) weight 0.0
*n:X -> ({ total population of the states that border })({ sum( population_1( state( next_to_2( }) weight 0.0
*n:X -> ({ total population of the states that border Texas ? })({ sum( population_1( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  total population of the *n:X#1  *t:Bound })({  sum( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  total *n:X#1  *t:Bound })({  sum( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  total *n:X#1 Texas ?  *t:Bound })({  sum( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  total *n:X#1 Texas *n:X#2  *t:Bound })({  sum( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  total *n:X#1 of all  *t:Bound })({  sum( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  total *n:X#1 of all rivers  *t:Bound })({  sum( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  total *n:X#1 of all *n:X#2  *t:Bound })({  sum( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  total *n:X#1 of the states  *t:Bound })({  sum( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  total *n:X#1 of the *n:X#2  *t:Bound })({  sum( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  total *n:X#1 that border  *t:Bound })({  sum( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  total *n:X#1 that border *n:X#2  *t:Bound })({  sum( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:X -> ({ traverse })({ traverse_2( }) weight 0.0
*n:X -> ({ Alaska })({ 'alaska' }) weight 0.0
*n:X -> ({ Alaska ? })({ stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  Alaska *n:X#1  *t:Bound })({  *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ Delaware })({ 'delaware' }) weight 0.0
*n:X -> ({ Delaware ? })({ stateid( 'delaware' }) weight 0.0
*n:X -> ({ Delaware river })({ river( riverid( 'delaware' }) weight 0.0
*n:Query -> ({ *t:Bound  Delaware *n:X#1  *t:Bound })({  *n:X#1 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  Delaware *n:X#1  *t:Bound })({  *n:X#1 riverid( 'delaware'  }) weight 0.0
*n:X -> ({ Durham })({ 'durham', }) weight 0.0
*n:X -> ({ Durham ? })({ 'durham', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Durham *n:X#1  *t:Bound })({  'durham', *n:X#1  }) weight 0.0
*n:X -> ({ Hawaii })({ 'hawaii' }) weight 0.0
*n:X -> ({ Hawaii ? })({ stateid( 'hawaii' }) weight 0.0
*n:Query -> ({ *t:Bound  Hawaii *n:X#1  *t:Bound })({  *n:X#1 'hawaii'  }) weight 0.0
*n:X -> ({ North })({ 'north }) weight 0.0
*n:X -> ({ North Carolina })({ 'north carolina' }) weight 0.0
*n:X -> ({ North Carolina ? })({ stateid( 'north carolina' }) weight 0.0
*n:Query -> ({ *t:Bound  North Carolina *n:X#1  *t:Bound })({  *n:X#1 'north carolina'  }) weight 0.0
*n:X -> ({ North Dakota })({ 'north dakota' }) weight 0.0
*n:X -> ({ North Platte })({ 'north platte' }) weight 0.0
*n:X -> ({ North Platte river })({ river( riverid( 'north platte' }) weight 0.0
*n:Query -> ({ *t:Bound  North Platte *n:X#1  *t:Bound })({  *n:X#1 riverid( 'north platte'  }) weight 0.0
*n:Query -> ({ *t:Bound  North *n:X#1  *t:Bound })({  'north *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  North *n:X#1 ?  *t:Bound })({  stateid( 'north *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  North *n:X#1 river  *t:Bound })({  river( riverid( 'north *n:X#1  }) weight 0.0
*n:X -> ({ Potomac })({ 'potomac' }) weight 0.0
*n:X -> ({ Potomac runs })({ riverid( 'potomac' }) weight 0.0
*n:X -> ({ Potomac runs through })({ traverse_1( riverid( 'potomac' }) weight 0.0
*n:Query -> ({ *t:Bound  Potomac runs *n:X#1  *t:Bound })({  *n:X#1 riverid( 'potomac'  }) weight 0.0
*n:Query -> ({ *t:Bound  Potomac *n:X#1  *t:Bound })({  *n:X#1 'potomac'  }) weight 0.0
*n:Query -> ({ *t:Bound  Potomac *n:X#1 through  *t:Bound })({  traverse_1( *n:X#1 'potomac'  }) weight 0.0
*n:X -> ({ United })({ countryid( }) weight 0.0
*n:X -> ({ United States })({ countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  United *n:X#1  *t:Bound })({  countryid( *n:X#1  }) weight 0.0
*n:X -> ({ flows through })({ traverse_2( }) weight 0.0
*n:X -> ({ flows through a state })({ traverse_2( state( }) weight 0.0
*n:X -> ({ flows through a state that borders })({ traverse_2( state( next_to_2( }) weight 0.0
*n:X -> ({ flows through a state that borders Indiana ? })({ traverse_2( state( next_to_2( stateid( 'indiana' }) weight 0.0
*n:Query -> ({ *t:Bound  flows through a state *n:X#1  *t:Bound })({  traverse_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  flows through a *n:X#1  *t:Bound })({  traverse_2( *n:X#1  }) weight 0.0
*n:X -> ({ most })({ largest_one( }) weight 0.0
*n:X -> ({ most })({ most( }) weight 0.0
*n:X -> ({ most populated })({ largest_one( population_1( }) weight 0.0
*n:X -> ({ most populated capital })({ largest_one( population_1( capital( }) weight 0.0
*n:X -> ({ most populated capital in the })({ largest_one( population_1( capital( loc_2( }) weight 0.0
*n:X -> ({ most populated capital in the USA })({ largest_one( population_1( capital( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  most populated capital *n:X#1  *t:Bound })({  largest_one( population_1( capital( *n:X#1  }) weight 0.0
*n:X -> ({ most populated state })({ largest_one( population_1( state( }) weight 0.0
*n:X -> ({ most populated state bordering })({ largest_one( population_1( state( next_to_2( }) weight 0.0
*n:X -> ({ most populated state bordering Oklahoma ? })({ largest_one( population_1( state( next_to_2( stateid( 'oklahoma' }) weight 0.0
*n:Query -> ({ *t:Bound  most populated state bordering *n:X#1  *t:Bound })({  largest_one( population_1( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  most populated state *n:X#1  *t:Bound })({  largest_one( population_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  most populated *n:X#1  *t:Bound })({  largest_one( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  most populated *n:X#1 bordering  *t:Bound })({  largest_one( population_1( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  most populated *n:X#1 bordering *n:X#2  *t:Bound })({  largest_one( population_1( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most populated *n:X#1 USA  *t:Bound })({  largest_one( population_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  most populated *n:X#1 Oklahoma ?  *t:Bound })({  largest_one( population_1( *n:X#1 stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  most populated *n:X#1 Oklahoma *n:X#2  *t:Bound })({  largest_one( population_1( *n:X#1 *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  most populated *n:X#1 in the  *t:Bound })({  largest_one( population_1( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ most populous })({ largest_one( population_1( }) weight 0.0
*n:X -> ({ most populous city })({ largest_one( population_1( city( }) weight 0.0
*n:X -> ({ most populous city ? })({ largest_one( population_1( city( all }) weight 0.0
*n:X -> ({ most populous city in })({ largest_one( population_1( city( loc_2( }) weight 0.0
*n:X -> ({ most populous city in Texas ? })({ largest_one( population_1( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ most populous city in Wyoming ? })({ largest_one( population_1( city( loc_2( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  most populous city in *n:X#1  *t:Bound })({  largest_one( population_1( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous city *n:X#1  *t:Bound })({  largest_one( population_1( city( *n:X#1  }) weight 0.0
*n:X -> ({ most populous state })({ largest_one( population_1( state( }) weight 0.0
*n:X -> ({ most populous state ? })({ largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ most populous state in the })({ largest_one( population_1( state( loc_2( }) weight 0.0
*n:X -> ({ most populous state in the US })({ largest_one( population_1( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ most populous state through which })({ largest_one( population_1( state( traverse_1( }) weight 0.0
*n:X -> ({ most populous state through which the Mississippi runs })({ largest_one( population_1( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  most populous state *n:X#1  *t:Bound })({  largest_one( population_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1  *t:Bound })({  largest_one( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1 ?  *t:Bound })({  largest_one( population_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1 Texas ?  *t:Bound })({  largest_one( population_1( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1 Texas *n:X#2  *t:Bound })({  largest_one( population_1( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1 Wyoming ?  *t:Bound })({  largest_one( population_1( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1 Wyoming *n:X#2  *t:Bound })({  largest_one( population_1( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1 US  *t:Bound })({  largest_one( population_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1 in  *t:Bound })({  largest_one( population_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1 in the  *t:Bound })({  largest_one( population_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1 in *n:X#2  *t:Bound })({  largest_one( population_1( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1 through which  *t:Bound })({  largest_one( population_1( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  most populous *n:X#1 the *n:X#2  *t:Bound })({  largest_one( population_1( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ most dense })({ largest_one( density_1( }) weight 0.0
*n:X -> ({ most dense state })({ largest_one( density_1( state( }) weight 0.0
*n:X -> ({ most dense state in the })({ largest_one( density_1( state( loc_2( }) weight 0.0
*n:X -> ({ most dense state in the USA })({ largest_one( density_1( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  most dense state *n:X#1  *t:Bound })({  largest_one( density_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  most dense *n:X#1  *t:Bound })({  largest_one( density_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  most dense *n:X#1 USA  *t:Bound })({  largest_one( density_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  most dense *n:X#1 in the  *t:Bound })({  largest_one( density_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1  *t:Bound })({  largest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 bordering  *t:Bound })({  largest_one( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 bordering Oklahoma ?  *t:Bound })({  largest_one( *n:X#1 next_to_2( stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 bordering Oklahoma *n:X#2  *t:Bound })({  largest_one( *n:X#1 next_to_2( *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 bordering *n:X#2  *t:Bound })({  largest_one( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 bordering *n:X#2 ?  *t:Bound })({  largest_one( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 ?  *t:Bound })({  largest_one( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 Texas ?  *t:Bound })({  largest_one( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 Texas *n:X#2  *t:Bound })({  largest_one( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 USA  *t:Bound })({  largest_one( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 capital  *t:Bound })({  largest_one( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 capital in the  *t:Bound })({  largest_one( *n:X#1 capital( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 capital *n:X#2  *t:Bound })({  largest_one( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 Wyoming ?  *t:Bound })({  largest_one( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 Wyoming *n:X#2  *t:Bound })({  largest_one( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 Oklahoma ?  *t:Bound })({  largest_one( *n:X#1 stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 Oklahoma *n:X#2  *t:Bound })({  largest_one( *n:X#1 *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 US  *t:Bound })({  largest_one( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 in  *t:Bound })({  largest_one( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 in Texas ?  *t:Bound })({  largest_one( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 in Texas *n:X#2  *t:Bound })({  largest_one( *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 in Wyoming ?  *t:Bound })({  largest_one( *n:X#1 loc_2( stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 in Wyoming *n:X#2  *t:Bound })({  largest_one( *n:X#1 loc_2( *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 in the  *t:Bound })({  largest_one( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 in the USA  *t:Bound })({  largest_one( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 in the US  *t:Bound })({  largest_one( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 in the *n:X#2  *t:Bound })({  largest_one( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 in *n:X#2  *t:Bound })({  largest_one( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 in *n:X#2 ?  *t:Bound })({  largest_one( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 city  *t:Bound })({  largest_one( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 city ?  *t:Bound })({  largest_one( *n:X#1 city( all  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 city in  *t:Bound })({  largest_one( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 city in *n:X#2  *t:Bound })({  largest_one( *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 city *n:X#2  *t:Bound })({  largest_one( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 through which  *t:Bound })({  largest_one( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 state  *t:Bound })({  largest_one( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 state bordering  *t:Bound })({  largest_one( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 state bordering *n:X#2  *t:Bound })({  largest_one( *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 state ?  *t:Bound })({  largest_one( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 state in the  *t:Bound })({  largest_one( *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 state through which  *t:Bound })({  largest_one( *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 state *n:X#2  *t:Bound })({  largest_one( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 the Mississippi runs  *t:Bound })({  largest_one( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 the Mississippi *n:X#2  *t:Bound })({  largest_one( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 the *n:X#2  *t:Bound })({  largest_one( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  most *n:X#1 the *n:X#2 runs  *t:Bound })({  largest_one( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:X -> ({ next to })({ next_to_2( }) weight 0.0
*n:X -> ({ points })({ place( }) weight 0.0
*n:X -> ({ points of all the })({ place( loc_2( }) weight 0.0
*n:X -> ({ points of all the states })({ place( loc_2( state( }) weight 0.0
*n:X -> ({ points of all the states ? })({ place( loc_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  points of all the *n:X#1  *t:Bound })({  place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  points of *n:X#1  *t:Bound })({  place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  points of *n:X#1 ?  *t:Bound })({  place( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  points of *n:X#1 states  *t:Bound })({  place( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  points of *n:X#1 states ?  *t:Bound })({  place( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  points of *n:X#1 states *n:X#2  *t:Bound })({  place( *n:X#1 state( *n:X#2  }) weight 0.0
*n:X -> ({ through })({ traverse_1( }) weight 0.0
*n:X -> ({ through })({ traverse_2( }) weight 0.0
*n:X -> ({ through a state })({ traverse_2( state( }) weight 0.0
*n:X -> ({ through a state that borders })({ traverse_2( state( next_to_2( }) weight 0.0
*n:X -> ({ through a state that borders Tennessee ? })({ traverse_2( state( next_to_2( stateid( 'tennessee' }) weight 0.0
*n:Query -> ({ *t:Bound  through a state *n:X#1  *t:Bound })({  traverse_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  through a *n:X#1  *t:Bound })({  traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  through a *n:X#1 Tennessee ?  *t:Bound })({  traverse_2( *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  through a *n:X#1 Tennessee *n:X#2  *t:Bound })({  traverse_2( *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  through a *n:X#1 that borders  *t:Bound })({  traverse_2( *n:X#1 next_to_2(  }) weight 0.0
*n:X -> ({ through which })({ traverse_1( }) weight 0.0
*n:X -> ({ through which the Colorado river runs })({ traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  through which the Colorado *n:X#1  *t:Bound })({  traverse_1( *n:X#1 'colorado'  }) weight 0.0
*n:X -> ({ through which the Mississippi runs })({ traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ through which the Mississippi river runs })({ traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  through which the Mississippi *n:X#1  *t:Bound })({  traverse_1( *n:X#1 'mississippi'  }) weight 0.0
*n:X -> ({ through which the longest })({ traverse_1( longest( }) weight 0.0
*n:X -> ({ through which the longest river })({ traverse_1( longest( river( }) weight 0.0
*n:X -> ({ through which the longest river runs ? })({ traverse_1( longest( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  through which the longest *n:X#1  *t:Bound })({  traverse_1( longest( *n:X#1  }) weight 0.0
*n:X -> ({ through which the major })({ traverse_1( major( }) weight 0.0
*n:X -> ({ through which the major river })({ traverse_1( major( river( }) weight 0.0
*n:X -> ({ through which the major river in })({ traverse_1( major( river( loc_2( }) weight 0.0
*n:X -> ({ through which the major river in Virginia runs ? })({ traverse_1( major( river( loc_2( stateid( 'virginia' }) weight 0.0
*n:Query -> ({ *t:Bound  through which the major *n:X#1  *t:Bound })({  traverse_1( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  through which the *n:X#1  *t:Bound })({  traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  through which the *n:X#1 in  *t:Bound })({  traverse_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  through which the *n:X#1 runs  *t:Bound })({  traverse_1( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  through which the *n:X#1 river  *t:Bound })({  traverse_1( *n:X#1 river(  }) weight 0.0
*n:X -> ({ Oregon })({ 'oregon' }) weight 0.0
*n:X -> ({ Oregon ? })({ stateid( 'oregon' }) weight 0.0
*n:Query -> ({ *t:Bound  Oregon *n:X#1  *t:Bound })({  *n:X#1 'oregon'  }) weight 0.0
*n:X -> ({ What })({ answer( }) weight 0.0
*n:X -> ({ What are major })({ answer( major( }) weight 0.0
*n:X -> ({ What are major rivers })({ answer( major( river( }) weight 0.0
*n:X -> ({ What are major rivers in })({ answer( major( river( loc_2( }) weight 0.0
*n:X -> ({ What are major rivers in Texas ? })({ answer( major( river( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  What are major rivers *n:X#1  *t:Bound })({  answer( major( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What are major *n:X#1  *t:Bound })({  answer( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What are major *n:X#1 in  *t:Bound })({  answer( major( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ What are all the rivers in })({ answer( river( loc_2( }) weight 0.0
*n:X -> ({ What are all the rivers in Texas ? })({ answer( river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What are the })({ answer( }) weight 0.0
*n:X -> ({ What are the high points })({ answer( high_point_1( }) weight 0.0
*n:X -> ({ What are the high points of states surrounding Mississippi ? })({ answer( high_point_1( state( next_to_2( stateid( 'mississippi' }) weight 0.0
*n:X -> ({ What are the highest })({ answer( highest( }) weight 0.0
*n:X -> ({ What are the highest points })({ answer( highest( place( }) weight 0.0
*n:X -> ({ What are the highest points })({ answer( highest( place( loc_2( }) weight 0.0
*n:X -> ({ What are the highest points of states surrounding Mississippi ? })({ answer( highest( place( loc_2( state( next_to_2( stateid( 'mississippi' }) weight 0.0
*n:X -> ({ What are the highest points of all the })({ answer( highest( place( loc_2( }) weight 0.0
*n:X -> ({ What are the highest points of all the states })({ answer( highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ What are the highest points of all the states ? })({ answer( highest( place( loc_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  What are the highest *n:X#1  *t:Bound })({  answer( highest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the highest *n:X#1  *t:Bound })({  answer( highest( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ What are the lakes in })({ answer( lake( loc_2( }) weight 0.0
*n:X -> ({ What are the lakes in states })({ answer( lake( loc_2( state( }) weight 0.0
*n:X -> ({ What are the lakes in states bordering })({ answer( lake( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ What are the lakes in states bordering Texas ? })({ answer( lake( loc_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What are the capital })({ answer( capital( }) weight 0.0
*n:X -> ({ What are the capital cities })({ answer( capital( city( }) weight 0.0
*n:X -> ({ What are the capital cities of the })({ answer( capital( city( loc_2( }) weight 0.0
*n:X -> ({ What are the capital cities of the states })({ answer( capital( city( loc_2( state( }) weight 0.0
*n:X -> ({ What are the capital cities of the states which border })({ answer( capital( city( loc_2( state( next_to_2( }) weight 0.0
*n:Query -> ({ *t:Bound  What are the capital *n:X#1  *t:Bound })({  answer( capital( *n:X#1  }) weight 0.0
*n:X -> ({ What are the states })({ answer( state( }) weight 0.0
*n:X -> ({ What are the states ? })({ answer( state( all }) weight 0.0
*n:X -> ({ What are the states through which })({ answer( state( traverse_1( }) weight 0.0
*n:X -> ({ What are the states through which the longest })({ answer( state( traverse_1( longest( }) weight 0.0
*n:X -> ({ What are the states through which the longest river })({ answer( state( traverse_1( longest( river( }) weight 0.0
*n:X -> ({ What are the states that border })({ answer( state( next_to_2( }) weight 0.0
*n:X -> ({ What are the states that the Potomac runs through })({ answer( state( traverse_1( riverid( 'potomac' }) weight 0.0
*n:Query -> ({ *t:Bound  What are the states *n:X#1  *t:Bound })({  answer( state( *n:X#1  }) weight 0.0
*n:X -> ({ What are the populations })({ answer( population_1( }) weight 0.0
*n:X -> ({ What are the populations of })({ answer( population_1( }) weight 0.0
*n:X -> ({ What are the populations of states })({ answer( population_1( state( }) weight 0.0
*n:X -> ({ What are the populations of states through which })({ answer( population_1( state( traverse_1( }) weight 0.0
*n:X -> ({ What are the populations of states which border })({ answer( population_1( state( next_to_2( }) weight 0.0
*n:X -> ({ What are the populations of states which border Texas ? })({ answer( population_1( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What are the populations of all the major })({ answer( population_1( major( }) weight 0.0
*n:X -> ({ What are the populations of all the major cities })({ answer( population_1( major( city( }) weight 0.0
*n:X -> ({ What are the populations of all the major cities in })({ answer( population_1( major( city( loc_2( }) weight 0.0
*n:X -> ({ What are the populations of the states })({ answer( population_1( state( }) weight 0.0
*n:X -> ({ What are the populations of the states through which })({ answer( population_1( state( traverse_1( }) weight 0.0
*n:X -> ({ What are the populations of the major cities })({ answer( population_1( major( city( loc_2( }) weight 0.0
*n:X -> ({ What are the largest })({ answer( largest( }) weight 0.0
*n:X -> ({ What are the largest cities })({ answer( largest( city( }) weight 0.0
*n:X -> ({ What are the largest cities in the })({ answer( largest( city( loc_2( }) weight 0.0
*n:X -> ({ What are the largest cities in the states })({ answer( largest( city( loc_2( state( }) weight 0.0
*n:X -> ({ What are the largest cities in the states that border })({ answer( largest( city( loc_2( state( next_to_2( }) weight 0.0
*n:Query -> ({ *t:Bound  What are the largest *n:X#1  *t:Bound })({  answer( largest( *n:X#1  }) weight 0.0
*n:X -> ({ What are the cities })({ answer( city( }) weight 0.0
*n:X -> ({ What are the cities in })({ answer( city( loc_2( }) weight 0.0
*n:X -> ({ What are the cities in California ? })({ answer( city( loc_2( stateid( 'california' }) weight 0.0
*n:X -> ({ What are the cities in states })({ answer( city( loc_2( state( }) weight 0.0
*n:X -> ({ What are the cities in states through which })({ answer( city( loc_2( state( traverse_1( }) weight 0.0
*n:X -> ({ What are the cities of the })({ answer( city( loc_2( }) weight 0.0
*n:X -> ({ What are the cities of the state })({ answer( city( loc_2( state( }) weight 0.0
*n:X -> ({ What are the cities of the state with })({ answer( city( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ What are the cities of the state with the highest })({ answer( city( loc_2( state( loc_1( highest( }) weight 0.0
*n:Query -> ({ *t:Bound  What are the cities *n:X#1  *t:Bound })({  answer( city( *n:X#1  }) weight 0.0
*n:X -> ({ What are the capitals })({ answer( capital( loc_2( }) weight 0.0
*n:X -> ({ What are the capitals of states that border Missouri ? })({ answer( capital( loc_2( state( next_to_2( stateid( 'missouri' }) weight 0.0
*n:X -> ({ What are the capitals of the })({ answer( capital( loc_2( }) weight 0.0
*n:X -> ({ What are the capitals of the states })({ answer( capital( loc_2( state( }) weight 0.0
*n:X -> ({ What are the capitals of the states that border })({ answer( capital( loc_2( state( next_to_2( }) weight 0.0
*n:Query -> ({ *t:Bound  What are the capitals *n:X#1  *t:Bound })({  answer( capital( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ What are the biggest })({ answer( longest( }) weight 0.0
*n:X -> ({ What are the biggest rivers })({ answer( longest( river( }) weight 0.0
*n:X -> ({ What are the biggest rivers in })({ answer( longest( river( loc_2( }) weight 0.0
*n:X -> ({ What are the biggest rivers in Texas ? })({ answer( longest( river( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  What are the biggest *n:X#1  *t:Bound })({  answer( longest( *n:X#1  }) weight 0.0
*n:X -> ({ What are the major })({ answer( major( }) weight 0.0
*n:X -> ({ What are the major lakes })({ answer( major( lake( }) weight 0.0
*n:X -> ({ What are the major lakes in })({ answer( major( lake( loc_2( }) weight 0.0
*n:X -> ({ What are the major lakes in United })({ answer( major( lake( loc_2( countryid( }) weight 0.0
*n:X -> ({ What are the major lakes in United States })({ answer( major( lake( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What are the major cities })({ answer( major( city( }) weight 0.0
*n:X -> ({ What are the major cities })({ answer( major( city( loc_2( }) weight 0.0
*n:X -> ({ What are the major cities in })({ answer( major( city( loc_2( }) weight 0.0
*n:X -> ({ What are the major cities in Alaska ? })({ answer( major( city( loc_2( stateid( 'alaska' }) weight 0.0
*n:X -> ({ What are the major cities in California ? })({ answer( major( city( loc_2( stateid( 'california' }) weight 0.0
*n:X -> ({ What are the major cities in Delaware ? })({ answer( major( city( loc_2( stateid( 'delaware' }) weight 0.0
*n:X -> ({ What are the major cities in Alabama ? })({ answer( major( city( loc_2( stateid( 'alabama' }) weight 0.0
*n:X -> ({ What are the major cities in Rhode Island ? })({ answer( major( city( loc_2( stateid( 'rhode island' }) weight 0.0
*n:X -> ({ What are the major cities in North Carolina ? })({ answer( major( city( loc_2( stateid( 'north carolina' }) weight 0.0
*n:X -> ({ What are the major cities in Kansas ? })({ answer( major( city( loc_2( stateid( 'kansas' }) weight 0.0
*n:X -> ({ What are the major cities in Texas ? })({ answer( major( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What are the major cities in New Mexico ? })({ answer( major( city( loc_2( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ What are the major cities in New York ? })({ answer( major( city( loc_2( stateid( 'new york' }) weight 0.0
*n:X -> ({ What are the major cities in Wyoming ? })({ answer( major( city( loc_2( stateid( 'wyoming' }) weight 0.0
*n:X -> ({ What are the major cities in Missouri ? })({ answer( major( city( loc_2( stateid( 'missouri' }) weight 0.0
*n:X -> ({ What are the major cities in Oklahoma ? })({ answer( major( city( loc_2( stateid( 'oklahoma' }) weight 0.0
*n:X -> ({ What are the major cities in Ohio ? })({ answer( major( city( loc_2( stateid( 'ohio' }) weight 0.0
*n:X -> ({ What are the major cities in states })({ answer( major( city( loc_2( state( }) weight 0.0
*n:X -> ({ What are the major cities in states through which })({ answer( major( city( loc_2( state( traverse_1( }) weight 0.0
*n:X -> ({ What are the major cities in Vermont ? })({ answer( major( city( loc_2( stateid( 'vermont' }) weight 0.0
*n:X -> ({ What are the major cities in the })({ answer( major( city( loc_2( }) weight 0.0
*n:X -> ({ What are the major cities in the USA })({ answer( major( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What are the major cities in the states })({ answer( major( city( loc_2( state( }) weight 0.0
*n:X -> ({ What are the major cities in the states through which })({ answer( major( city( loc_2( state( traverse_1( }) weight 0.0
*n:X -> ({ What are the major cities in the largest })({ answer( major( city( loc_2( largest( }) weight 0.0
*n:X -> ({ What are the major cities in the largest state })({ answer( major( city( loc_2( largest( state( }) weight 0.0
*n:X -> ({ What are the major cities in the largest state ? })({ answer( major( city( loc_2( largest( state( all }) weight 0.0
*n:X -> ({ What are the major cities in the smallest })({ answer( major( city( loc_2( smallest( }) weight 0.0
*n:X -> ({ What are the major cities in the smallest state })({ answer( major( city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ What are the major cities in the state })({ answer( major( city( loc_2( state( }) weight 0.0
*n:X -> ({ What are the major cities of Texas ? })({ answer( major( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What are the major cities of the })({ answer( major( city( loc_2( }) weight 0.0
*n:X -> ({ What are the major cities of the United })({ answer( major( city( loc_2( countryid( }) weight 0.0
*n:X -> ({ What are the major cities of the United States })({ answer( major( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What are the major cities of the US })({ answer( major( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What are the major rivers })({ answer( major( river( }) weight 0.0
*n:X -> ({ What are the major rivers in })({ answer( major( river( loc_2( }) weight 0.0
*n:X -> ({ What are the major rivers in Ohio ? })({ answer( major( river( loc_2( stateid( 'ohio' }) weight 0.0
*n:X -> ({ What are the major rivers in the })({ answer( major( river( loc_2( }) weight 0.0
*n:X -> ({ What are the major rivers in the US })({ answer( major( river( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  What are the major *n:X#1  *t:Bound })({  answer( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the major *n:X#1  *t:Bound })({  answer( major( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ What are the rivers })({ answer( river( }) weight 0.0
*n:X -> ({ What are the rivers })({ answer( river( loc_2( }) weight 0.0
*n:X -> ({ What are the rivers in })({ answer( river( loc_2( }) weight 0.0
*n:X -> ({ What are the rivers in Alaska ? })({ answer( river( loc_2( stateid( 'alaska' }) weight 0.0
*n:X -> ({ What are the rivers in the })({ answer( river( loc_2( }) weight 0.0
*n:X -> ({ What are the rivers in the state })({ answer( river( loc_2( state( }) weight 0.0
*n:X -> ({ What are the rivers in the state of Indiana ? })({ answer( river( loc_2( state( stateid( 'indiana' }) weight 0.0
*n:X -> ({ What are the rivers in the state of Texas ? })({ answer( river( loc_2( state( stateid( 'texas' }) weight 0.0
*n:X -> ({ What are the rivers of Montana ? })({ answer( river( loc_2( stateid( 'montana' }) weight 0.0
*n:Query -> ({ *t:Bound  What are the rivers *n:X#1  *t:Bound })({  answer( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the rivers *n:X#1  *t:Bound })({  answer( river( *n:X#1  }) weight 0.0
*n:X -> ({ What are the neighboring states })({ answer( state( }) weight 0.0
*n:X -> ({ What are the neighboring states for Michigan ? })({ answer( state( next_to_2( stateid( 'michigan' }) weight 0.0
*n:Query -> ({ *t:Bound  What are the neighboring *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:X -> ({ What are the population densities of each })({ answer( density_1( }) weight 0.0
*n:X -> ({ What are the population densities of each US state })({ answer( density_1( state( }) weight 0.0
*n:X -> ({ What are the population densities of each US state ? })({ answer( density_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  What are the *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the *n:X#1  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the *n:X#1 ?  *t:Bound })({  answer( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the *n:X#1 states  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the *n:X#1 in  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the *n:X#1 cities  *t:Bound })({  answer( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the *n:X#1 river  *t:Bound })({  answer( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the *n:X#1 points  *t:Bound })({  answer( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the *n:X#1 points  *t:Bound })({  answer( *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the *n:X#1 rivers  *t:Bound })({  answer( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  What are the *n:X#1 state  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  What are *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What are *n:X#1 Texas ?  *t:Bound })({  answer( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  What are *n:X#1 Texas *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:X -> ({ What capital has the largest population })({ answer( largest_one( population_1( capital( }) weight 0.0
*n:X -> ({ What capital has the largest population ? })({ answer( largest_one( population_1( capital( all }) weight 0.0
*n:X -> ({ What capital is the largest })({ answer( largest( capital( }) weight 0.0
*n:X -> ({ What capital is the largest in the })({ answer( largest( capital( loc_2( }) weight 0.0
*n:X -> ({ What capital is the largest in the US })({ answer( largest( capital( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  What capital is the *n:X#1  *t:Bound })({  answer( *n:X#1 capital(  }) weight 0.0
*n:X -> ({ What is })({ answer( }) weight 0.0
*n:X -> ({ What is capital })({ answer( capital( }) weight 0.0
*n:X -> ({ What is capital of Iowa ? })({ answer( capital( loc_2( stateid( 'iowa' }) weight 0.0
*n:X -> ({ What is capital of the })({ answer( capital( loc_2( }) weight 0.0
*n:X -> ({ What is capital of the state })({ answer( capital( loc_2( state( }) weight 0.0
*n:X -> ({ What is capital of the state with })({ answer( capital( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ What is capital of the state with the lowest })({ answer( capital( loc_2( state( loc_1( lowest( }) weight 0.0
*n:X -> ({ What is capital of the state with the lowest point })({ answer( capital( loc_2( state( loc_1( lowest( place( }) weight 0.0
*n:Query -> ({ *t:Bound  What is capital of *n:X#1  *t:Bound })({  answer( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is capital *n:X#1  *t:Bound })({  answer( capital( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ What is largest })({ answer( largest( }) weight 0.0
*n:X -> ({ What is largest capital })({ answer( largest( capital( }) weight 0.0
*n:X -> ({ What is largest capital ? })({ answer( largest( capital( all }) weight 0.0
*n:Query -> ({ *t:Bound  What is largest capital *n:X#1  *t:Bound })({  answer( largest( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is largest *n:X#1  *t:Bound })({  answer( largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is largest *n:X#1 ?  *t:Bound })({  answer( largest( *n:X#1 all  }) weight 0.0
*n:X -> ({ What is the })({ answer( }) weight 0.0
*n:X -> ({ What is the adjacent state })({ answer( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the adjacent state of California ? })({ answer( state( next_to_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  What is the adjacent *n:X#1  *t:Bound })({  answer( *n:X#1 next_to_2(  }) weight 0.0
*n:X -> ({ What is the high })({ answer( high_point_1( }) weight 0.0
*n:X -> ({ What is the high point of Wyoming ? })({ answer( high_point_1( stateid( 'wyoming' }) weight 0.0
*n:X -> ({ What is the highest })({ answer( highest( }) weight 0.0
*n:X -> ({ What is the highest elevation })({ answer( highest( place( }) weight 0.0
*n:X -> ({ What is the highest elevation in })({ answer( highest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the highest elevation in Texas ? })({ answer( highest( place( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the highest elevation in New Mexico ? })({ answer( highest( place( loc_2( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ What is the highest elevation in South Carolina ? })({ answer( highest( place( loc_2( stateid( 'south carolina' }) weight 0.0
*n:X -> ({ What is the highest elevation in the })({ answer( highest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the highest elevation in the United })({ answer( highest( place( loc_2( countryid( }) weight 0.0
*n:X -> ({ What is the highest elevation in the United States })({ answer( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the highest mountain })({ answer( highest( mountain( }) weight 0.0
*n:X -> ({ What is the highest mountain in })({ answer( highest( mountain( loc_2( }) weight 0.0
*n:X -> ({ What is the highest mountain in Alaska ? })({ answer( highest( mountain( loc_2( stateid( 'alaska' }) weight 0.0
*n:X -> ({ What is the highest mountain in Texas ? })({ answer( highest( mountain( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the highest mountain in US })({ answer( highest( mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the highest mountain in the })({ answer( highest( mountain( loc_2( }) weight 0.0
*n:X -> ({ What is the highest mountain in the US })({ answer( highest( mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the highest point })({ answer( highest( place( }) weight 0.0
*n:X -> ({ What is the highest point in })({ answer( highest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the highest point in Delaware ? })({ answer( highest( place( loc_2( stateid( 'delaware' }) weight 0.0
*n:X -> ({ What is the highest point in Iowa ? })({ answer( highest( place( loc_2( stateid( 'iowa' }) weight 0.0
*n:X -> ({ What is the highest point in Colorado ? })({ answer( highest( place( loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ What is the highest point in Rhode Island ? })({ answer( highest( place( loc_2( stateid( 'rhode island' }) weight 0.0
*n:X -> ({ What is the highest point in Virginia ? })({ answer( highest( place( loc_2( stateid( 'virginia' }) weight 0.0
*n:X -> ({ What is the highest point in Florida ? })({ answer( highest( place( loc_2( stateid( 'florida' }) weight 0.0
*n:X -> ({ What is the highest point in Maine ? })({ answer( highest( place( loc_2( stateid( 'maine' }) weight 0.0
*n:X -> ({ What is the highest point in Kansas ? })({ answer( highest( place( loc_2( stateid( 'kansas' }) weight 0.0
*n:X -> ({ What is the highest point in Texas ? })({ answer( highest( place( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the highest point in Montana ? })({ answer( highest( place( loc_2( stateid( 'montana' }) weight 0.0
*n:X -> ({ What is the highest point in New Mexico ? })({ answer( highest( place( loc_2( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ What is the highest point in Wyoming ? })({ answer( highest( place( loc_2( stateid( 'wyoming' }) weight 0.0
*n:X -> ({ What is the highest point in each state })({ answer( highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ What is the highest point in each state whose })({ answer( highest( place( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ What is the highest point in Nevada in meters ? })({ answer( highest( place( loc_2( stateid( 'nevada' }) weight 0.0
*n:X -> ({ What is the highest point in Ohio ? })({ answer( highest( place( loc_2( stateid( 'ohio' }) weight 0.0
*n:X -> ({ What is the highest point in states })({ answer( highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ What is the highest point in states bordering })({ answer( highest( place( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the highest point in states bordering Georgia ? })({ answer( highest( place( loc_2( state( next_to_2( stateid( 'georgia' }) weight 0.0
*n:X -> ({ What is the highest point in the })({ answer( highest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the highest point in the country })({ answer( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the highest point in the USA })({ answer( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the highest point in the United })({ answer( highest( place( loc_2( countryid( }) weight 0.0
*n:X -> ({ What is the highest point in the United States })({ answer( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the highest point in the US })({ answer( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the highest point in the states })({ answer( highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ What is the highest point in the states bordering })({ answer( highest( place( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the highest point in the smallest })({ answer( highest( place( loc_2( smallest( }) weight 0.0
*n:X -> ({ What is the highest point in the smallest state })({ answer( highest( place( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ What is the highest point in the smallest state ? })({ answer( highest( place( loc_2( smallest( state( all }) weight 0.0
*n:X -> ({ What is the highest point in the state })({ answer( highest( place( loc_2( state( }) weight 0.0
*n:X -> ({ What is the highest point in the state with })({ answer( highest( place( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ What is the highest point in the state with capital })({ answer( highest( place( loc_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ What is the highest point of the })({ answer( highest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the highest point of the USA })({ answer( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  What is the highest *n:X#1  *t:Bound })({  answer( highest( *n:X#1  }) weight 0.0
*n:X -> ({ What is the capital })({ answer( capital( }) weight 0.0
*n:X -> ({ What is the capital })({ answer( capital( loc_2( }) weight 0.0
*n:X -> ({ What is the capital city })({ answer( capital( city( }) weight 0.0
*n:X -> ({ What is the capital city in })({ answer( capital( city( loc_2( }) weight 0.0
*n:X -> ({ What is the capital city in Texas ? })({ answer( capital( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the capital city of the })({ answer( capital( city( loc_2( }) weight 0.0
*n:X -> ({ What is the capital city of the largest })({ answer( capital( city( loc_2( largest( }) weight 0.0
*n:X -> ({ What is the capital city of the largest state })({ answer( capital( city( loc_2( largest( state( }) weight 0.0
*n:X -> ({ What is the capital of California ? })({ answer( capital( loc_2( stateid( 'california' }) weight 0.0
*n:X -> ({ What is the capital of Iowa ? })({ answer( capital( loc_2( stateid( 'iowa' }) weight 0.0
*n:X -> ({ What is the capital of Maryland ? })({ answer( capital( loc_2( stateid( 'maryland' }) weight 0.0
*n:X -> ({ What is the capital of Indiana ? })({ answer( capital( loc_2( stateid( 'indiana' }) weight 0.0
*n:X -> ({ What is the capital of Colorado ? })({ answer( capital( loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ What is the capital of Georgia ? })({ answer( capital( loc_2( stateid( 'georgia' }) weight 0.0
*n:X -> ({ What is the capital of Hawaii ? })({ answer( capital( loc_2( stateid( 'hawaii' }) weight 0.0
*n:X -> ({ What is the capital of North Dakota ? })({ answer( capital( loc_2( stateid( 'north dakota' }) weight 0.0
*n:X -> ({ What is the capital of Maine ? })({ answer( capital( loc_2( stateid( 'maine' }) weight 0.0
*n:X -> ({ What is the capital of Utah ? })({ answer( capital( loc_2( stateid( 'utah' }) weight 0.0
*n:X -> ({ What is the capital of Texas ? })({ answer( capital( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the capital of Illinois ? })({ answer( capital( loc_2( stateid( 'illinois' }) weight 0.0
*n:X -> ({ What is the capital of Massachusetts ? })({ answer( capital( loc_2( stateid( 'massachusetts' }) weight 0.0
*n:X -> ({ What is the capital of Washington ? })({ answer( capital( loc_2( stateid( 'washington' }) weight 0.0
*n:X -> ({ What is the capital of Pennsylvania ? })({ answer( capital( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:X -> ({ What is the capital of Michigan ? })({ answer( capital( loc_2( stateid( 'michigan' }) weight 0.0
*n:X -> ({ What is the capital of New Jersey ? })({ answer( capital( loc_2( stateid( 'new jersey' }) weight 0.0
*n:X -> ({ What is the capital of New Hampshire ? })({ answer( capital( loc_2( stateid( 'new hampshire' }) weight 0.0
*n:X -> ({ What is the capital of New York ? })({ answer( capital( loc_2( stateid( 'new york' }) weight 0.0
*n:X -> ({ What is the capital of Ohio ? })({ answer( capital( loc_2( stateid( 'ohio' }) weight 0.0
*n:X -> ({ What is the capital of states })({ answer( capital( loc_2( state( }) weight 0.0
*n:X -> ({ What is the capital of states that have })({ answer( capital( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ What is the capital of states that have cities })({ answer( capital( loc_2( state( loc_1( city( }) weight 0.0
*n:X -> ({ What is the capital of states that have cities named })({ answer( capital( loc_2( state( loc_1( city( cityid( }) weight 0.0
*n:X -> ({ What is the capital of Vermont ? })({ answer( capital( loc_2( stateid( 'vermont' }) weight 0.0
*n:X -> ({ What is the capital of the })({ answer( capital( loc_2( }) weight 0.0
*n:X -> ({ What is the capital of the Alabama state ? })({ answer( capital( loc_2( state( stateid( 'alabama' }) weight 0.0
*n:X -> ({ What is the capital of the Florida state ? })({ answer( capital( loc_2( state( stateid( 'florida' }) weight 0.0
*n:X -> ({ What is the capital of the largest })({ answer( capital( loc_2( largest( }) weight 0.0
*n:X -> ({ What is the capital of the largest state })({ answer( capital( loc_2( largest( state( }) weight 0.0
*n:X -> ({ What is the capital of the largest state ? })({ answer( capital( loc_2( largest( state( all }) weight 0.0
*n:X -> ({ What is the capital of the smallest })({ answer( capital( loc_2( smallest( }) weight 0.0
*n:X -> ({ What is the capital of the smallest state })({ answer( capital( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ What is the capital of the smallest state ? })({ answer( capital( loc_2( smallest( state( all }) weight 0.0
*n:X -> ({ What is the capital of the state })({ answer( capital( loc_2( state( }) weight 0.0
*n:X -> ({ What is the capital of the state Texas ? })({ answer( capital( loc_2( state( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the capital of the state with })({ answer( capital( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ What is the capital of the state with the highest })({ answer( capital( loc_2( state( loc_1( highest( }) weight 0.0
*n:X -> ({ What is the capital of the state with the longest })({ answer( capital( loc_2( state( loc_1( longest( }) weight 0.0
*n:X -> ({ What is the capital of the state with the most })({ answer( capital( loc_2( largest_one( population_1( state( }) weight 0.0
*n:X -> ({ What is the capital of the state that borders })({ answer( capital( loc_2( state( next_to_2( }) weight 0.0
*n:Query -> ({ *t:Bound  What is the capital *n:X#1  *t:Bound })({  answer( capital( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the capital *n:X#1  *t:Bound })({  answer( capital( *n:X#1  }) weight 0.0
*n:X -> ({ What is the combined area of all })({ answer( sum( area_1( }) weight 0.0
*n:X -> ({ What is the combined area of all 50 states })({ answer( sum( area_1( state( }) weight 0.0
*n:X -> ({ What is the combined area of all 50 states ? })({ answer( sum( area_1( state( all }) weight 0.0
*n:X -> ({ What is the combined population of all })({ answer( sum( population_1( }) weight 0.0
*n:X -> ({ What is the combined population of all 50 states })({ answer( sum( population_1( state( }) weight 0.0
*n:X -> ({ What is the combined population of all 50 states ? })({ answer( sum( population_1( state( all }) weight 0.0
*n:X -> ({ What is the density })({ answer( density_1( }) weight 0.0
*n:X -> ({ What is the density of Texas ? })({ answer( density_1( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the density of the New York ? })({ answer( density_1( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  What is the density *n:X#1  *t:Bound })({  answer( density_1( *n:X#1  }) weight 0.0
*n:X -> ({ What is the longest })({ answer( longest( }) weight 0.0
*n:X -> ({ What is the longest river })({ answer( longest( exclude( river( }) weight 0.0
*n:X -> ({ What is the longest river })({ answer( longest( river( }) weight 0.0
*n:X -> ({ What is the longest river ? })({ answer( longest( river( all }) weight 0.0
*n:X -> ({ What is the longest river flowing through })({ answer( longest( river( traverse_2( }) weight 0.0
*n:X -> ({ What is the longest river flowing through New York ? })({ answer( longest( river( traverse_2( stateid( 'new york' }) weight 0.0
*n:X -> ({ What is the longest river in })({ answer( longest( river( loc_2( }) weight 0.0
*n:X -> ({ What is the longest river in California ? })({ answer( longest( river( loc_2( stateid( 'california' }) weight 0.0
*n:X -> ({ What is the longest river in America })({ answer( longest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the longest river in Florida ? })({ answer( longest( river( loc_2( stateid( 'florida' }) weight 0.0
*n:X -> ({ What is the longest river in Texas ? })({ answer( longest( river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the longest river in Pennsylvania ? })({ answer( longest( river( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:X -> ({ What is the longest river in Mississippi ? })({ answer( longest( river( loc_2( stateid( 'mississippi' }) weight 0.0
*n:X -> ({ What is the longest river in New York ? })({ answer( longest( river( loc_2( stateid( 'new york' }) weight 0.0
*n:X -> ({ What is the longest river in the })({ answer( longest( river( loc_2( }) weight 0.0
*n:X -> ({ What is the longest river in the United })({ answer( longest( river( loc_2( countryid( }) weight 0.0
*n:X -> ({ What is the longest river in the United States })({ answer( longest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the longest river in the US })({ answer( longest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the longest river in the states })({ answer( longest( river( loc_2( state( }) weight 0.0
*n:X -> ({ What is the longest river in the states that border })({ answer( longest( river( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the longest river in the largest })({ answer( longest( river( loc_2( largest( }) weight 0.0
*n:X -> ({ What is the longest river in the largest state })({ answer( longest( river( loc_2( largest( state( }) weight 0.0
*n:X -> ({ What is the longest river in the largest state ? })({ answer( longest( river( loc_2( largest( state( all }) weight 0.0
*n:X -> ({ What is the longest river in the smallest })({ answer( longest( river( loc_2( smallest( }) weight 0.0
*n:X -> ({ What is the longest river in the smallest state })({ answer( longest( river( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ What is the longest river in the state })({ answer( longest( river( loc_2( state( }) weight 0.0
*n:X -> ({ What is the longest river in the state with })({ answer( longest( river( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ What is the longest river that flows through })({ answer( longest( river( traverse_2( }) weight 0.0
*n:X -> ({ What is the longest river that flows through Colorado ? })({ answer( longest( river( traverse_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ What is the longest river that flows through a state })({ answer( longest( river( traverse_2( state( }) weight 0.0
*n:X -> ({ What is the longest river that runs through })({ answer( longest( river( traverse_2( }) weight 0.0
*n:X -> ({ What is the longest river that runs through a state })({ answer( longest( river( traverse_2( state( }) weight 0.0
*n:X -> ({ What is the longest river that does not })({ answer( longest( exclude( river( all , }) weight 0.0
*n:X -> ({ What is the longest river that does not run through })({ answer( longest( exclude( river( all , traverse_2( }) weight 0.0
*n:X -> ({ What is the longest river that passes })({ answer( longest( river( traverse_2( }) weight 0.0
*n:X -> ({ What is the longest river that passes the states })({ answer( longest( river( traverse_2( state( }) weight 0.0
*n:Query -> ({ *t:Bound  What is the longest *n:X#1  *t:Bound })({  answer( longest( exclude( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the longest *n:X#1  *t:Bound })({  answer( longest( *n:X#1  }) weight 0.0
*n:X -> ({ What is the lowest })({ answer( lowest( }) weight 0.0
*n:X -> ({ What is the lowest elevation })({ answer( lowest( place( }) weight 0.0
*n:X -> ({ What is the lowest elevation in })({ answer( lowest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the lowest elevation in Pennsylvania ? })({ answer( lowest( place( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:X -> ({ What is the lowest point })({ answer( lowest( place( }) weight 0.0
*n:X -> ({ What is the lowest point })({ answer( lowest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the lowest point in })({ answer( lowest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the lowest point in Oregon ? })({ answer( lowest( place( loc_2( stateid( 'oregon' }) weight 0.0
*n:X -> ({ What is the lowest point in California ? })({ answer( lowest( place( loc_2( stateid( 'california' }) weight 0.0
*n:X -> ({ What is the lowest point in Louisiana ? })({ answer( lowest( place( loc_2( stateid( 'louisiana' }) weight 0.0
*n:X -> ({ What is the lowest point in Arkansas ? })({ answer( lowest( place( loc_2( stateid( 'arkansas' }) weight 0.0
*n:X -> ({ What is the lowest point in Wisconsin ? })({ answer( lowest( place( loc_2( stateid( 'wisconsin' }) weight 0.0
*n:X -> ({ What is the lowest point in Texas ? })({ answer( lowest( place( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the lowest point in Massachusetts ? })({ answer( lowest( place( loc_2( stateid( 'massachusetts' }) weight 0.0
*n:X -> ({ What is the lowest point in USA })({ answer( lowest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the lowest point in Mississippi ? })({ answer( lowest( place( loc_2( stateid( 'mississippi' }) weight 0.0
*n:X -> ({ What is the lowest point in Nebraska in meters ? })({ answer( lowest( place( loc_2( stateid( 'nebraska' }) weight 0.0
*n:X -> ({ What is the lowest point in the })({ answer( lowest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the lowest point in the United })({ answer( lowest( place( loc_2( countryid( }) weight 0.0
*n:X -> ({ What is the lowest point in the United States })({ answer( lowest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the lowest point in the state })({ answer( lowest( place( loc_2( state( }) weight 0.0
*n:X -> ({ What is the lowest point of Colorado ? })({ answer( lowest( place( loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ What is the lowest point of all })({ answer( lowest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the lowest point of all states })({ answer( lowest( place( loc_2( state( }) weight 0.0
*n:X -> ({ What is the lowest point of all states through which })({ answer( lowest( place( loc_2( state( traverse_1( }) weight 0.0
*n:X -> ({ What is the lowest point of the })({ answer( lowest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the lowest point of the US })({ answer( lowest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  What is the lowest *n:X#1  *t:Bound })({  answer( lowest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the lowest *n:X#1  *t:Bound })({  answer( lowest( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ What is the length })({ answer( len( }) weight 0.0
*n:X -> ({ What is the length })({ answer( len( intersection( }) weight 0.0
*n:X -> ({ What is the length of the Colorado river })({ answer( len( river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ What is the length of the Mississippi river })({ answer( len( river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ What is the length of the longest })({ answer( len( longest( }) weight 0.0
*n:X -> ({ What is the length of the longest river })({ answer( len( longest( river( }) weight 0.0
*n:X -> ({ What is the length of the longest river in the })({ answer( len( longest( river( loc_2( }) weight 0.0
*n:X -> ({ What is the largest })({ answer( largest_one( }) weight 0.0
*n:X -> ({ What is the largest })({ answer( largest( }) weight 0.0
*n:X -> ({ What is the largest capital })({ answer( largest( capital( }) weight 0.0
*n:X -> ({ What is the largest capital ? })({ answer( largest( capital( all }) weight 0.0
*n:X -> ({ What is the largest capital city })({ answer( largest( capital( city( }) weight 0.0
*n:X -> ({ What is the largest capital city in the })({ answer( largest( capital( city( loc_2( }) weight 0.0
*n:X -> ({ What is the largest capital city in the USA })({ answer( largest( capital( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the largest river })({ answer( longest( river( }) weight 0.0
*n:X -> ({ What is the largest river in })({ answer( longest( river( loc_2( }) weight 0.0
*n:X -> ({ What is the largest river in Washington state ? })({ answer( longest( river( loc_2( state( stateid( 'washington' }) weight 0.0
*n:X -> ({ What is the largest city })({ answer( largest( city( }) weight 0.0
*n:X -> ({ What is the largest city })({ answer( largest( city( loc_2( }) weight 0.0
*n:X -> ({ What is the largest city in })({ answer( largest( city( loc_2( }) weight 0.0
*n:X -> ({ What is the largest city in California ? })({ answer( largest( city( loc_2( stateid( 'california' }) weight 0.0
*n:X -> ({ What is the largest city in Alabama ? })({ answer( largest( city( loc_2( stateid( 'alabama' }) weight 0.0
*n:X -> ({ What is the largest city in Rhode Island ? })({ answer( largest( city( loc_2( stateid( 'rhode island' }) weight 0.0
*n:X -> ({ What is the largest city in Minnesota by population ? })({ answer( largest_one( population_1( city( loc_2( stateid( 'minnesota' }) weight 0.0
*n:X -> ({ What is the largest city in Wisconsin ? })({ answer( largest( city( loc_2( stateid( 'wisconsin' }) weight 0.0
*n:X -> ({ What is the largest city in Texas ? })({ answer( largest( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the largest city in Michigan ? })({ answer( largest( city( loc_2( stateid( 'michigan' }) weight 0.0
*n:X -> ({ What is the largest city in Missouri ? })({ answer( largest( city( loc_2( stateid( 'missouri' }) weight 0.0
*n:X -> ({ What is the largest city in states })({ answer( largest( city( loc_2( state( }) weight 0.0
*n:X -> ({ What is the largest city in states that border })({ answer( largest( city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the largest city in a state })({ answer( largest( city( loc_2( state( }) weight 0.0
*n:X -> ({ What is the largest city in a state that borders })({ answer( largest( city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the largest city in smallest })({ answer( largest( city( loc_2( smallest( }) weight 0.0
*n:X -> ({ What is the largest city in smallest state })({ answer( largest( city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ What is the largest city in smallest state through which })({ answer( largest( city( loc_2( smallest( state( traverse_1( }) weight 0.0
*n:X -> ({ What is the largest city in the })({ answer( largest( city( loc_2( }) weight 0.0
*n:X -> ({ What is the largest city in the smallest })({ answer( largest( city( loc_2( smallest( }) weight 0.0
*n:X -> ({ What is the largest city in the smallest state })({ answer( largest( city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ What is the largest city of Kansas ? })({ answer( largest( city( loc_2( stateid( 'kansas' }) weight 0.0
*n:X -> ({ What is the largest of the states })({ answer( largest( state( }) weight 0.0
*n:X -> ({ What is the largest state })({ answer( largest( state( }) weight 0.0
*n:X -> ({ What is the largest state bordering })({ answer( largest( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the largest state bordering Arkansas ? })({ answer( largest( state( next_to_2( stateid( 'arkansas' }) weight 0.0
*n:X -> ({ What is the largest state bordering Texas ? })({ answer( largest( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the largest state ? })({ answer( largest( state( all }) weight 0.0
*n:X -> ({ What is the largest state capital in population })({ answer( largest_one( population_1( capital_1( state( }) weight 0.0
*n:X -> ({ What is the largest state capital in population ? })({ answer( largest_one( population_1( capital_1( state( all }) weight 0.0
*n:X -> ({ What is the largest state in })({ answer( largest( state( loc_2( }) weight 0.0
*n:X -> ({ What is the largest state in USA })({ answer( largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the largest state in the })({ answer( largest( state( loc_2( }) weight 0.0
*n:X -> ({ What is the largest state in the US })({ answer( largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the largest state traversed })({ answer( largest( state( traverse_1( }) weight 0.0
*n:X -> ({ What is the largest state traversed by the Mississippi river })({ answer( largest( state( traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ What is the largest state that borders })({ answer( largest( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the largest state that borders California ? })({ answer( largest( state( next_to_2( stateid( 'california' }) weight 0.0
*n:X -> ({ What is the largest state that borders Texas ? })({ answer( largest( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the largest state that borders the state })({ answer( largest( state( next_to_2( state( }) weight 0.0
*n:X -> ({ What is the largest state that borders the state with })({ answer( largest( state( next_to_2( largest_one( }) weight 0.0
*n:X -> ({ What is the largest state that borders the state with })({ answer( largest( state( next_to_2( state( loc_1( }) weight 0.0
*n:Query -> ({ *t:Bound  What is the largest *n:X#1  *t:Bound })({  answer( largest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the largest *n:X#1  *t:Bound })({  answer( largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the largest *n:X#1  *t:Bound })({  answer( largest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the largest *n:X#1  *t:Bound })({  answer( longest( *n:X#1  }) weight 0.0
*n:X -> ({ What is the most })({ answer( largest_one( }) weight 0.0
*n:X -> ({ What is the most populated })({ answer( largest_one( population_1( }) weight 0.0
*n:X -> ({ What is the most populated capital })({ answer( largest_one( population_1( capital( }) weight 0.0
*n:X -> ({ What is the most populated capital in the })({ answer( largest_one( population_1( capital( loc_2( }) weight 0.0
*n:X -> ({ What is the most populated capital in the USA })({ answer( largest_one( population_1( capital( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the most populated state })({ answer( largest_one( population_1( state( }) weight 0.0
*n:X -> ({ What is the most populated state bordering })({ answer( largest_one( population_1( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the most populated state bordering Oklahoma ? })({ answer( largest_one( population_1( state( next_to_2( stateid( 'oklahoma' }) weight 0.0
*n:X -> ({ What is the most populous })({ answer( largest_one( population_1( }) weight 0.0
*n:X -> ({ What is the most populous city })({ answer( largest_one( population_1( city( }) weight 0.0
*n:X -> ({ What is the most populous city ? })({ answer( largest_one( population_1( city( all }) weight 0.0
*n:X -> ({ What is the most populous city in })({ answer( largest_one( population_1( city( loc_2( }) weight 0.0
*n:X -> ({ What is the most populous city in Texas ? })({ answer( largest_one( population_1( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the most populous city in Wyoming ? })({ answer( largest_one( population_1( city( loc_2( stateid( 'wyoming' }) weight 0.0
*n:X -> ({ What is the most populous state })({ answer( largest_one( population_1( state( }) weight 0.0
*n:X -> ({ What is the most populous state ? })({ answer( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ What is the most populous state in the })({ answer( largest_one( population_1( state( loc_2( }) weight 0.0
*n:X -> ({ What is the most populous state in the US })({ answer( largest_one( population_1( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the most populous state through which })({ answer( largest_one( population_1( state( traverse_1( }) weight 0.0
*n:X -> ({ What is the most dense })({ answer( largest_one( density_1( }) weight 0.0
*n:X -> ({ What is the most dense state })({ answer( largest_one( density_1( state( }) weight 0.0
*n:X -> ({ What is the most dense state in the })({ answer( largest_one( density_1( state( loc_2( }) weight 0.0
*n:X -> ({ What is the most dense state in the USA })({ answer( largest_one( density_1( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  What is the most *n:X#1  *t:Bound })({  answer( largest_one( *n:X#1  }) weight 0.0
*n:X -> ({ What is the height })({ answer( elevation_1( }) weight 0.0
*n:X -> ({ What is the height of Mount })({ answer( elevation_1( placeid( 'mount }) weight 0.0
*n:X -> ({ What is the height of Mount McKinley })({ answer( elevation_1( placeid( 'mount mckinley' }) weight 0.0
*n:X -> ({ What is the height of the highest })({ answer( elevation_1( highest( }) weight 0.0
*n:X -> ({ What is the height of the highest point })({ answer( elevation_1( highest( place( }) weight 0.0
*n:X -> ({ What is the height of the highest point in the })({ answer( elevation_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the average population })({ answer( density_1( }) weight 0.0
*n:X -> ({ What is the average population of the US })({ answer( density_1( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the average population per square km })({ answer( density_1( }) weight 0.0
*n:X -> ({ What is the average population per square km })({ answer( density_1( countryid( }) weight 0.0
*n:X -> ({ What is the area })({ answer( area_1( }) weight 0.0
*n:X -> ({ What is the area of })({ answer( area_1( cityid( }) weight 0.0
*n:X -> ({ What is the area of Alaska ? })({ answer( area_1( stateid( 'alaska' }) weight 0.0
*n:X -> ({ What is the area of California ? })({ answer( area_1( stateid( 'california' }) weight 0.0
*n:X -> ({ What is the area of Maryland in square kilometers ? })({ answer( area_1( stateid( 'maryland' }) weight 0.0
*n:X -> ({ What is the area of Florida ? })({ answer( area_1( stateid( 'florida' }) weight 0.0
*n:X -> ({ What is the area of Wisconsin ? })({ answer( area_1( stateid( 'wisconsin' }) weight 0.0
*n:X -> ({ What is the area of Seattle })({ answer( area_1( cityid( 'seattle', }) weight 0.0
*n:X -> ({ What is the area of Seattle ? })({ answer( area_1( cityid( 'seattle', _ }) weight 0.0
*n:X -> ({ What is the area of Maine ? })({ answer( area_1( stateid( 'maine' }) weight 0.0
*n:X -> ({ What is the area of Idaho ? })({ answer( area_1( stateid( 'idaho' }) weight 0.0
*n:X -> ({ What is the area of Texas ? })({ answer( area_1( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the area of New Mexico ? })({ answer( area_1( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ What is the area of South Carolina ? })({ answer( area_1( stateid( 'south carolina' }) weight 0.0
*n:X -> ({ What is the area of Ohio ? })({ answer( area_1( stateid( 'ohio' }) weight 0.0
*n:X -> ({ What is the area of all the states combined })({ answer( sum( area_1( state( }) weight 0.0
*n:X -> ({ What is the area of all the states combined ? })({ answer( sum( area_1( state( all }) weight 0.0
*n:X -> ({ What is the area of the Texas state ? })({ answer( area_1( state( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the area of the states })({ answer( area_1( state( }) weight 0.0
*n:X -> ({ What is the area of the states ? })({ answer( area_1( state( all }) weight 0.0
*n:X -> ({ What is the area of the largest })({ answer( area_1( largest( }) weight 0.0
*n:X -> ({ What is the area of the largest state })({ answer( area_1( largest( state( }) weight 0.0
*n:X -> ({ What is the area of the largest state ? })({ answer( area_1( largest( state( all }) weight 0.0
*n:X -> ({ What is the area of the smallest })({ answer( area_1( smallest( }) weight 0.0
*n:X -> ({ What is the area of the smallest state })({ answer( area_1( smallest( state( }) weight 0.0
*n:X -> ({ What is the area of the smallest state ? })({ answer( area_1( smallest( state( all }) weight 0.0
*n:X -> ({ What is the area of the state with the capital })({ answer( area_1( state( loc_1( capital( cityid( }) weight 0.0
*n:Query -> ({ *t:Bound  What is the area *n:X#1  *t:Bound })({  answer( area_1( *n:X#1  }) weight 0.0
*n:X -> ({ What is the total })({ answer( sum( }) weight 0.0
*n:X -> ({ What is the total length of all })({ answer( sum( len( }) weight 0.0
*n:X -> ({ What is the total length of all rivers })({ answer( sum( len( river( }) weight 0.0
*n:X -> ({ What is the total area of the })({ answer( area_1( }) weight 0.0
*n:X -> ({ What is the total area of the USA })({ answer( area_1( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the total population })({ answer( sum( population_1( }) weight 0.0
*n:X -> ({ What is the total population of the states })({ answer( sum( population_1( state( }) weight 0.0
*n:X -> ({ What is the total population of the states that border })({ answer( sum( population_1( state( next_to_2( }) weight 0.0
*n:Query -> ({ *t:Bound  What is the total *n:X#1  *t:Bound })({  answer( sum( *n:X#1  }) weight 0.0
*n:X -> ({ What is the biggest })({ answer( largest( }) weight 0.0
*n:X -> ({ What is the biggest })({ answer( longest( }) weight 0.0
*n:X -> ({ What is the biggest American city })({ answer( largest( city( }) weight 0.0
*n:X -> ({ What is the biggest American city in })({ answer( largest( city( loc_2( }) weight 0.0
*n:X -> ({ What is the biggest capital })({ answer( largest( capital( }) weight 0.0
*n:X -> ({ What is the biggest capital city })({ answer( largest( capital( city( }) weight 0.0
*n:X -> ({ What is the biggest capital city in the })({ answer( largest( capital( city( loc_2( }) weight 0.0
*n:X -> ({ What is the biggest capital city in the US })({ answer( largest( capital( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the biggest river })({ answer( longest( river( }) weight 0.0
*n:X -> ({ What is the biggest river in })({ answer( longest( river( loc_2( }) weight 0.0
*n:X -> ({ What is the biggest river in Illinois ? })({ answer( longest( river( loc_2( stateid( 'illinois' }) weight 0.0
*n:X -> ({ What is the biggest city })({ answer( largest( city( }) weight 0.0
*n:X -> ({ What is the biggest city in })({ answer( largest( city( loc_2( }) weight 0.0
*n:X -> ({ What is the biggest city in Oregon ? })({ answer( largest( city( loc_2( stateid( 'oregon' }) weight 0.0
*n:X -> ({ What is the biggest city in Arizona ? })({ answer( largest( city( loc_2( stateid( 'arizona' }) weight 0.0
*n:X -> ({ What is the biggest city in Louisiana ? })({ answer( largest( city( loc_2( stateid( 'louisiana' }) weight 0.0
*n:X -> ({ What is the biggest city in Georgia ? })({ answer( largest( city( loc_2( stateid( 'georgia' }) weight 0.0
*n:X -> ({ What is the biggest city in Kansas ? })({ answer( largest( city( loc_2( stateid( 'kansas' }) weight 0.0
*n:X -> ({ What is the biggest city in Texas ? })({ answer( largest( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the biggest city in USA })({ answer( largest( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the biggest city in Nebraska ? })({ answer( largest( city( loc_2( stateid( 'nebraska' }) weight 0.0
*n:X -> ({ What is the biggest city in Wyoming ? })({ answer( largest( city( loc_2( stateid( 'wyoming' }) weight 0.0
*n:X -> ({ What is the biggest city in the })({ answer( largest( city( loc_2( }) weight 0.0
*n:X -> ({ What is the biggest city in the USA })({ answer( largest( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the biggest city in the US })({ answer( largest( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the biggest city in the smallest })({ answer( largest( city( loc_2( smallest( }) weight 0.0
*n:X -> ({ What is the biggest city in the smallest state })({ answer( largest( city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ What is the biggest city in the smallest state ? })({ answer( largest( city( loc_2( smallest( state( all }) weight 0.0
*n:X -> ({ What is the biggest state })({ answer( largest( state( }) weight 0.0
*n:X -> ({ What is the biggest state ? })({ answer( largest( state( all }) weight 0.0
*n:X -> ({ What is the biggest state in })({ answer( largest( state( loc_2( }) weight 0.0
*n:X -> ({ What is the biggest state in continental })({ answer( largest( state( loc_2( countryid( }) weight 0.0
*n:X -> ({ What is the biggest state in continental US })({ answer( largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the biggest state in the })({ answer( largest( state( loc_2( }) weight 0.0
*n:X -> ({ What is the biggest state in the USA })({ answer( largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  What is the biggest *n:X#1  *t:Bound })({  answer( largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the biggest *n:X#1  *t:Bound })({  answer( longest( *n:X#1  }) weight 0.0
*n:X -> ({ What is the least })({ answer( smallest_one( }) weight 0.0
*n:X -> ({ What is the least populous })({ answer( smallest_one( population_1( }) weight 0.0
*n:X -> ({ What is the least populous state })({ answer( smallest_one( population_1( state( }) weight 0.0
*n:X -> ({ What is the least populous state ? })({ answer( smallest_one( population_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  What is the least *n:X#1  *t:Bound })({  answer( smallest_one( *n:X#1  }) weight 0.0
*n:X -> ({ What is the river })({ answer( river( }) weight 0.0
*n:X -> ({ What is the river that cross over })({ answer( river( traverse_2( }) weight 0.0
*n:X -> ({ What is the river that cross over Ohio ? })({ answer( river( traverse_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  What is the river *n:X#1  *t:Bound })({  answer( river( *n:X#1  }) weight 0.0
*n:X -> ({ What is the major })({ answer( major( }) weight 0.0
*n:X -> ({ What is the major cities })({ answer( major( city( }) weight 0.0
*n:X -> ({ What is the major cities in })({ answer( major( city( loc_2( }) weight 0.0
*n:X -> ({ What is the major cities in Montana ? })({ answer( major( city( loc_2( stateid( 'montana' }) weight 0.0
*n:Query -> ({ *t:Bound  What is the major *n:X#1  *t:Bound })({  answer( major( *n:X#1  }) weight 0.0
*n:X -> ({ What is the shortest })({ answer( shortest( }) weight 0.0
*n:X -> ({ What is the shortest river })({ answer( shortest( river( }) weight 0.0
*n:X -> ({ What is the shortest river ? })({ answer( shortest( river( all }) weight 0.0
*n:X -> ({ What is the shortest river in })({ answer( shortest( river( loc_2( }) weight 0.0
*n:X -> ({ What is the shortest river in Alaska ? })({ answer( shortest( river( loc_2( stateid( 'alaska' }) weight 0.0
*n:X -> ({ What is the shortest river in Iowa ? })({ answer( shortest( river( loc_2( stateid( 'iowa' }) weight 0.0
*n:X -> ({ What is the shortest river in Texas ? })({ answer( shortest( river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the shortest river in Nebraska ? })({ answer( shortest( river( loc_2( stateid( 'nebraska' }) weight 0.0
*n:X -> ({ What is the shortest river in the })({ answer( shortest( river( loc_2( }) weight 0.0
*n:X -> ({ What is the shortest river in the USA })({ answer( shortest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the shortest river in the United })({ answer( shortest( river( loc_2( countryid( }) weight 0.0
*n:X -> ({ What is the shortest river in the United States })({ answer( shortest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the shortest river in the US })({ answer( shortest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  What is the shortest *n:X#1  *t:Bound })({  answer( shortest( *n:X#1  }) weight 0.0
*n:X -> ({ What is the city with the smallest population })({ answer( smallest_one( population_1( city( }) weight 0.0
*n:X -> ({ What is the city with the smallest population ? })({ answer( smallest_one( population_1( city( all }) weight 0.0
*n:X -> ({ What is the size })({ answer( size( }) weight 0.0
*n:X -> ({ What is the size of California ? })({ answer( size( stateid( 'california' }) weight 0.0
*n:X -> ({ What is the size of Florida ? })({ answer( size( stateid( 'florida' }) weight 0.0
*n:X -> ({ What is the size of Texas ? })({ answer( size( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the size of the capital of Texas ? })({ answer( size( capital( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the size of the largest })({ answer( size( largest( }) weight 0.0
*n:X -> ({ What is the size of the largest state })({ answer( size( largest( state( }) weight 0.0
*n:X -> ({ What is the size of the largest state in the })({ answer( size( largest( state( loc_2( }) weight 0.0
*n:Query -> ({ *t:Bound  What is the size *n:X#1  *t:Bound })({  answer( size( *n:X#1  }) weight 0.0
*n:X -> ({ What is the elevation })({ answer( elevation_1( }) weight 0.0
*n:X -> ({ What is the elevation of Death })({ answer( elevation_1( placeid( 'death }) weight 0.0
*n:X -> ({ What is the elevation of Death Valley })({ answer( elevation_1( placeid( 'death valley' }) weight 0.0
*n:X -> ({ What is the elevation of the highest })({ answer( elevation_1( highest( }) weight 0.0
*n:X -> ({ What is the elevation of the highest point })({ answer( elevation_1( highest( place( }) weight 0.0
*n:X -> ({ What is the elevation of the highest point in the })({ answer( elevation_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the maximum elevation })({ answer( highest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the maximum elevation of })({ answer( highest( place( loc_2( cityid( }) weight 0.0
*n:X -> ({ What is the maximum elevation of San })({ answer( highest( place( loc_2( cityid( 'san }) weight 0.0
*n:X -> ({ What is the maximum elevation of San Francisco })({ answer( highest( place( loc_2( cityid( 'san francisco', }) weight 0.0
*n:X -> ({ What is the maximum elevation of San Francisco ? })({ answer( highest( place( loc_2( cityid( 'san francisco', _ }) weight 0.0
*n:Query -> ({ *t:Bound  What is the maximum *n:X#1  *t:Bound })({  answer( highest( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ What is the number })({ answer( count( }) weight 0.0
*n:X -> ({ What is the number of neighboring states for Kentucky ? })({ answer( count( state( next_to_2( stateid( 'kentucky' }) weight 0.0
*n:Query -> ({ *t:Bound  What is the number *n:X#1  *t:Bound })({  answer( count( *n:X#1  }) weight 0.0
*n:X -> ({ What is the name of the })({ answer( }) weight 0.0
*n:X -> ({ What is the name of the state })({ answer( state( }) weight 0.0
*n:X -> ({ What is the name of the state with })({ answer( state( loc_1( }) weight 0.0
*n:X -> ({ What is the name of the state with the lowest })({ answer( state( loc_1( lowest( }) weight 0.0
*n:X -> ({ What is the population })({ answer( population_1( }) weight 0.0
*n:X -> ({ What is the population density })({ answer( density_1( }) weight 0.0
*n:X -> ({ What is the population density in the state })({ answer( density_1( state( }) weight 0.0
*n:X -> ({ What is the population density in the state with })({ answer( density_1( state( loc_1( }) weight 0.0
*n:X -> ({ What is the population density in the state with capital })({ answer( density_1( state( loc_1( capital( }) weight 0.0
*n:X -> ({ What is the population density of Maine ? })({ answer( density_1( stateid( 'maine' }) weight 0.0
*n:X -> ({ What is the population density of Texas ? })({ answer( density_1( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the population density of Wyoming ? })({ answer( density_1( stateid( 'wyoming' }) weight 0.0
*n:X -> ({ What is the population density of South Dakota ? })({ answer( density_1( stateid( 'south dakota' }) weight 0.0
*n:X -> ({ What is the population density of the largest })({ answer( density_1( largest( }) weight 0.0
*n:X -> ({ What is the population density of the largest state })({ answer( density_1( largest( state( }) weight 0.0
*n:X -> ({ What is the population density of the largest state ? })({ answer( density_1( largest( state( all }) weight 0.0
*n:X -> ({ What is the population density of the smallest })({ answer( density_1( smallest( }) weight 0.0
*n:X -> ({ What is the population density of the smallest state })({ answer( density_1( smallest( state( }) weight 0.0
*n:X -> ({ What is the population density of the smallest state ? })({ answer( density_1( smallest( state( all }) weight 0.0
*n:X -> ({ What is the population in })({ answer( population_1( cityid( }) weight 0.0
*n:X -> ({ What is the population in Boston })({ answer( population_1( cityid( 'boston', }) weight 0.0
*n:X -> ({ What is the population in Boston ? })({ answer( population_1( cityid( 'boston', _ }) weight 0.0
*n:X -> ({ What is the population of })({ answer( population_1( }) weight 0.0
*n:X -> ({ What is the population of })({ answer( population_1( cityid( }) weight 0.0
*n:X -> ({ What is the population of })({ answer( population_1( city( cityid( }) weight 0.0
*n:X -> ({ What is the population of Oregon ? })({ answer( population_1( stateid( 'oregon' }) weight 0.0
*n:X -> ({ What is the population of Alaska ? })({ answer( population_1( stateid( 'alaska' }) weight 0.0
*n:X -> ({ What is the population of California ? })({ answer( population_1( stateid( 'california' }) weight 0.0
*n:X -> ({ What is the population of Arizona ? })({ answer( population_1( stateid( 'arizona' }) weight 0.0
*n:X -> ({ What is the population of Denver })({ answer( population_1( cityid( 'denver', }) weight 0.0
*n:X -> ({ What is the population of Denver ? })({ answer( population_1( cityid( 'denver', _ }) weight 0.0
*n:X -> ({ What is the population of Boulder })({ answer( population_1( cityid( 'boulder', }) weight 0.0
*n:X -> ({ What is the population of Boulder ? })({ answer( population_1( cityid( 'boulder', _ }) weight 0.0
*n:X -> ({ What is the population of Maryland ? })({ answer( population_1( stateid( 'maryland' }) weight 0.0
*n:X -> ({ What is the population of Atlanta })({ answer( population_1( cityid( 'atlanta', }) weight 0.0
*n:X -> ({ What is the population of Atlanta ? })({ answer( population_1( cityid( 'atlanta', _ }) weight 0.0
*n:X -> ({ What is the population of Atlanta GA })({ answer( population_1( cityid( 'atlanta', 'ga' }) weight 0.0
*n:X -> ({ What is the population of Hawaii ? })({ answer( population_1( stateid( 'hawaii' }) weight 0.0
*n:X -> ({ What is the population of Rhode Island ? })({ answer( population_1( stateid( 'rhode island' }) weight 0.0
*n:X -> ({ What is the population of Austin })({ answer( population_1( cityid( 'austin', }) weight 0.0
*n:X -> ({ What is the population of Austin ? })({ answer( population_1( cityid( 'austin', _ }) weight 0.0
*n:X -> ({ What is the population of Austin Texas })({ answer( population_1( cityid( 'austin', 'tx' }) weight 0.0
*n:X -> ({ What is the population of Boston })({ answer( population_1( cityid( 'boston', }) weight 0.0
*n:X -> ({ What is the population of Boston Massachusetts })({ answer( population_1( cityid( 'boston', 'ma' }) weight 0.0
*n:X -> ({ What is the population of Minnesota ? })({ answer( population_1( stateid( 'minnesota' }) weight 0.0
*n:X -> ({ What is the population of Erie })({ answer( population_1( cityid( 'erie', }) weight 0.0
*n:X -> ({ What is the population of Erie Pennsylvania })({ answer( population_1( cityid( 'erie', 'pa' }) weight 0.0
*n:X -> ({ What is the population of Houston })({ answer( population_1( cityid( 'houston', }) weight 0.0
*n:X -> ({ What is the population of Houston ? })({ answer( population_1( cityid( 'houston', _ }) weight 0.0
*n:X -> ({ What is the population of Seattle })({ answer( population_1( cityid( 'seattle', }) weight 0.0
*n:X -> ({ What is the population of Seattle ? })({ answer( population_1( cityid( 'seattle', _ }) weight 0.0
*n:X -> ({ What is the population of Seattle Washington })({ answer( population_1( cityid( 'seattle', 'wa' }) weight 0.0
*n:X -> ({ What is the population of Maine ? })({ answer( population_1( stateid( 'maine' }) weight 0.0
*n:X -> ({ What is the population of Idaho ? })({ answer( population_1( stateid( 'idaho' }) weight 0.0
*n:X -> ({ What is the population of Dallas })({ answer( population_1( cityid( 'dallas', }) weight 0.0
*n:X -> ({ What is the population of Dallas ? })({ answer( population_1( cityid( 'dallas', _ }) weight 0.0
*n:X -> ({ What is the population of Tucson })({ answer( population_1( cityid( 'tucson', }) weight 0.0
*n:X -> ({ What is the population of Tucson ? })({ answer( population_1( cityid( 'tucson', _ }) weight 0.0
*n:X -> ({ What is the population of Utah ? })({ answer( population_1( stateid( 'utah' }) weight 0.0
*n:X -> ({ What is the population of Texas ? })({ answer( population_1( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the population of Montana ? })({ answer( population_1( stateid( 'montana' }) weight 0.0
*n:X -> ({ What is the population of Illinois ? })({ answer( population_1( stateid( 'illinois' }) weight 0.0
*n:X -> ({ What is the population of Washington })({ answer( population_1( cityid( 'washington', }) weight 0.0
*n:X -> ({ What is the population of Washington ? })({ answer( population_1( stateid( 'washington' }) weight 0.0
*n:X -> ({ What is the population of Washington DC })({ answer( population_1( cityid( 'washington', 'dc' }) weight 0.0
*n:X -> ({ What is the population of Mississippi ? })({ answer( population_1( stateid( 'mississippi' }) weight 0.0
*n:X -> ({ What is the population of New })({ answer( population_1( city( cityid( 'new }) weight 0.0
*n:X -> ({ What is the population of New Mexico ? })({ answer( population_1( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ What is the population of New York ? })({ answer( population_1( stateid( 'new york' }) weight 0.0
*n:X -> ({ What is the population of New York City })({ answer( population_1( city( cityid( 'new york', }) weight 0.0
*n:X -> ({ What is the population of New York City ? })({ answer( population_1( city( cityid( 'new york', _ }) weight 0.0
*n:X -> ({ What is the population of Sacramento })({ answer( population_1( cityid( 'sacramento', }) weight 0.0
*n:X -> ({ What is the population of Sacramento ? })({ answer( population_1( cityid( 'sacramento', _ }) weight 0.0
*n:X -> ({ What is the population of San })({ answer( population_1( cityid( 'san }) weight 0.0
*n:X -> ({ What is the population of San Antonio })({ answer( population_1( cityid( 'san antonio', }) weight 0.0
*n:X -> ({ What is the population of San Antonio ? })({ answer( population_1( cityid( 'san antonio', _ }) weight 0.0
*n:X -> ({ What is the population of South Dakota ? })({ answer( population_1( stateid( 'south dakota' }) weight 0.0
*n:X -> ({ What is the population of Portland })({ answer( population_1( cityid( 'portland', }) weight 0.0
*n:X -> ({ What is the population of Portland Maine })({ answer( population_1( cityid( 'portland', 'me' }) weight 0.0
*n:X -> ({ What is the population of Springfield })({ answer( population_1( cityid( 'springfield', }) weight 0.0
*n:X -> ({ What is the population of Springfield Missouri })({ answer( population_1( cityid( 'springfield', 'mo' }) weight 0.0
*n:X -> ({ What is the population of Springfield South Dakota })({ answer( population_1( cityid( 'springfield', 'sd' }) weight 0.0
*n:X -> ({ What is the population of Tempe })({ answer( population_1( cityid( 'tempe', }) weight 0.0
*n:X -> ({ What is the population of Tempe Arizona })({ answer( population_1( cityid( 'tempe', 'az' }) weight 0.0
*n:X -> ({ What is the population of the capital })({ answer( population_1( capital( }) weight 0.0
*n:X -> ({ What is the population of the capital of the })({ answer( population_1( capital( loc_2( }) weight 0.0
*n:X -> ({ What is the population of the capital of the largest })({ answer( population_1( capital( loc_2( largest( }) weight 0.0
*n:X -> ({ What is the population of the capital of the smallest })({ answer( population_1( capital( loc_2( smallest( }) weight 0.0
*n:X -> ({ What is the population of the largest })({ answer( population_1( largest( }) weight 0.0
*n:X -> ({ What is the population of the largest city })({ answer( population_1( largest( city( }) weight 0.0
*n:X -> ({ What is the population of the largest state })({ answer( population_1( largest( state( }) weight 0.0
*n:X -> ({ What is the population of the largest state ? })({ answer( population_1( largest( state( all }) weight 0.0
*n:X -> ({ What is the population of the largest state that borders })({ answer( population_1( largest( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the population of the major })({ answer( population_1( major( }) weight 0.0
*n:X -> ({ What is the population of the major cities })({ answer( population_1( major( city( }) weight 0.0
*n:X -> ({ What is the population of the major cities in })({ answer( population_1( major( city( loc_2( }) weight 0.0
*n:X -> ({ What is the population of the smallest })({ answer( smallest( population_1( }) weight 0.0
*n:X -> ({ What is the population of the smallest state })({ answer( smallest( population_1( state( }) weight 0.0
*n:X -> ({ What is the population of the smallest state ? })({ answer( smallest( population_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  What is the population *n:X#1  *t:Bound })({  answer( population_1( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the population *n:X#1  *t:Bound })({  answer( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the population *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:X -> ({ What is the tallest })({ answer( highest( }) weight 0.0
*n:X -> ({ What is the tallest mountain })({ answer( highest( mountain( }) weight 0.0
*n:X -> ({ What is the tallest mountain in })({ answer( highest( mountain( loc_2( }) weight 0.0
*n:X -> ({ What is the tallest mountain in America })({ answer( highest( mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the tallest mountain in the })({ answer( highest( mountain( loc_2( }) weight 0.0
*n:X -> ({ What is the tallest mountain in the United })({ answer( highest( mountain( loc_2( countryid( }) weight 0.0
*n:X -> ({ What is the tallest mountain in the United States })({ answer( highest( mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  What is the tallest *n:X#1  *t:Bound })({  answer( highest( *n:X#1  }) weight 0.0
*n:X -> ({ What is the smallest })({ answer( smallest( }) weight 0.0
*n:X -> ({ What is the smallest city })({ answer( smallest( city( }) weight 0.0
*n:X -> ({ What is the smallest city in })({ answer( smallest( city( loc_2( }) weight 0.0
*n:X -> ({ What is the smallest city in Alaska ? })({ answer( smallest( city( loc_2( stateid( 'alaska' }) weight 0.0
*n:X -> ({ What is the smallest city in Arkansas ? })({ answer( smallest( city( loc_2( stateid( 'arkansas' }) weight 0.0
*n:X -> ({ What is the smallest city in Hawaii ? })({ answer( smallest( city( loc_2( stateid( 'hawaii' }) weight 0.0
*n:X -> ({ What is the smallest city in Washington ? })({ answer( smallest( city( loc_2( stateid( 'washington' }) weight 0.0
*n:X -> ({ What is the smallest city in the })({ answer( smallest( city( loc_2( }) weight 0.0
*n:X -> ({ What is the smallest city in the USA })({ answer( smallest( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the smallest city in the US })({ answer( smallest( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the smallest city in the largest })({ answer( smallest( city( loc_2( largest( }) weight 0.0
*n:X -> ({ What is the smallest city in the largest state })({ answer( smallest( city( loc_2( largest( state( }) weight 0.0
*n:X -> ({ What is the smallest city in the largest state ? })({ answer( smallest( city( loc_2( largest( state( all }) weight 0.0
*n:X -> ({ What is the smallest city of the })({ answer( smallest( city( loc_2( }) weight 0.0
*n:X -> ({ What is the smallest city of the smallest })({ answer( smallest( city( loc_2( smallest( }) weight 0.0
*n:X -> ({ What is the smallest city of the smallest state })({ answer( smallest( city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ What is the smallest state })({ answer( smallest( state( }) weight 0.0
*n:X -> ({ What is the smallest state bordering })({ answer( smallest( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the smallest state bordering Wyoming ? })({ answer( smallest( state( next_to_2( stateid( 'wyoming' }) weight 0.0
*n:X -> ({ What is the smallest state bordering Ohio ? })({ answer( smallest( state( next_to_2( stateid( 'ohio' }) weight 0.0
*n:X -> ({ What is the smallest state by area })({ answer( smallest_one( area_1( state( }) weight 0.0
*n:X -> ({ What is the smallest state by area ? })({ answer( smallest_one( area_1( state( all }) weight 0.0
*n:X -> ({ What is the smallest state in the })({ answer( smallest( state( loc_2( }) weight 0.0
*n:X -> ({ What is the smallest state in the USA })({ answer( smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the smallest state through which })({ answer( smallest( state( traverse_1( }) weight 0.0
*n:X -> ({ What is the smallest state through which the longest })({ answer( smallest( state( traverse_1( longest( }) weight 0.0
*n:X -> ({ What is the smallest state through which the longest river })({ answer( smallest( state( traverse_1( longest( river( }) weight 0.0
*n:X -> ({ What is the smallest state that borders })({ answer( smallest( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the smallest state that borders Texas ? })({ answer( smallest( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ What is the smallest state that borders the most })({ answer( smallest( most( state( next_to_2( }) weight 0.0
*n:X -> ({ What is the smallest state that borders the most states })({ answer( smallest( most( state( next_to_2( state( }) weight 0.0
*n:Query -> ({ *t:Bound  What is the smallest *n:X#1  *t:Bound })({  answer( smallest( *n:X#1  }) weight 0.0
*n:X -> ({ What is the state })({ answer( state( }) weight 0.0
*n:X -> ({ What is the state with })({ answer( state( loc_1( }) weight 0.0
*n:X -> ({ What is the state with the highest })({ answer( state( loc_1( highest( }) weight 0.0
*n:X -> ({ What is the state with the highest elevation })({ answer( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ What is the state with the highest elevation in the })({ answer( state( loc_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ What is the state with the lowest })({ answer( state( loc_1( lowest( }) weight 0.0
*n:X -> ({ What is the state with the lowest population })({ answer( smallest_one( population_1( state( }) weight 0.0
*n:X -> ({ What is the state with the lowest population ? })({ answer( smallest_one( population_1( state( all }) weight 0.0
*n:X -> ({ What is the state with the lowest population density })({ answer( smallest_one( density_1( state( }) weight 0.0
*n:X -> ({ What is the state with the lowest population density ? })({ answer( smallest_one( density_1( state( all }) weight 0.0
*n:X -> ({ What is the state with the lowest point })({ answer( state( loc_1( lowest( place( }) weight 0.0
*n:X -> ({ What is the state with the lowest point ? })({ answer( state( loc_1( lowest( place( all }) weight 0.0
*n:X -> ({ What is the state with the largest density })({ answer( largest_one( density_1( state( }) weight 0.0
*n:X -> ({ What is the state with the largest density in })({ answer( largest_one( density_1( state( loc_2( }) weight 0.0
*n:X -> ({ What is the state with the largest density in USA })({ answer( largest_one( density_1( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ What is the state with the largest area })({ answer( largest_one( area_1( state( }) weight 0.0
*n:X -> ({ What is the state with the largest area ? })({ answer( largest_one( area_1( state( all }) weight 0.0
*n:X -> ({ What is the state with the largest population density })({ answer( largest_one( density_1( state( }) weight 0.0
*n:X -> ({ What is the state with the largest population density ? })({ answer( largest_one( density_1( state( all }) weight 0.0
*n:X -> ({ What is the state with the smallest area })({ answer( smallest_one( area_1( state( }) weight 0.0
*n:X -> ({ What is the state with the smallest area ? })({ answer( smallest_one( area_1( state( all }) weight 0.0
*n:X -> ({ What is the state that contains })({ answer( state( loc_1( }) weight 0.0
*n:X -> ({ What is the state that contains the highest })({ answer( state( loc_1( highest( }) weight 0.0
*n:X -> ({ What is the state that contains the highest point })({ answer( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ What is the state that contains the highest point ? })({ answer( state( loc_1( highest( place( all }) weight 0.0
*n:Query -> ({ *t:Bound  What is the state *n:X#1  *t:Bound })({  answer( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the state *n:X#1  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 States  *t:Bound })({  answer( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Arizona  *t:Bound })({  answer( *n:X#1 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 bordering  *t:Bound })({  answer( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Denver  *t:Bound })({  answer( *n:X#1 'denver',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Boulder  *t:Bound })({  answer( *n:X#1 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 America  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 country  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Antonio  *t:Bound })({  answer( *n:X#1 antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 ?  *t:Bound })({  answer( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 ?  *t:Bound })({  answer( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Atlanta  *t:Bound })({  answer( *n:X#1 'atlanta',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 McKinley  *t:Bound })({  answer( *n:X#1 mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Austin  *t:Bound })({  answer( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Boston  *t:Bound })({  answer( *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Erie  *t:Bound })({  answer( *n:X#1 'erie',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 GA  *t:Bound })({  answer( *n:X#1 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Houston  *t:Bound })({  answer( *n:X#1 'houston',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 DC  *t:Bound })({  answer( *n:X#1 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Seattle  *t:Bound })({  answer( *n:X#1 'seattle',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Maine  *t:Bound })({  answer( *n:X#1 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Dallas  *t:Bound })({  answer( *n:X#1 'dallas',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Tucson  *t:Bound })({  answer( *n:X#1 'tucson',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Texas  *t:Bound })({  answer( *n:X#1 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Massachusetts  *t:Bound })({  answer( *n:X#1 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Washington  *t:Bound })({  answer( *n:X#1 'washington',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Washington  *t:Bound })({  answer( *n:X#1 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 USA  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 United  *t:Bound })({  answer( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 capital  *t:Bound })({  answer( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Pennsylvania  *t:Bound })({  answer( *n:X#1 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 New  *t:Bound })({  answer( *n:X#1 'new  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Missouri  *t:Bound })({  answer( *n:X#1 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Sacramento  *t:Bound })({  answer( *n:X#1 'sacramento',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 San  *t:Bound })({  answer( *n:X#1 'san  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Portland  *t:Bound })({  answer( *n:X#1 'portland',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 US  *t:Bound })({  answer( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 US  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 states  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 in  *t:Bound })({  answer( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 in  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 populated  *t:Bound })({  answer( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 largest  *t:Bound })({  answer( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Springfield  *t:Bound })({  answer( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 cities  *t:Bound })({  answer( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 river  *t:Bound })({  answer( *n:X#1 exclude( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 river  *t:Bound })({  answer( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 populous  *t:Bound })({  answer( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 city  *t:Bound })({  answer( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 city  *t:Bound })({  answer( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 continental  *t:Bound })({  answer( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Tempe  *t:Bound })({  answer( *n:X#1 'tempe',  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 dense  *t:Bound })({  answer( *n:X#1 density_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 Valley  *t:Bound })({  answer( *n:X#1 valley'  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 traversed  *t:Bound })({  answer( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 with  *t:Bound })({  answer( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 of  *t:Bound })({  answer( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 of  *t:Bound })({  answer( *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 elevation  *t:Bound })({  answer( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 rivers  *t:Bound })({  answer( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 mountain  *t:Bound })({  answer( *n:X#1 mountain(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 population  *t:Bound })({  answer( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 point  *t:Bound })({  answer( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 point  *t:Bound })({  answer( *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 whose  *t:Bound })({  answer( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 smallest  *t:Bound })({  answer( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 state  *t:Bound })({  answer( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is the *n:X#1 state  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 ?  *t:Bound })({  answer( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 capital  *t:Bound })({  answer( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 capital ?  *t:Bound })({  answer( *n:X#1 capital( all  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 capital *n:X#2  *t:Bound })({  answer( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 with  *t:Bound })({  answer( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 of the  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 of *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 point  *t:Bound })({  answer( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 state  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 state with  *t:Bound })({  answer( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 state *n:X#2  *t:Bound })({  answer( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 the lowest  *t:Bound })({  answer( *n:X#1 lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  What is *n:X#1 the *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ What length is the })({ answer( len( }) weight 0.0
*n:X -> ({ What length is the Mississippi })({ answer( len( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  What length is the *n:X#1  *t:Bound })({  answer( len( riverid( *n:X#1  }) weight 0.0
*n:X -> ({ What cities })({ answer( city( }) weight 0.0
*n:X -> ({ What cities are })({ answer( city( loc_2( }) weight 0.0
*n:X -> ({ What cities are located in Pennsylvania ? })({ answer( city( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  What cities are located *n:X#1  *t:Bound })({  answer( city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ What cities in })({ answer( city( loc_2( }) weight 0.0
*n:X -> ({ What cities in California ? })({ answer( city( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  What cities in California *n:X#1  *t:Bound })({  answer( city( loc_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ What cities in Texas have the highest populations ? })({ answer( largest_one( population_1( city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  What cities in *n:X#1  *t:Bound })({  answer( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What cities in *n:X#1 ?  *t:Bound })({  answer( city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What cities *n:X#1  *t:Bound })({  answer( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What cities *n:X#1 California ?  *t:Bound })({  answer( city( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  What cities *n:X#1 California *n:X#2  *t:Bound })({  answer( city( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  What cities *n:X#1 located *n:X#2  *t:Bound })({  answer( city( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ What can you tell me about the })({ answer( }) weight 0.0
*n:X -> ({ What can you tell me about the population })({ answer( population_1( }) weight 0.0
*n:X -> ({ What major })({ answer( major( }) weight 0.0
*n:X -> ({ What major cities })({ answer( major( city( }) weight 0.0
*n:X -> ({ What major cities are })({ answer( major( city( loc_2( }) weight 0.0
*n:X -> ({ What major cities are located in Pennsylvania ? })({ answer( major( city( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  What major cities *n:X#1  *t:Bound })({  answer( major( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What major *n:X#1  *t:Bound })({  answer( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What major *n:X#1 are  *t:Bound })({  answer( major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What major *n:X#1 located *n:X#2  *t:Bound })({  answer( major( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ What city has the largest population })({ answer( largest_one( population_1( city( }) weight 0.0
*n:X -> ({ What city has the largest population ? })({ answer( largest_one( population_1( city( all }) weight 0.0
*n:X -> ({ What city has the most people })({ answer( largest_one( population_1( city( }) weight 0.0
*n:X -> ({ What city has the most people ? })({ answer( largest_one( population_1( city( all }) weight 0.0
*n:X -> ({ What city has the least population ? })({ answer( smallest_one( population_1( city( all }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 Alaska ?  *t:Bound })({  answer( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 Alaska *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 California ?  *t:Bound })({  answer( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 California *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 bordering  *t:Bound })({  answer( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 bordering Texas ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 bordering Texas *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 bordering *n:X#2  *t:Bound })({  answer( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 bordering *n:X#2 ?  *t:Bound })({  answer( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 are  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 are located *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 highest points  *t:Bound })({  answer( highest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 highest points *n:X#2  *t:Bound })({  answer( highest( place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 highest *n:X#2  *t:Bound })({  answer( highest( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 Texas ?  *t:Bound })({  answer( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 Texas *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 is the  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 is the Mississippi  *t:Bound })({  answer( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 is the largest  *t:Bound })({  answer( largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 is the *n:X#2  *t:Bound })({  answer( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 is the *n:X#2  *t:Bound })({  answer( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 states  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 states bordering  *t:Bound })({  answer( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 states bordering *n:X#2  *t:Bound })({  answer( *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 states that border  *t:Bound })({  answer( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 states *n:X#2  *t:Bound })({  answer( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 in  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 in California ?  *t:Bound })({  answer( *n:X#1 loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 in California *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 in Texas ?  *t:Bound })({  answer( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 in Texas *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 in *n:X#2  *t:Bound })({  answer( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 in *n:X#2 ?  *t:Bound })({  answer( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 cities  *t:Bound })({  answer( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 cities are  *t:Bound })({  answer( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 cities *n:X#2  *t:Bound })({  answer( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 located *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 capitals  *t:Bound })({  answer( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 capitals *n:X#2  *t:Bound })({  answer( capital( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 with  *t:Bound })({  answer( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 with the highest  *t:Bound })({  answer( *n:X#1 loc_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 with the *n:X#2  *t:Bound })({  answer( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 of Montana ?  *t:Bound })({  answer( *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 of *n:X#2 ?  *t:Bound })({  answer( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 rivers  *t:Bound })({  answer( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 rivers  *t:Bound })({  answer( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 rivers in  *t:Bound })({  answer( *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 rivers in *n:X#2  *t:Bound })({  answer( *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 rivers *n:X#2  *t:Bound })({  answer( river( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 rivers *n:X#2  *t:Bound })({  answer( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 that border  *t:Bound })({  answer( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 state  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 state with  *t:Bound })({  answer( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 state *n:X#2  *t:Bound })({  answer( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 the highest  *t:Bound })({  answer( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  What *n:X#1 the *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ bordering })({ next_to_2( }) weight 0.0
*n:X -> ({ bordering Arkansas ? })({ next_to_2( stateid( 'arkansas' }) weight 0.0
*n:Query -> ({ *t:Bound  bordering Arkansas *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'arkansas'  }) weight 0.0
*n:X -> ({ bordering Iowa ? })({ next_to_2( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  bordering Iowa *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ bordering Colorado ? })({ next_to_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  bordering Colorado *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'colorado'  }) weight 0.0
*n:X -> ({ bordering Georgia ? })({ next_to_2( stateid( 'georgia' }) weight 0.0
*n:Query -> ({ *t:Bound  bordering Georgia *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'georgia'  }) weight 0.0
*n:X -> ({ bordering Utah ? })({ next_to_2( stateid( 'utah' }) weight 0.0
*n:Query -> ({ *t:Bound  bordering Utah *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'utah'  }) weight 0.0
*n:X -> ({ bordering Texas ? })({ next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  bordering Texas *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ bordering Nebraska ? })({ next_to_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  bordering Nebraska *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'nebraska'  }) weight 0.0
*n:X -> ({ bordering Wyoming ? })({ next_to_2( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  bordering Wyoming *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'wyoming'  }) weight 0.0
*n:X -> ({ bordering Oklahoma ? })({ next_to_2( stateid( 'oklahoma' }) weight 0.0
*n:Query -> ({ *t:Bound  bordering Oklahoma *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'oklahoma'  }) weight 0.0
*n:X -> ({ bordering Ohio ? })({ next_to_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  bordering Ohio *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  bordering *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  bordering *n:X#1 ?  *t:Bound })({  next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ country })({ countryid( 'usa' }) weight 0.0
*n:X -> ({ populations })({ population_1( }) weight 0.0
*n:X -> ({ populations of })({ population_1( }) weight 0.0
*n:X -> ({ populations of states })({ population_1( state( }) weight 0.0
*n:X -> ({ populations of states through which })({ population_1( state( traverse_1( }) weight 0.0
*n:X -> ({ populations of states through which the Mississippi runs })({ population_1( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ populations of states through which the Mississippi river runs })({ population_1( state( traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ populations of states which border })({ population_1( state( next_to_2( }) weight 0.0
*n:X -> ({ populations of states which border Texas ? })({ population_1( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  populations of states which *n:X#1  *t:Bound })({  population_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of states *n:X#1  *t:Bound })({  population_1( state( *n:X#1  }) weight 0.0
*n:X -> ({ populations of all the major })({ population_1( major( }) weight 0.0
*n:X -> ({ populations of all the major cities })({ population_1( major( city( }) weight 0.0
*n:X -> ({ populations of all the major cities in })({ population_1( major( city( loc_2( }) weight 0.0
*n:X -> ({ populations of all the major cities in Montana ? })({ population_1( major( city( loc_2( stateid( 'montana' }) weight 0.0
*n:Query -> ({ *t:Bound  populations of all the *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:X -> ({ populations of the states })({ population_1( state( }) weight 0.0
*n:X -> ({ populations of the states through which })({ population_1( state( traverse_1( }) weight 0.0
*n:X -> ({ populations of the states through which the Mississippi runs })({ population_1( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ populations of the states through which the Mississippi river runs })({ population_1( state( traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  populations of the states *n:X#1  *t:Bound })({  population_1( state( *n:X#1  }) weight 0.0
*n:X -> ({ populations of the major cities })({ population_1( major( city( loc_2( }) weight 0.0
*n:X -> ({ populations of the major cities of Texas ? })({ population_1( major( city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  populations of the major *n:X#1  *t:Bound })({  population_1( major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of the *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of the *n:X#1  *t:Bound })({  population_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of the *n:X#1 cities  *t:Bound })({  population_1( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of *n:X#1 Texas ?  *t:Bound })({  population_1( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of *n:X#1 Texas *n:X#2  *t:Bound })({  population_1( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of *n:X#1 major cities  *t:Bound })({  population_1( major( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of *n:X#1 major *n:X#2  *t:Bound })({  population_1( major( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of *n:X#1 through which  *t:Bound })({  population_1( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of *n:X#1 which border  *t:Bound })({  population_1( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of *n:X#1 which *n:X#2  *t:Bound })({  population_1( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  populations of *n:X#1 the *n:X#2  *t:Bound })({  population_1( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ what })({ placeid( }) weight 0.0
*n:X -> ({ Albany })({ 'albany', }) weight 0.0
*n:X -> ({ Albany ? })({ 'albany', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Albany *n:X#1  *t:Bound })({  'albany', *n:X#1  }) weight 0.0
*n:X -> ({ In })({ loc_1( }) weight 0.0
*n:X -> ({ In what })({ loc_1( placeid( }) weight 0.0
*n:X -> ({ In what state })({ state( loc_1( placeid( }) weight 0.0
*n:X -> ({ In what state is })({ answer( state( loc_1( placeid( }) weight 0.0
*n:X -> ({ In what state is Mount })({ answer( state( loc_1( placeid( 'mount }) weight 0.0
*n:X -> ({ In what state is Mount McKinley })({ answer( state( loc_1( placeid( 'mount mckinley' }) weight 0.0
*n:Query -> ({ *t:Bound  In what state is *n:X#1  *t:Bound })({  answer( state( loc_1( placeid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  In what state *n:X#1  *t:Bound })({  *n:X#1 state( loc_1( placeid(  }) weight 0.0
*n:Query -> ({ *t:Bound  In what state *n:X#1 Mount  *t:Bound })({  *n:X#1 state( loc_1( placeid( 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  In what *n:X#1  *t:Bound })({  *n:X#1 loc_1( placeid(  }) weight 0.0
*n:Query -> ({ *t:Bound  In what *n:X#1 Mount  *t:Bound })({  *n:X#1 loc_1( placeid( 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  In what *n:X#1 Mount McKinley  *t:Bound })({  *n:X#1 loc_1( placeid( 'mount mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  In what *n:X#1 Mount *n:X#2  *t:Bound })({  *n:X#1 loc_1( placeid( 'mount *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  In what *n:X#1 is  *t:Bound })({  answer( *n:X#1 loc_1( placeid(  }) weight 0.0
*n:Query -> ({ *t:Bound  In what *n:X#1 is Mount  *t:Bound })({  answer( *n:X#1 loc_1( placeid( 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  In what *n:X#1 is *n:X#2  *t:Bound })({  answer( *n:X#1 loc_1( placeid( *n:X#2  }) weight 0.0
*n:X -> ({ In which })({ loc_1( }) weight 0.0
*n:X -> ({ In which state })({ state( loc_1( }) weight 0.0
*n:X -> ({ In which state is })({ answer( state( loc_1( cityid( }) weight 0.0
*n:X -> ({ In which state is Rochester })({ answer( state( loc_1( cityid( 'rochester', }) weight 0.0
*n:X -> ({ In which state is Rochester ? })({ answer( state( loc_1( cityid( 'rochester', _ }) weight 0.0
*n:Query -> ({ *t:Bound  In which state is *n:X#1  *t:Bound })({  answer( state( loc_1( cityid( *n:X#1  }) weight 0.0
*n:X -> ({ In which state does })({ answer( state( loc_1( }) weight 0.0
*n:X -> ({ In which state does the highest })({ answer( state( loc_1( highest( }) weight 0.0
*n:X -> ({ In which state does the highest point })({ answer( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ In which state does the highest point in })({ answer( state( loc_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ In which state does the highest point in USA })({ answer( state( loc_1( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  In which state *n:X#1  *t:Bound })({  *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  In which *n:X#1  *t:Bound })({  *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  In which *n:X#1 is  *t:Bound })({  answer( *n:X#1 loc_1( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  In which *n:X#1 is Rochester  *t:Bound })({  answer( *n:X#1 loc_1( cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  In which *n:X#1 is *n:X#2  *t:Bound })({  answer( *n:X#1 loc_1( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  In which *n:X#1 does  *t:Bound })({  answer( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  In which *n:X#1 the highest  *t:Bound })({  *n:X#1 loc_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  In which *n:X#1 the *n:X#2  *t:Bound })({  *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  In *n:X#1  *t:Bound })({  loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  In *n:X#1 state  *t:Bound })({  state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  In *n:X#1 state is  *t:Bound })({  answer( state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  In *n:X#1 state is Mount  *t:Bound })({  answer( state( loc_1( *n:X#1 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  In *n:X#1 state is *n:X#2  *t:Bound })({  answer( state( loc_1( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  In *n:X#1 state *n:X#2  *t:Bound })({  *n:X#2 state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  In *n:X#1 state *n:X#2 Mount  *t:Bound })({  *n:X#2 state( loc_1( *n:X#1 'mount  }) weight 0.0
*n:X -> ({ Island })({ island' }) weight 0.0
*n:X -> ({ Louisiana })({ 'louisiana' }) weight 0.0
*n:X -> ({ Louisiana ? })({ stateid( 'louisiana' }) weight 0.0
*n:Query -> ({ *t:Bound  Louisiana *n:X#1  *t:Bound })({  *n:X#1 'louisiana'  }) weight 0.0
*n:X -> ({ Mexico })({ mexico' }) weight 0.0
*n:X -> ({ Moines })({ moines', }) weight 0.0
*n:X -> ({ Moines ? })({ moines', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Moines *n:X#1  *t:Bound })({  moines', *n:X#1  }) weight 0.0
*n:X -> ({ Virginia })({ 'virginia' }) weight 0.0
*n:X -> ({ Virginia . })({ stateid( 'virginia' }) weight 0.0
*n:X -> ({ Virginia ? })({ stateid( 'virginia' }) weight 0.0
*n:X -> ({ Virginia runs ? })({ stateid( 'virginia' }) weight 0.0
*n:Query -> ({ *t:Bound  Virginia runs *n:X#1  *t:Bound })({  *n:X#1 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  Virginia *n:X#1  *t:Bound })({  *n:X#1 'virginia'  }) weight 0.0
*n:X -> ({ Wisconsin })({ 'wisconsin' }) weight 0.0
*n:X -> ({ Wisconsin ? })({ stateid( 'wisconsin' }) weight 0.0
*n:Query -> ({ *t:Bound  Wisconsin *n:X#1  *t:Bound })({  *n:X#1 'wisconsin'  }) weight 0.0
*n:X -> ({ and })({ , }) weight 0.0
*n:X -> ({ and border })({ , next_to_2( }) weight 0.0
*n:X -> ({ and border New Mexico ? })({ , next_to_2( stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  and border New Mexico *n:X#1  *t:Bound })({  , next_to_2( *n:X#1 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  and border New *n:X#1 ?  *t:Bound })({  , next_to_2( stateid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  and border *n:X#1  *t:Bound })({  , next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  and border *n:X#1 Mexico ?  *t:Bound })({  , next_to_2( stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  and border *n:X#1 Mexico *n:X#2  *t:Bound })({  , next_to_2( *n:X#2 *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  and border *n:X#1 ?  *t:Bound })({  , next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  and *n:X#1  *t:Bound })({  , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  and *n:X#1 New Mexico ?  *t:Bound })({  , *n:X#1 stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  and *n:X#1 New Mexico *n:X#2  *t:Bound })({  , *n:X#1 *n:X#2 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  and *n:X#1 New *n:X#2 ?  *t:Bound })({  , *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:X -> ({ borders })({ next_to_2( }) weight 0.0
*n:X -> ({ borders Texas ? })({ next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  borders Texas *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  borders *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  borders *n:X#1 ?  *t:Bound })({  next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ combined area of all })({ sum( area_1( }) weight 0.0
*n:X -> ({ combined area of all 50 states })({ sum( area_1( state( }) weight 0.0
*n:X -> ({ combined area of all 50 states ? })({ sum( area_1( state( all }) weight 0.0
*n:X -> ({ combined population of all })({ sum( population_1( }) weight 0.0
*n:X -> ({ combined population of all 50 states })({ sum( population_1( state( }) weight 0.0
*n:X -> ({ combined population of all 50 states ? })({ sum( population_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  combined *n:X#1 of all  *t:Bound })({  sum( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  combined *n:X#1 all  *t:Bound })({  sum( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  combined *n:X#1 all 50 states  *t:Bound })({  sum( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  combined *n:X#1 all 50 *n:X#2  *t:Bound })({  sum( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ in })({ cityid( }) weight 0.0
*n:X -> ({ in })({ loc_2( }) weight 0.0
*n:X -> ({ in Oregon ? })({ loc_2( stateid( 'oregon' }) weight 0.0
*n:Query -> ({ *t:Bound  in Oregon *n:X#1  *t:Bound })({  loc_2( *n:X#1 'oregon'  }) weight 0.0
*n:X -> ({ in Alaska ? })({ loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  in Alaska *n:X#1  *t:Bound })({  loc_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ in California . })({ loc_2( stateid( 'california' }) weight 0.0
*n:X -> ({ in California ? })({ loc_2( stateid( 'california' }) weight 0.0
*n:X -> ({ in California ? })({ stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  in California *n:X#1  *t:Bound })({  loc_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ in Arizona ? })({ loc_2( stateid( 'arizona' }) weight 0.0
*n:X -> ({ in Arizona ? })({ stateid( 'arizona' }) weight 0.0
*n:Query -> ({ *t:Bound  in Arizona *n:X#1  *t:Bound })({  loc_2( *n:X#1 'arizona'  }) weight 0.0
*n:X -> ({ in Delaware ? })({ loc_2( stateid( 'delaware' }) weight 0.0
*n:Query -> ({ *t:Bound  in Delaware *n:X#1  *t:Bound })({  loc_2( *n:X#1 'delaware'  }) weight 0.0
*n:X -> ({ in Louisiana ? })({ loc_2( stateid( 'louisiana' }) weight 0.0
*n:X -> ({ in Louisiana ? })({ stateid( 'louisiana' }) weight 0.0
*n:Query -> ({ *t:Bound  in Louisiana *n:X#1  *t:Bound })({  loc_2( *n:X#1 'louisiana'  }) weight 0.0
*n:X -> ({ in America })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ in Arkansas . })({ loc_2( stateid( 'arkansas' }) weight 0.0
*n:X -> ({ in Arkansas ? })({ loc_2( stateid( 'arkansas' }) weight 0.0
*n:Query -> ({ *t:Bound  in Arkansas *n:X#1  *t:Bound })({  loc_2( *n:X#1 'arkansas'  }) weight 0.0
*n:X -> ({ in Iowa ? })({ loc_2( stateid( 'iowa' }) weight 0.0
*n:X -> ({ in Iowa ? })({ stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  in Iowa *n:X#1  *t:Bound })({  loc_2( *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ in Alabama ? })({ loc_2( stateid( 'alabama' }) weight 0.0
*n:X -> ({ in Alabama ? })({ stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  in Alabama *n:X#1  *t:Bound })({  loc_2( *n:X#1 'alabama'  }) weight 0.0
*n:X -> ({ in Colorado . })({ loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ in Colorado ? })({ loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ in Colorado ? })({ stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  in Colorado *n:X#1  *t:Bound })({  loc_2( *n:X#1 'colorado'  }) weight 0.0
*n:X -> ({ in Georgia ? })({ loc_2( stateid( 'georgia' }) weight 0.0
*n:Query -> ({ *t:Bound  in Georgia *n:X#1  *t:Bound })({  loc_2( *n:X#1 'georgia'  }) weight 0.0
*n:X -> ({ in Hawaii ? })({ loc_2( stateid( 'hawaii' }) weight 0.0
*n:X -> ({ in Hawaii ? })({ stateid( 'hawaii' }) weight 0.0
*n:Query -> ({ *t:Bound  in Hawaii *n:X#1  *t:Bound })({  loc_2( *n:X#1 'hawaii'  }) weight 0.0
*n:X -> ({ in Rhode Island ? })({ loc_2( stateid( 'rhode island' }) weight 0.0
*n:X -> ({ in Rhode Island ? })({ stateid( 'rhode island' }) weight 0.0
*n:Query -> ({ *t:Bound  in Rhode Island *n:X#1  *t:Bound })({  loc_2( *n:X#1 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  in Rhode *n:X#1 ?  *t:Bound })({  loc_2( stateid( 'rhode *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in Rhode *n:X#1 ?  *t:Bound })({  stateid( 'rhode *n:X#1  }) weight 0.0
*n:X -> ({ in Boston })({ cityid( 'boston', }) weight 0.0
*n:X -> ({ in Boston ? })({ cityid( 'boston', _ }) weight 0.0
*n:Query -> ({ *t:Bound  in Boston *n:X#1  *t:Bound })({  cityid( 'boston', *n:X#1  }) weight 0.0
*n:X -> ({ in North Carolina ? })({ loc_2( stateid( 'north carolina' }) weight 0.0
*n:Query -> ({ *t:Bound  in North Carolina *n:X#1  *t:Bound })({  loc_2( *n:X#1 'north carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  in North *n:X#1 ?  *t:Bound })({  loc_2( stateid( 'north *n:X#1  }) weight 0.0
*n:X -> ({ in Virginia . })({ loc_2( stateid( 'virginia' }) weight 0.0
*n:X -> ({ in Virginia ? })({ loc_2( stateid( 'virginia' }) weight 0.0
*n:X -> ({ in Virginia runs ? })({ loc_2( stateid( 'virginia' }) weight 0.0
*n:Query -> ({ *t:Bound  in Virginia runs *n:X#1  *t:Bound })({  loc_2( *n:X#1 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  in Virginia *n:X#1  *t:Bound })({  loc_2( *n:X#1 'virginia'  }) weight 0.0
*n:X -> ({ in Florida . })({ loc_2( stateid( 'florida' }) weight 0.0
*n:X -> ({ in Florida ? })({ loc_2( stateid( 'florida' }) weight 0.0
*n:X -> ({ in Florida ? })({ stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  in Florida *n:X#1  *t:Bound })({  loc_2( *n:X#1 'florida'  }) weight 0.0
*n:X -> ({ in Wisconsin ? })({ loc_2( stateid( 'wisconsin' }) weight 0.0
*n:Query -> ({ *t:Bound  in Wisconsin *n:X#1  *t:Bound })({  loc_2( *n:X#1 'wisconsin'  }) weight 0.0
*n:X -> ({ in Maine ? })({ loc_2( stateid( 'maine' }) weight 0.0
*n:Query -> ({ *t:Bound  in Maine *n:X#1  *t:Bound })({  loc_2( *n:X#1 'maine'  }) weight 0.0
*n:X -> ({ in Kansas ? })({ loc_2( stateid( 'kansas' }) weight 0.0
*n:X -> ({ in Kansas ? })({ stateid( 'kansas' }) weight 0.0
*n:Query -> ({ *t:Bound  in Kansas *n:X#1  *t:Bound })({  loc_2( *n:X#1 'kansas'  }) weight 0.0
*n:X -> ({ in Utah ? })({ stateid( 'utah' }) weight 0.0
*n:X -> ({ in Texas })({ loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ in Texas . })({ loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ in Texas are longer than the Red })({ loc_2( stateid( 'texas' , longer( riverid( 'red' }) weight 0.0
*n:X -> ({ in Texas ? })({ loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ in Texas ? })({ stateid( 'texas' }) weight 0.0
*n:X -> ({ in Texas run ? })({ loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  in Texas run *n:X#1  *t:Bound })({  loc_2( *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  in Texas *n:X#1  *t:Bound })({  loc_2( stateid( 'texas' , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in Texas *n:X#1  *t:Bound })({  loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ in Montana ? })({ loc_2( stateid( 'montana' }) weight 0.0
*n:X -> ({ in Montana ? })({ stateid( 'montana' }) weight 0.0
*n:Query -> ({ *t:Bound  in Montana *n:X#1  *t:Bound })({  loc_2( *n:X#1 'montana'  }) weight 0.0
*n:X -> ({ in Illinois ? })({ loc_2( stateid( 'illinois' }) weight 0.0
*n:Query -> ({ *t:Bound  in Illinois *n:X#1  *t:Bound })({  loc_2( *n:X#1 'illinois'  }) weight 0.0
*n:X -> ({ in Massachusetts ? })({ loc_2( stateid( 'massachusetts' }) weight 0.0
*n:Query -> ({ *t:Bound  in Massachusetts *n:X#1  *t:Bound })({  loc_2( *n:X#1 'massachusetts'  }) weight 0.0
*n:X -> ({ in Washington ? })({ loc_2( stateid( 'washington' }) weight 0.0
*n:X -> ({ in Washington ? })({ stateid( 'washington' }) weight 0.0
*n:X -> ({ in Washington state ? })({ loc_2( state( stateid( 'washington' }) weight 0.0
*n:Query -> ({ *t:Bound  in Washington state *n:X#1  *t:Bound })({  loc_2( state( *n:X#1 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  in Washington *n:X#1  *t:Bound })({  loc_2( *n:X#1 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  in Washington *n:X#1 ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'washington'  }) weight 0.0
*n:X -> ({ in USA })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ in United })({ loc_2( countryid( }) weight 0.0
*n:X -> ({ in United States })({ loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  in United *n:X#1  *t:Bound })({  loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ in Pennsylvania ? })({ loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:X -> ({ in Pennsylvania ? })({ stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  in Pennsylvania *n:X#1  *t:Bound })({  loc_2( *n:X#1 'pennsylvania'  }) weight 0.0
*n:X -> ({ in Mississippi ? })({ loc_2( stateid( 'mississippi' }) weight 0.0
*n:X -> ({ in Mississippi ? })({ stateid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  in Mississippi *n:X#1  *t:Bound })({  loc_2( *n:X#1 'mississippi'  }) weight 0.0
*n:X -> ({ in Michigan . })({ loc_2( stateid( 'michigan' }) weight 0.0
*n:X -> ({ in Michigan ? })({ loc_2( stateid( 'michigan' }) weight 0.0
*n:Query -> ({ *t:Bound  in Michigan *n:X#1  *t:Bound })({  loc_2( *n:X#1 'michigan'  }) weight 0.0
*n:X -> ({ in New Mexico ? })({ loc_2( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ in New Mexico ? })({ stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  in New Mexico *n:X#1  *t:Bound })({  loc_2( *n:X#1 'new mexico'  }) weight 0.0
*n:X -> ({ in New Hampshire ? })({ stateid( 'new hampshire' }) weight 0.0
*n:X -> ({ in New York ? })({ loc_2( stateid( 'new york' }) weight 0.0
*n:X -> ({ in New York ? })({ stateid( 'new york' }) weight 0.0
*n:X -> ({ in New York state ? })({ loc_2( state( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  in New York state *n:X#1  *t:Bound })({  loc_2( state( *n:X#1 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  in New York *n:X#1  *t:Bound })({  loc_2( *n:X#1 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  in New York *n:X#1 ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  in New *n:X#1 ?  *t:Bound })({  loc_2( stateid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in New *n:X#1 ?  *t:Bound })({  stateid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in New *n:X#1 state ?  *t:Bound })({  loc_2( state( stateid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in New *n:X#1 state *n:X#2  *t:Bound })({  loc_2( state( *n:X#2 'new *n:X#1  }) weight 0.0
*n:X -> ({ in Nebraska ? })({ loc_2( stateid( 'nebraska' }) weight 0.0
*n:X -> ({ in Nebraska in meters ? })({ loc_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  in Nebraska *n:X#1  *t:Bound })({  loc_2( *n:X#1 'nebraska'  }) weight 0.0
*n:X -> ({ in Wyoming ? })({ loc_2( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  in Wyoming *n:X#1  *t:Bound })({  loc_2( *n:X#1 'wyoming'  }) weight 0.0
*n:X -> ({ in each state })({ loc_2( state( }) weight 0.0
*n:X -> ({ in each state whose })({ loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ in each state whose lowest point })({ loc_2( state( loc_1( place( }) weight 0.0
*n:X -> ({ in each state whose lowest point is sea })({ loc_2( state( loc_1( place( elevation_2( }) weight 0.0
*n:X -> ({ in each state whose lowest point is sea level })({ loc_2( state( loc_1( place( elevation_2( 0 }) weight 0.0
*n:Query -> ({ *t:Bound  in each state *n:X#1  *t:Bound })({  loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in each state *n:X#1 level  *t:Bound })({  loc_2( state( *n:X#1 0  }) weight 0.0
*n:Query -> ({ *t:Bound  in each *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in each *n:X#1 level  *t:Bound })({  loc_2( *n:X#1 0  }) weight 0.0
*n:Query -> ({ *t:Bound  in each *n:X#1 lowest point  *t:Bound })({  loc_2( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  in each *n:X#1 lowest *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in each *n:X#1 is sea  *t:Bound })({  loc_2( *n:X#1 elevation_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  in each *n:X#1 is *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in each *n:X#1 whose  *t:Bound })({  loc_2( *n:X#1 loc_1(  }) weight 0.0
*n:X -> ({ in Missouri ? })({ loc_2( stateid( 'missouri' }) weight 0.0
*n:X -> ({ in Missouri ? })({ stateid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  in Missouri *n:X#1  *t:Bound })({  loc_2( *n:X#1 'missouri'  }) weight 0.0
*n:X -> ({ in Oklahoma ? })({ loc_2( stateid( 'oklahoma' }) weight 0.0
*n:Query -> ({ *t:Bound  in Oklahoma *n:X#1  *t:Bound })({  loc_2( *n:X#1 'oklahoma'  }) weight 0.0
*n:X -> ({ in Nevada in meters ? })({ loc_2( stateid( 'nevada' }) weight 0.0
*n:X -> ({ in South Carolina ? })({ loc_2( stateid( 'south carolina' }) weight 0.0
*n:Query -> ({ *t:Bound  in South Carolina *n:X#1  *t:Bound })({  loc_2( *n:X#1 'south carolina'  }) weight 0.0
*n:X -> ({ in South Dakota ? })({ stateid( 'south dakota' }) weight 0.0
*n:Query -> ({ *t:Bound  in South *n:X#1 ?  *t:Bound })({  loc_2( stateid( 'south *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in South *n:X#1 ?  *t:Bound })({  stateid( 'south *n:X#1  }) weight 0.0
*n:X -> ({ in US })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ in Ohio ? })({ loc_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  in Ohio *n:X#1  *t:Bound })({  loc_2( *n:X#1 'ohio'  }) weight 0.0
*n:X -> ({ in states })({ loc_2( state( }) weight 0.0
*n:X -> ({ in states bordering })({ loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ in states bordering Georgia ? })({ loc_2( state( next_to_2( stateid( 'georgia' }) weight 0.0
*n:Query -> ({ *t:Bound  in states bordering Georgia *n:X#1  *t:Bound })({  loc_2( state( next_to_2( *n:X#1 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  in states bordering *n:X#1  *t:Bound })({  loc_2( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in states bordering *n:X#1 ?  *t:Bound })({  loc_2( state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ in states through which })({ loc_2( state( traverse_1( }) weight 0.0
*n:X -> ({ in states through which the Mississippi runs })({ loc_2( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ in states that border })({ loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ in states that border California ? })({ loc_2( state( next_to_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  in states that border *n:X#1  *t:Bound })({  loc_2( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in states *n:X#1  *t:Bound })({  loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in states *n:X#1 California ?  *t:Bound })({  loc_2( state( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  in states *n:X#1 California *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  in states *n:X#1 Georgia ?  *t:Bound })({  loc_2( state( *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  in states *n:X#1 Georgia *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  in states *n:X#1 the *n:X#2  *t:Bound })({  loc_2( state( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ in Vermont ? })({ loc_2( stateid( 'vermont' }) weight 0.0
*n:Query -> ({ *t:Bound  in Vermont *n:X#1  *t:Bound })({  loc_2( *n:X#1 'vermont'  }) weight 0.0
*n:X -> ({ in continental })({ loc_2( countryid( }) weight 0.0
*n:X -> ({ in continental US })({ loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  in continental *n:X#1  *t:Bound })({  loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ in a state })({ loc_2( state( }) weight 0.0
*n:X -> ({ in a state with a })({ loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ in a state with a river })({ loc_2( state( loc_1( river( }) weight 0.0
*n:X -> ({ in a state with a river ? })({ loc_2( state( loc_1( river( all }) weight 0.0
*n:X -> ({ in a state that borders })({ loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ in a state that borders Texas ? })({ loc_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  in a state *n:X#1  *t:Bound })({  loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in a *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in a *n:X#1 Texas ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  in a *n:X#1 Texas *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  in a *n:X#1 with a  *t:Bound })({  loc_2( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  in a *n:X#1 that borders  *t:Bound })({  loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:X -> ({ in smallest })({ loc_2( smallest( }) weight 0.0
*n:X -> ({ in smallest state })({ loc_2( smallest( state( }) weight 0.0
*n:X -> ({ in smallest state through which })({ loc_2( smallest( state( traverse_1( }) weight 0.0
*n:X -> ({ in smallest state through which the Mississippi runs })({ loc_2( smallest( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  in smallest state *n:X#1  *t:Bound })({  loc_2( smallest( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in smallest *n:X#1  *t:Bound })({  loc_2( smallest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in smallest *n:X#1 through which  *t:Bound })({  loc_2( smallest( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  in smallest *n:X#1 the *n:X#2  *t:Bound })({  loc_2( smallest( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ in the })({ loc_2( }) weight 0.0
*n:X -> ({ in the country })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ in the USA })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ in the United })({ loc_2( countryid( }) weight 0.0
*n:X -> ({ in the United States })({ loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  in the United *n:X#1  *t:Bound })({  loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ in the capital })({ capital( loc_2( }) weight 0.0
*n:X -> ({ in the capital of Georgia ? })({ capital( loc_2( stateid( 'georgia' }) weight 0.0
*n:X -> ({ in the capital of Texas ? })({ capital( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  in the capital *n:X#1  *t:Bound })({  capital( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ in the US })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ in the US does })({ loc_2( countryid( 'usa' ,traverse_1( }) weight 0.0
*n:X -> ({ in the US does the shortest })({ loc_2( countryid( 'usa' ,traverse_1( shortest( }) weight 0.0
*n:X -> ({ in the US does the shortest river })({ loc_2( countryid( 'usa' ,traverse_1( shortest( river( }) weight 0.0
*n:X -> ({ in the US does the shortest river run through ? })({ loc_2( countryid( 'usa' ,traverse_1( shortest( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  in the US *n:X#1  *t:Bound })({  loc_2( countryid( 'usa' *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in the US *n:X#1 river  *t:Bound })({  loc_2( countryid( 'usa' *n:X#1 river(  }) weight 0.0
*n:X -> ({ in the states })({ loc_2( state( }) weight 0.0
*n:X -> ({ in the states bordering })({ loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ in the states bordering Colorado ? })({ loc_2( state( next_to_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  in the states bordering *n:X#1  *t:Bound })({  loc_2( state( next_to_2( *n:X#1  }) weight 0.0
*n:X -> ({ in the states through which })({ loc_2( state( traverse_1( }) weight 0.0
*n:X -> ({ in the states through which the major })({ loc_2( state( traverse_1( major( }) weight 0.0
*n:X -> ({ in the states through which the major river })({ loc_2( state( traverse_1( major( river( }) weight 0.0
*n:X -> ({ in the states through which the major river in })({ loc_2( state( traverse_1( major( river( loc_2( }) weight 0.0
*n:X -> ({ in the states that border })({ loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ in the states that border Nebraska ? })({ loc_2( state( next_to_2( stateid( 'nebraska' }) weight 0.0
*n:X -> ({ in the states that border the largest })({ loc_2( state( next_to_2( largest( }) weight 0.0
*n:X -> ({ in the states that border the largest state })({ loc_2( state( next_to_2( largest( state( }) weight 0.0
*n:X -> ({ in the states that border the largest state ? })({ loc_2( state( next_to_2( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  in the states *n:X#1  *t:Bound })({  loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in the states *n:X#1 ?  *t:Bound })({  loc_2( state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  in the states *n:X#1 in  *t:Bound })({  loc_2( state( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the states *n:X#1 river  *t:Bound })({  loc_2( state( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the states *n:X#1 state  *t:Bound })({  loc_2( state( *n:X#1 state(  }) weight 0.0
*n:X -> ({ in the largest })({ loc_2( largest( }) weight 0.0
*n:X -> ({ in the largest state })({ loc_2( largest( state( }) weight 0.0
*n:X -> ({ in the largest state ? })({ loc_2( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  in the largest state *n:X#1  *t:Bound })({  loc_2( largest( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in the largest *n:X#1  *t:Bound })({  loc_2( largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in the largest *n:X#1 ?  *t:Bound })({  loc_2( largest( *n:X#1 all  }) weight 0.0
*n:X -> ({ in the smallest })({ loc_2( smallest( }) weight 0.0
*n:X -> ({ in the smallest state })({ loc_2( smallest( state( }) weight 0.0
*n:X -> ({ in the smallest state ? })({ loc_2( smallest( state( all }) weight 0.0
*n:X -> ({ in the smallest state in the })({ loc_2( smallest( state( loc_2( }) weight 0.0
*n:X -> ({ in the smallest state in the USA })({ loc_2( smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ in the smallest state in the US })({ loc_2( smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  in the smallest state *n:X#1  *t:Bound })({  loc_2( smallest( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in the smallest *n:X#1  *t:Bound })({  loc_2( smallest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in the smallest *n:X#1 ?  *t:Bound })({  loc_2( smallest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  in the smallest *n:X#1 USA  *t:Bound })({  loc_2( smallest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  in the smallest *n:X#1 US  *t:Bound })({  loc_2( smallest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ in the state })({ loc_2( state( }) weight 0.0
*n:X -> ({ in the state with })({ loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ in the state with capital })({ loc_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ in the state with capital Des })({ loc_2( state( loc_1( capital( cityid( 'des }) weight 0.0
*n:X -> ({ in the state with capital Des Moines })({ loc_2( state( loc_1( capital( cityid( 'des moines', }) weight 0.0
*n:X -> ({ in the state with capital Des Moines ? })({ loc_2( state( loc_1( capital( cityid( 'des moines', _ }) weight 0.0
*n:X -> ({ in the state with capital Austin })({ loc_2( state( loc_1( capital( cityid( 'austin', }) weight 0.0
*n:X -> ({ in the state with capital Austin ? })({ loc_2( state( loc_1( capital( cityid( 'austin', _ }) weight 0.0
*n:X -> ({ in the state with the highest })({ loc_2( state( loc_1( highest( }) weight 0.0
*n:X -> ({ in the state with the highest point })({ loc_2( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ in the state with the highest point ? })({ loc_2( state( loc_1( highest( place( all }) weight 0.0
*n:X -> ({ in the state with the capital })({ loc_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ in the state with the capital Des })({ loc_2( state( loc_1( capital( cityid( 'des }) weight 0.0
*n:X -> ({ in the state with the capital Des Moines })({ loc_2( state( loc_1( capital( cityid( 'des moines', }) weight 0.0
*n:X -> ({ in the state with the capital Des Moines ? })({ loc_2( state( loc_1( capital( cityid( 'des moines', _ }) weight 0.0
*n:X -> ({ in the state with the largest area })({ loc_2( largest_one( area_1( state( }) weight 0.0
*n:X -> ({ in the state with the largest area ? })({ loc_2( largest_one( area_1( state( all }) weight 0.0
*n:X -> ({ in the state with the most })({ loc_2( most( state( }) weight 0.0
*n:X -> ({ in the state with the most })({ loc_2( most( state( loc_1( }) weight 0.0
*n:X -> ({ in the state with the most major })({ loc_2( most( state( loc_1( major( }) weight 0.0
*n:X -> ({ in the state with the most major cities })({ loc_2( most( state( loc_1( major( city( }) weight 0.0
*n:X -> ({ in the state with the most major cities ? })({ loc_2( most( state( loc_1( major( city( all }) weight 0.0
*n:X -> ({ in the state with the most rivers })({ loc_2( most( state( traverse_1( river( }) weight 0.0
*n:X -> ({ in the state with the most rivers ? })({ loc_2( most( state( traverse_1( river( all }) weight 0.0
*n:X -> ({ in the state with the smallest population })({ loc_2( smallest_one( population_1( state( }) weight 0.0
*n:X -> ({ in the state with the smallest population ? })({ loc_2( smallest_one( population_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  in the state with *n:X#1  *t:Bound })({  loc_2( state( loc_1( *n:X#1  }) weight 0.0
*n:X -> ({ in the state of Oregon ? })({ loc_2( state( stateid( 'oregon' }) weight 0.0
*n:X -> ({ in the state of California ? })({ loc_2( state( stateid( 'california' }) weight 0.0
*n:X -> ({ in the state of Indiana ? })({ loc_2( state( stateid( 'indiana' }) weight 0.0
*n:X -> ({ in the state of Texas ? })({ loc_2( state( stateid( 'texas' }) weight 0.0
*n:X -> ({ in the state of Nevada ? })({ state( stateid( 'nevada' }) weight 0.0
*n:Query -> ({ *t:Bound  in the state *n:X#1  *t:Bound })({  loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in the state *n:X#1 Des  *t:Bound })({  loc_2( state( *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  in the state *n:X#1 ?  *t:Bound })({  loc_2( state( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  in the state *n:X#1 ?  *t:Bound })({  loc_2( state( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  in the state *n:X#1 Moines  *t:Bound })({  loc_2( state( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  in the state *n:X#1 Austin  *t:Bound })({  loc_2( state( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  in the state *n:X#1 capital  *t:Bound })({  loc_2( state( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the state *n:X#1 point  *t:Bound })({  loc_2( state( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 States  *t:Bound })({  loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Des  *t:Bound })({  loc_2( *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Des Moines  *t:Bound })({  loc_2( *n:X#1 cityid( 'des moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Des *n:X#2  *t:Bound })({  loc_2( *n:X#1 cityid( 'des *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 bordering  *t:Bound })({  loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 bordering *n:X#2  *t:Bound })({  loc_2( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Colorado ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Colorado *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 ?  *t:Bound })({  loc_2( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 ?  *t:Bound })({  loc_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Moines  *t:Bound })({  loc_2( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Moines ?  *t:Bound })({  loc_2( *n:X#1 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Moines *n:X#2  *t:Bound })({  loc_2( *n:X#1 moines', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Austin  *t:Bound })({  loc_2( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Austin ?  *t:Bound })({  loc_2( *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Austin *n:X#2  *t:Bound })({  loc_2( *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 USA  *t:Bound })({  loc_2( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 capital  *t:Bound })({  loc_2( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 capital Des  *t:Bound })({  loc_2( *n:X#1 capital( cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 capital Austin  *t:Bound })({  loc_2( *n:X#1 capital( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 capital *n:X#2  *t:Bound })({  loc_2( *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Nebraska ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 Nebraska *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 US  *t:Bound })({  loc_2( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 in  *t:Bound })({  loc_2( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 in the  *t:Bound })({  loc_2( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 does  *t:Bound })({  loc_2( *n:X#1 ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 river  *t:Bound })({  loc_2( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 river in  *t:Bound })({  loc_2( *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 river *n:X#2  *t:Bound })({  loc_2( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 through which  *t:Bound })({  loc_2( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 with  *t:Bound })({  loc_2( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 with capital  *t:Bound })({  loc_2( *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 with *n:X#2  *t:Bound })({  loc_2( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 that border  *t:Bound })({  loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 point  *t:Bound })({  loc_2( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 point ?  *t:Bound })({  loc_2( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 point *n:X#2  *t:Bound })({  loc_2( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 state  *t:Bound })({  loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 state ?  *t:Bound })({  loc_2( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 state *n:X#2  *t:Bound })({  loc_2( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 the highest  *t:Bound })({  loc_2( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 the capital  *t:Bound })({  loc_2( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 the largest  *t:Bound })({  loc_2( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 the most  *t:Bound })({  loc_2( most( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 the major  *t:Bound })({  loc_2( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 the shortest  *t:Bound })({  loc_2( *n:X#1 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 the *n:X#2  *t:Bound })({  loc_2( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in the *n:X#1 the *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1  *t:Bound })({  cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1  *t:Bound })({  loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 States  *t:Bound })({  loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Island ?  *t:Bound })({  loc_2( stateid( *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Island ?  *t:Bound })({  stateid( *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Island *n:X#2  *t:Bound })({  loc_2( *n:X#2 *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 California ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 California *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 .  *t:Bound })({  loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 bordering  *t:Bound })({  loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 bordering Georgia ?  *t:Bound })({  loc_2( *n:X#1 next_to_2( stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 bordering Georgia *n:X#2  *t:Bound })({  loc_2( *n:X#1 next_to_2( *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 bordering *n:X#2  *t:Bound })({  loc_2( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 bordering *n:X#2 ?  *t:Bound })({  loc_2( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Mexico ?  *t:Bound })({  loc_2( stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Mexico ?  *t:Bound })({  stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Mexico *n:X#2  *t:Bound })({  loc_2( *n:X#2 *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Carolina ?  *t:Bound })({  loc_2( stateid( *n:X#1 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Carolina *n:X#2  *t:Bound })({  loc_2( *n:X#2 *n:X#1 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Georgia ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Georgia *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 ?  *t:Bound })({  cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 ?  *t:Bound })({  loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 ?  *t:Bound })({  loc_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 ?  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Dakota ?  *t:Bound })({  stateid( *n:X#1 dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 Hampshire ?  *t:Bound })({  stateid( *n:X#1 hampshire'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 US  *t:Bound })({  loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 runs ?  *t:Bound })({  loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 runs *n:X#2  *t:Bound })({  loc_2( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 river  *t:Bound })({  loc_2( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 river ?  *t:Bound })({  loc_2( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 river *n:X#2  *t:Bound })({  loc_2( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 through which  *t:Bound })({  loc_2( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 York ?  *t:Bound })({  loc_2( stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 York ?  *t:Bound })({  stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 York state ?  *t:Bound })({  loc_2( state( stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 York state *n:X#2  *t:Bound })({  loc_2( state( *n:X#2 *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 York *n:X#2  *t:Bound })({  loc_2( *n:X#2 *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 York *n:X#2 ?  *t:Bound })({  loc_2( *n:X#2 stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 run ?  *t:Bound })({  loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 run *n:X#2  *t:Bound })({  loc_2( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 that border  *t:Bound })({  loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 that border *n:X#2  *t:Bound })({  loc_2( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 state  *t:Bound })({  loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 state ?  *t:Bound })({  loc_2( state( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 state through which  *t:Bound })({  loc_2( *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 state *n:X#2  *t:Bound })({  loc_2( state( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 state *n:X#2  *t:Bound })({  loc_2( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 the Mississippi runs  *t:Bound })({  loc_2( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 the Mississippi *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 the *n:X#2  *t:Bound })({  loc_2( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  in *n:X#1 the *n:X#2 runs  *t:Bound })({  loc_2( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:X -> ({ populous })({ population_1( }) weight 0.0
*n:X -> ({ populous city })({ population_1( city( }) weight 0.0
*n:X -> ({ populous city ? })({ population_1( city( all }) weight 0.0
*n:X -> ({ populous city in })({ population_1( city( loc_2( }) weight 0.0
*n:X -> ({ populous city in Texas ? })({ population_1( city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  populous city in Texas *n:X#1  *t:Bound })({  population_1( city( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ populous city in Wyoming ? })({ population_1( city( loc_2( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  populous city in Wyoming *n:X#1  *t:Bound })({  population_1( city( loc_2( *n:X#1 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous city in *n:X#1  *t:Bound })({  population_1( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populous city in *n:X#1 ?  *t:Bound })({  population_1( city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populous city *n:X#1  *t:Bound })({  population_1( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populous city *n:X#1 Texas ?  *t:Bound })({  population_1( city( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous city *n:X#1 Texas *n:X#2  *t:Bound })({  population_1( city( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous city *n:X#1 Wyoming ?  *t:Bound })({  population_1( city( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous city *n:X#1 Wyoming *n:X#2  *t:Bound })({  population_1( city( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:X -> ({ populous state })({ population_1( state( }) weight 0.0
*n:X -> ({ populous state ? })({ population_1( state( all }) weight 0.0
*n:X -> ({ populous state in the })({ population_1( state( loc_2( }) weight 0.0
*n:X -> ({ populous state in the US })({ population_1( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  populous state in the *n:X#1  *t:Bound })({  population_1( state( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ populous state through which })({ population_1( state( traverse_1( }) weight 0.0
*n:X -> ({ populous state through which the Mississippi runs })({ population_1( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  populous state *n:X#1  *t:Bound })({  population_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populous state *n:X#1 US  *t:Bound })({  population_1( state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous state *n:X#1 the *n:X#2  *t:Bound })({  population_1( state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 ?  *t:Bound })({  population_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 Texas ?  *t:Bound })({  population_1( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 Texas *n:X#2  *t:Bound })({  population_1( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 Wyoming ?  *t:Bound })({  population_1( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 Wyoming *n:X#2  *t:Bound })({  population_1( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 US  *t:Bound })({  population_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 in  *t:Bound })({  population_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 in Texas ?  *t:Bound })({  population_1( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 in Texas *n:X#2  *t:Bound })({  population_1( *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 in Wyoming ?  *t:Bound })({  population_1( *n:X#1 loc_2( stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 in Wyoming *n:X#2  *t:Bound })({  population_1( *n:X#1 loc_2( *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 in the  *t:Bound })({  population_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 in the US  *t:Bound })({  population_1( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 in the *n:X#2  *t:Bound })({  population_1( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 in *n:X#2  *t:Bound })({  population_1( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 in *n:X#2 ?  *t:Bound })({  population_1( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 through which  *t:Bound })({  population_1( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 the Mississippi runs  *t:Bound })({  population_1( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 the Mississippi *n:X#2  *t:Bound })({  population_1( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 the *n:X#2  *t:Bound })({  population_1( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  populous *n:X#1 the *n:X#2 runs  *t:Bound })({  population_1( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:X -> ({ Denver })({ 'denver', }) weight 0.0
*n:X -> ({ Denver ? })({ 'denver', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Denver *n:X#1  *t:Bound })({  'denver', *n:X#1  }) weight 0.0
*n:X -> ({ Maryland })({ 'maryland' }) weight 0.0
*n:X -> ({ McKinley })({ mckinley' }) weight 0.0
*n:X -> ({ Rio })({ 'rio }) weight 0.0
*n:X -> ({ Rio Grande })({ 'rio grande' }) weight 0.0
*n:X -> ({ Rio Grande runs })({ riverid( 'rio grande' }) weight 0.0
*n:X -> ({ Rio Grande runs through })({ traverse_1( riverid( 'rio grande' }) weight 0.0
*n:Query -> ({ *t:Bound  Rio Grande runs *n:X#1  *t:Bound })({  *n:X#1 riverid( 'rio grande'  }) weight 0.0
*n:X -> ({ Rio Grande river })({ river( riverid( 'rio grande' }) weight 0.0
*n:Query -> ({ *t:Bound  Rio Grande *n:X#1  *t:Bound })({  *n:X#1 'rio grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  Rio Grande *n:X#1  *t:Bound })({  *n:X#1 riverid( 'rio grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  Rio Grande *n:X#1 through  *t:Bound })({  traverse_1( *n:X#1 'rio grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  Rio *n:X#1  *t:Bound })({  'rio *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Rio *n:X#1 runs  *t:Bound })({  riverid( 'rio *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Rio *n:X#1 runs through  *t:Bound })({  traverse_1( riverid( 'rio *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Rio *n:X#1 runs *n:X#2  *t:Bound })({  *n:X#2 riverid( 'rio *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Rio *n:X#1 river  *t:Bound })({  river( riverid( 'rio *n:X#1  }) weight 0.0
*n:X -> ({ Seattle })({ 'seattle', }) weight 0.0
*n:X -> ({ Seattle ? })({ 'seattle', _ }) weight 0.0
*n:X -> ({ Seattle Washington })({ 'seattle', 'wa' }) weight 0.0
*n:Query -> ({ *t:Bound  Seattle *n:X#1  *t:Bound })({  'seattle', *n:X#1  }) weight 0.0
*n:X -> ({ Utah })({ 'utah' }) weight 0.0
*n:X -> ({ Utah . })({ stateid( 'utah' }) weight 0.0
*n:X -> ({ Utah ? })({ stateid( 'utah' }) weight 0.0
*n:Query -> ({ *t:Bound  Utah *n:X#1  *t:Bound })({  *n:X#1 'utah'  }) weight 0.0
*n:X -> ({ capital })({ capital( }) weight 0.0
*n:X -> ({ capital Albany })({ capital( cityid( 'albany', }) weight 0.0
*n:X -> ({ capital Albany ? })({ capital( cityid( 'albany', _ }) weight 0.0
*n:Query -> ({ *t:Bound  capital Albany *n:X#1  *t:Bound })({  capital( cityid( 'albany', *n:X#1  }) weight 0.0
*n:X -> ({ capital Des })({ capital( cityid( 'des }) weight 0.0
*n:X -> ({ capital Des Moines })({ capital( cityid( 'des moines', }) weight 0.0
*n:X -> ({ capital Des Moines ? })({ capital( cityid( 'des moines', _ }) weight 0.0
*n:Query -> ({ *t:Bound  capital Des Moines *n:X#1  *t:Bound })({  capital( cityid( 'des moines', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital Des *n:X#1  *t:Bound })({  capital( cityid( 'des *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital Des *n:X#1 ?  *t:Bound })({  capital( cityid( 'des *n:X#1 _  }) weight 0.0
*n:X -> ({ capital ? })({ capital( all }) weight 0.0
*n:X -> ({ capital Austin })({ capital( cityid( 'austin', }) weight 0.0
*n:X -> ({ capital Austin ? })({ capital( cityid( 'austin', _ }) weight 0.0
*n:Query -> ({ *t:Bound  capital Austin *n:X#1  *t:Bound })({  capital( cityid( 'austin', *n:X#1  }) weight 0.0
*n:X -> ({ capital is })({ capital( cityid( }) weight 0.0
*n:X -> ({ capital is Boston })({ capital( cityid( 'boston', }) weight 0.0
*n:X -> ({ capital is Boston ? })({ capital( cityid( 'boston', _ }) weight 0.0
*n:Query -> ({ *t:Bound  capital is Boston *n:X#1  *t:Bound })({  capital( cityid( 'boston', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital is *n:X#1  *t:Bound })({  capital( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital is *n:X#1 ?  *t:Bound })({  capital( cityid( *n:X#1 _  }) weight 0.0
*n:X -> ({ capital in the })({ capital( loc_2( }) weight 0.0
*n:X -> ({ capital in the USA })({ capital( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  capital in the *n:X#1  *t:Bound })({  capital( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ capital cities })({ capital( city( }) weight 0.0
*n:X -> ({ capital cities of the })({ capital( city( loc_2( }) weight 0.0
*n:X -> ({ capital cities of the states })({ capital( city( loc_2( state( }) weight 0.0
*n:X -> ({ capital cities of the states which border })({ capital( city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ capital cities of the states which border Texas ? })({ capital( city( loc_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  capital cities of the *n:X#1  *t:Bound })({  capital( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital cities of *n:X#1  *t:Bound })({  capital( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital cities of *n:X#1 states  *t:Bound })({  capital( city( *n:X#1 state(  }) weight 0.0
*n:X -> ({ capital city })({ capital( city( }) weight 0.0
*n:X -> ({ capital city in })({ capital( city( loc_2( }) weight 0.0
*n:X -> ({ capital city in Texas ? })({ capital( city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  capital city in Texas *n:X#1  *t:Bound })({  capital( city( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ capital city in the })({ capital( city( loc_2( }) weight 0.0
*n:X -> ({ capital city in the USA })({ capital( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ capital city in the US })({ capital( city( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  capital city in the *n:X#1  *t:Bound })({  capital( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital city in *n:X#1  *t:Bound })({  capital( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital city in *n:X#1 ?  *t:Bound })({  capital( city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ capital city of the })({ capital( city( loc_2( }) weight 0.0
*n:X -> ({ capital city of the largest })({ capital( city( loc_2( largest( }) weight 0.0
*n:X -> ({ capital city of the largest state })({ capital( city( loc_2( largest( state( }) weight 0.0
*n:X -> ({ capital city of the largest state in the })({ capital( city( loc_2( largest( state( loc_2( }) weight 0.0
*n:X -> ({ capital city of the largest state in the US })({ capital( city( loc_2( largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  capital city of the *n:X#1  *t:Bound })({  capital( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital city of *n:X#1  *t:Bound })({  capital( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital city of *n:X#1 US  *t:Bound })({  capital( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital city of *n:X#1 largest  *t:Bound })({  capital( city( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital city of *n:X#1 state  *t:Bound })({  capital( city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital city *n:X#1  *t:Bound })({  capital( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital city *n:X#1 Texas ?  *t:Bound })({  capital( city( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital city *n:X#1 Texas *n:X#2  *t:Bound })({  capital( city( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital city *n:X#1 USA  *t:Bound })({  capital( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital city *n:X#1 US  *t:Bound })({  capital( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ capital of })({ capital( cityid( }) weight 0.0
*n:X -> ({ capital of Iowa ? })({ capital( loc_2( stateid( 'iowa' }) weight 0.0
*n:X -> ({ capital of which })({ loc_1( capital( cityid( }) weight 0.0
*n:X -> ({ capital of which state })({ state( loc_1( capital( cityid( }) weight 0.0
*n:Query -> ({ *t:Bound  capital of which *n:X#1  *t:Bound })({  *n:X#1 loc_1( capital( cityid(  }) weight 0.0
*n:X -> ({ capital of the })({ capital( loc_2( }) weight 0.0
*n:X -> ({ capital of the Alabama state ? })({ capital( loc_2( state( stateid( 'alabama' }) weight 0.0
*n:X -> ({ capital of the Florida state ? })({ capital( loc_2( state( stateid( 'florida' }) weight 0.0
*n:X -> ({ capital of the largest })({ capital( loc_2( largest( }) weight 0.0
*n:X -> ({ capital of the largest state })({ capital( loc_2( largest( state( }) weight 0.0
*n:X -> ({ capital of the largest state ? })({ capital( loc_2( largest( state( all }) weight 0.0
*n:X -> ({ capital of the largest state through which })({ capital( loc_2( largest( state( traverse_1( }) weight 0.0
*n:X -> ({ capital of the largest state through which the Mississippi runs })({ capital( loc_2( largest( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  capital of the largest *n:X#1  *t:Bound })({  capital( loc_2( largest( *n:X#1  }) weight 0.0
*n:X -> ({ capital of the smallest })({ capital( loc_2( smallest( }) weight 0.0
*n:X -> ({ capital of the smallest state })({ capital( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ capital of the smallest state ? })({ capital( loc_2( smallest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  capital of the smallest *n:X#1  *t:Bound })({  capital( loc_2( smallest( *n:X#1  }) weight 0.0
*n:X -> ({ capital of the state })({ capital( loc_2( state( }) weight 0.0
*n:X -> ({ capital of the state Texas ? })({ capital( loc_2( state( stateid( 'texas' }) weight 0.0
*n:X -> ({ capital of the state with })({ capital( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ capital of the state with the highest })({ capital( loc_2( state( loc_1( highest( }) weight 0.0
*n:X -> ({ capital of the state with the highest elevation })({ capital( loc_2( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ capital of the state with the highest elevation ? })({ capital( loc_2( state( loc_1( highest( place( all }) weight 0.0
*n:X -> ({ capital of the state with the highest point })({ capital( loc_2( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ capital of the state with the highest point ? })({ capital( loc_2( state( loc_1( highest( place( all }) weight 0.0
*n:X -> ({ capital of the state with the longest })({ capital( loc_2( state( loc_1( longest( }) weight 0.0
*n:X -> ({ capital of the state with the longest river })({ capital( loc_2( state( loc_1( longest( river( }) weight 0.0
*n:X -> ({ capital of the state with the longest river ? })({ capital( loc_2( state( loc_1( longest( river( all }) weight 0.0
*n:X -> ({ capital of the state with the lowest })({ capital( loc_2( state( loc_1( lowest( }) weight 0.0
*n:X -> ({ capital of the state with the lowest point })({ capital( loc_2( state( loc_1( lowest( place( }) weight 0.0
*n:X -> ({ capital of the state with the lowest point ? })({ capital( loc_2( state( loc_1( lowest( place( all }) weight 0.0
*n:X -> ({ capital of the state with the largest population })({ capital( loc_2( largest_one( population_1( state( }) weight 0.0
*n:X -> ({ capital of the state with the largest population ? })({ capital( loc_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ capital of the state with the largest population density })({ capital( loc_2( largest_one( density_1( state( }) weight 0.0
*n:X -> ({ capital of the state with the largest population density ? })({ capital( loc_2( largest_one( density_1( state( all }) weight 0.0
*n:X -> ({ capital of the state with the most })({ capital( loc_2( largest_one( population_1( state( }) weight 0.0
*n:X -> ({ capital of the state with the most inhabitants ? })({ capital( loc_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ capital of the state that borders })({ capital( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ capital of the state that borders the most })({ capital( loc_2( most( state( next_to_2( }) weight 0.0
*n:X -> ({ capital of the state that borders the most states })({ capital( loc_2( most( state( next_to_2( state( }) weight 0.0
*n:X -> ({ capital of the state that borders the most states ? })({ capital( loc_2( most( state( next_to_2( state( all }) weight 0.0
*n:X -> ({ capital of the state that borders the state })({ capital( loc_2( state( next_to_2( state( }) weight 0.0
*n:X -> ({ capital of the state that borders the state that borders })({ capital( loc_2( state( next_to_2( state( next_to_2( }) weight 0.0
*n:Query -> ({ *t:Bound  capital of the state *n:X#1  *t:Bound })({  capital( loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of the *n:X#1  *t:Bound })({  capital( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of the *n:X#1 ?  *t:Bound })({  capital( loc_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of the *n:X#1 states  *t:Bound })({  capital( loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of the *n:X#1 river  *t:Bound })({  capital( loc_2( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of the *n:X#1 with  *t:Bound })({  capital( loc_2( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of the *n:X#1 elevation  *t:Bound })({  capital( loc_2( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of the *n:X#1 point  *t:Bound })({  capital( loc_2( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of the *n:X#1 state  *t:Bound })({  capital( loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1  *t:Bound })({  capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1  *t:Bound })({  *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 ?  *t:Bound })({  capital( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 ?  *t:Bound })({  capital( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 Texas ?  *t:Bound })({  capital( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 states  *t:Bound })({  capital( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 states ?  *t:Bound })({  capital( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 states *n:X#2  *t:Bound })({  capital( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 largest  *t:Bound })({  capital( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 largest state  *t:Bound })({  capital( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 largest *n:X#2  *t:Bound })({  capital( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 river  *t:Bound })({  capital( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 river ?  *t:Bound })({  capital( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 river *n:X#2  *t:Bound })({  capital( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 through which  *t:Bound })({  capital( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 with  *t:Bound })({  capital( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 elevation  *t:Bound })({  capital( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 elevation ?  *t:Bound })({  capital( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 elevation *n:X#2  *t:Bound })({  capital( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 that borders  *t:Bound })({  capital( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 that *n:X#2  *t:Bound })({  capital( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 point  *t:Bound })({  capital( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 point ?  *t:Bound })({  capital( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 point *n:X#2  *t:Bound })({  capital( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 smallest  *t:Bound })({  capital( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 smallest state  *t:Bound })({  capital( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 smallest *n:X#2  *t:Bound })({  capital( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 state  *t:Bound })({  capital( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 state  *t:Bound })({  state( *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 state ?  *t:Bound })({  capital( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 state with  *t:Bound })({  capital( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 state *n:X#2  *t:Bound })({  capital( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 the highest  *t:Bound })({  capital( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 the longest  *t:Bound })({  capital( *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 the lowest  *t:Bound })({  capital( *n:X#1 lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 the state  *t:Bound })({  capital( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital of *n:X#1 the *n:X#2  *t:Bound })({  capital( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1  *t:Bound })({  capital( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1  *t:Bound })({  capital( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1  *t:Bound })({  capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 ?  *t:Bound })({  capital( cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 ?  *t:Bound })({  capital( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 Moines  *t:Bound })({  capital( cityid( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 Moines ?  *t:Bound })({  capital( cityid( *n:X#1 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 Moines *n:X#2  *t:Bound })({  capital( cityid( *n:X#1 moines', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 Boston  *t:Bound })({  capital( *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 Boston ?  *t:Bound })({  capital( *n:X#1 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 Boston *n:X#2  *t:Bound })({  capital( *n:X#1 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 Texas ?  *t:Bound })({  capital( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 Texas *n:X#2  *t:Bound })({  capital( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 USA  *t:Bound })({  capital( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 US  *t:Bound })({  capital( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 states  *t:Bound })({  capital( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 states which border  *t:Bound })({  capital( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 states which *n:X#2  *t:Bound })({  capital( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 in  *t:Bound })({  capital( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 in Texas ?  *t:Bound })({  capital( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 in Texas *n:X#2  *t:Bound })({  capital( *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 in the  *t:Bound })({  capital( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 in the USA  *t:Bound })({  capital( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 in the US  *t:Bound })({  capital( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 in the *n:X#2  *t:Bound })({  capital( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 in *n:X#2  *t:Bound })({  capital( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 in *n:X#2 ?  *t:Bound })({  capital( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 largest  *t:Bound })({  capital( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 largest state  *t:Bound })({  capital( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 largest state *n:X#2  *t:Bound })({  capital( *n:X#1 largest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 largest *n:X#2  *t:Bound })({  capital( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 inhabitants ?  *t:Bound })({  capital( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 inhabitants *n:X#2  *t:Bound })({  capital( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 of the  *t:Bound })({  capital( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 of the states  *t:Bound })({  capital( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 of the largest  *t:Bound })({  capital( *n:X#1 loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 of the *n:X#2  *t:Bound })({  capital( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 of *n:X#2  *t:Bound })({  capital( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 of *n:X#2 US  *t:Bound })({  capital( *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 of *n:X#2 states  *t:Bound })({  capital( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 of *n:X#2 largest  *t:Bound })({  capital( *n:X#1 *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 of *n:X#2 state  *t:Bound })({  capital( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 which  *t:Bound })({  loc_1( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 which border  *t:Bound })({  capital( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 which border *n:X#2  *t:Bound })({  capital( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 which state  *t:Bound })({  state( loc_1( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 which *n:X#2  *t:Bound })({  capital( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 which *n:X#2  *t:Bound })({  *n:X#2 loc_1( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 state  *t:Bound })({  capital( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 state in the  *t:Bound })({  capital( *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  capital *n:X#1 state *n:X#2  *t:Bound })({  capital( *n:X#1 state( *n:X#2  }) weight 0.0
*n:X -> ({ density })({ density_1( }) weight 0.0
*n:X -> ({ density of Texas ? })({ density_1( stateid( 'texas' }) weight 0.0
*n:X -> ({ density of the New York ? })({ density_1( stateid( 'new york' }) weight 0.0
*n:X -> ({ density of the state with the smallest population })({ density_1( smallest_one( population_1( state( }) weight 0.0
*n:X -> ({ density of the state with the smallest population ? })({ density_1( smallest_one( population_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  density of the *n:X#1 ?  *t:Bound })({  density_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  density of *n:X#1 ?  *t:Bound })({  density_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  density *n:X#1  *t:Bound })({  density_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  density *n:X#1 ?  *t:Bound })({  density_1( *n:X#1 all  }) weight 0.0
*n:X -> ({ elevations })({ low_point_2( }) weight 0.0
*n:X -> ({ elevations lower })({ low_point_2( lower_2( }) weight 0.0
*n:X -> ({ elevations lower than what })({ low_point_2( lower_2( low_point_1( }) weight 0.0
*n:X -> ({ elevations lower than what Alabama has . })({ low_point_2( lower_2( low_point_1( stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  elevations lower than what *n:X#1  *t:Bound })({  low_point_2( lower_2( low_point_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  elevations lower *n:X#1  *t:Bound })({  low_point_2( lower_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  elevations *n:X#1  *t:Bound })({  low_point_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  elevations *n:X#1 Alabama has .  *t:Bound })({  low_point_2( *n:X#1 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevations *n:X#1 Alabama has *n:X#2  *t:Bound })({  low_point_2( *n:X#1 *n:X#2 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevations *n:X#1 than what  *t:Bound })({  low_point_2( *n:X#1 low_point_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  elevations *n:X#1 than what *n:X#2  *t:Bound })({  low_point_2( *n:X#1 low_point_1( *n:X#2  }) weight 0.0
*n:X -> ({ length })({ len( }) weight 0.0
*n:X -> ({ length })({ len( intersection( }) weight 0.0
*n:X -> ({ length of the Colorado river })({ len( river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ length of the Colorado river in Texas ? })({ len( intersection( riverid( 'colorado' , river( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  length of the Colorado *n:X#1  *t:Bound })({  len( *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:X -> ({ length of the Mississippi river })({ len( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  length of the Mississippi *n:X#1  *t:Bound })({  len( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:X -> ({ length of the longest })({ len( longest( }) weight 0.0
*n:X -> ({ length of the longest river })({ len( longest( river( }) weight 0.0
*n:X -> ({ length of the longest river in the })({ len( longest( river( loc_2( }) weight 0.0
*n:X -> ({ length of the longest river in the USA })({ len( longest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ length of the longest river that runs through })({ len( longest( river( traverse_2( }) weight 0.0
*n:X -> ({ length of the longest river that runs through Texas ? })({ len( longest( river( traverse_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  length of the longest *n:X#1  *t:Bound })({  len( longest( *n:X#1  }) weight 0.0
*n:X -> ({ length of the river that flows through the most })({ len( most( river( traverse_2( }) weight 0.0
*n:X -> ({ length of the river that flows through the most states })({ len( most( river( traverse_2( state( }) weight 0.0
*n:X -> ({ length of the river that runs through the most })({ len( most( river( traverse_2( }) weight 0.0
*n:X -> ({ length of the river that runs through the most states })({ len( most( river( traverse_2( state( }) weight 0.0
*n:X -> ({ length of the river that traverses the most })({ len( most( river( traverse_2( }) weight 0.0
*n:X -> ({ length of the river that traverses the most states })({ len( most( river( traverse_2( state( }) weight 0.0
*n:X -> ({ length of the river that traverses the most states ? })({ len( most( river( traverse_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  length of the *n:X#1  *t:Bound })({  len( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  length of the *n:X#1 ?  *t:Bound })({  len( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  length of the *n:X#1 USA  *t:Bound })({  len( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  length of the *n:X#1 states  *t:Bound })({  len( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  length of the *n:X#1 river  *t:Bound })({  len( river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  length of the *n:X#1 river  *t:Bound })({  len( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  length *n:X#1  *t:Bound })({  len( intersection( riverid( *n:X#1  }) weight 0.0
*n:X -> ({ with })({ largest_one( }) weight 0.0
*n:X -> ({ with })({ loc_1( }) weight 0.0
*n:X -> ({ with })({ smallest_one( }) weight 0.0
*n:X -> ({ with capital })({ loc_1( capital( }) weight 0.0
*n:X -> ({ with capital Des })({ loc_1( capital( cityid( 'des }) weight 0.0
*n:X -> ({ with capital Des Moines })({ loc_1( capital( cityid( 'des moines', }) weight 0.0
*n:X -> ({ with capital Des Moines ? })({ loc_1( capital( cityid( 'des moines', _ }) weight 0.0
*n:Query -> ({ *t:Bound  with capital Des *n:X#1  *t:Bound })({  loc_1( capital( cityid( 'des *n:X#1  }) weight 0.0
*n:X -> ({ with capital Austin })({ loc_1( capital( cityid( 'austin', }) weight 0.0
*n:X -> ({ with capital Austin ? })({ loc_1( capital( cityid( 'austin', _ }) weight 0.0
*n:Query -> ({ *t:Bound  with capital Austin *n:X#1  *t:Bound })({  loc_1( capital( cityid( 'austin', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with capital *n:X#1  *t:Bound })({  loc_1( capital( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with capital *n:X#1 ?  *t:Bound })({  loc_1( capital( cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  with capital *n:X#1 Moines  *t:Bound })({  loc_1( capital( cityid( *n:X#1 moines',  }) weight 0.0
*n:X -> ({ with the highest })({ loc_1( highest( }) weight 0.0
*n:X -> ({ with the highest elevation })({ loc_1( highest( place( }) weight 0.0
*n:X -> ({ with the highest elevation ? })({ loc_1( highest( place( all }) weight 0.0
*n:X -> ({ with the highest elevation in the })({ loc_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ with the highest elevation in the United })({ loc_1( highest( place( loc_2( countryid( }) weight 0.0
*n:X -> ({ with the highest elevation in the United States })({ loc_1( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  with the highest elevation *n:X#1  *t:Bound })({  loc_1( highest( place( *n:X#1  }) weight 0.0
*n:X -> ({ with the highest population })({ largest_one( population_1( }) weight 0.0
*n:X -> ({ with the highest population ? })({ largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ with the highest population density })({ largest_one( density_1( }) weight 0.0
*n:Query -> ({ *t:Bound  with the highest population *n:X#1  *t:Bound })({  largest_one( population_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the highest population *n:X#1  *t:Bound })({  largest_one( *n:X#1  }) weight 0.0
*n:X -> ({ with the highest point })({ loc_1( highest( place( }) weight 0.0
*n:X -> ({ with the highest point ? })({ loc_1( highest( place( all }) weight 0.0
*n:Query -> ({ *t:Bound  with the highest point *n:X#1  *t:Bound })({  loc_1( highest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the highest *n:X#1  *t:Bound })({  largest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the highest *n:X#1  *t:Bound })({  loc_1( highest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the highest *n:X#1 States  *t:Bound })({  loc_1( highest( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  with the highest *n:X#1 ?  *t:Bound })({  largest_one( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  with the highest *n:X#1 ?  *t:Bound })({  loc_1( highest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  with the highest *n:X#1 United  *t:Bound })({  loc_1( highest( *n:X#1 countryid(  }) weight 0.0
*n:X -> ({ with the capital })({ loc_1( capital( }) weight 0.0
*n:X -> ({ with the capital Albany })({ loc_1( capital( cityid( 'albany', }) weight 0.0
*n:X -> ({ with the capital Albany ? })({ loc_1( capital( cityid( 'albany', _ }) weight 0.0
*n:Query -> ({ *t:Bound  with the capital Albany *n:X#1  *t:Bound })({  loc_1( capital( cityid( 'albany', *n:X#1  }) weight 0.0
*n:X -> ({ with the capital Des })({ loc_1( capital( cityid( 'des }) weight 0.0
*n:X -> ({ with the capital Des Moines })({ loc_1( capital( cityid( 'des moines', }) weight 0.0
*n:X -> ({ with the capital Des Moines ? })({ loc_1( capital( cityid( 'des moines', _ }) weight 0.0
*n:Query -> ({ *t:Bound  with the capital Des *n:X#1  *t:Bound })({  loc_1( capital( cityid( 'des *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the capital *n:X#1  *t:Bound })({  loc_1( capital( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the capital *n:X#1 ?  *t:Bound })({  loc_1( capital( cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  with the capital *n:X#1 Moines  *t:Bound })({  loc_1( capital( cityid( *n:X#1 moines',  }) weight 0.0
*n:X -> ({ with the longest })({ loc_1( longest( }) weight 0.0
*n:X -> ({ with the longest river })({ loc_1( longest( river( }) weight 0.0
*n:X -> ({ with the longest river ? })({ loc_1( longest( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  with the longest river *n:X#1  *t:Bound })({  loc_1( longest( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the longest *n:X#1  *t:Bound })({  loc_1( longest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the longest *n:X#1 ?  *t:Bound })({  loc_1( longest( *n:X#1 all  }) weight 0.0
*n:X -> ({ with the lowest })({ loc_1( lowest( }) weight 0.0
*n:X -> ({ with the lowest population })({ smallest_one( population_1( }) weight 0.0
*n:X -> ({ with the lowest population density })({ smallest_one( density_1( }) weight 0.0
*n:X -> ({ with the lowest point })({ loc_1( lowest( place( }) weight 0.0
*n:X -> ({ with the lowest point ? })({ loc_1( lowest( place( all }) weight 0.0
*n:X -> ({ with the lowest point in the })({ loc_1( lowest( place( loc_2( }) weight 0.0
*n:X -> ({ with the lowest point in the USA })({ loc_1( lowest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  with the lowest point *n:X#1  *t:Bound })({  loc_1( lowest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the lowest *n:X#1  *t:Bound })({  loc_1( lowest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the lowest *n:X#1  *t:Bound })({  smallest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the lowest *n:X#1 ?  *t:Bound })({  loc_1( lowest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  with the lowest *n:X#1 USA  *t:Bound })({  loc_1( lowest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ with the largest })({ largest_one( }) weight 0.0
*n:X -> ({ with the largest })({ loc_1( largest( }) weight 0.0
*n:X -> ({ with the largest capital })({ loc_1( largest( capital( }) weight 0.0
*n:X -> ({ with the largest capital city })({ loc_1( largest( capital( city( }) weight 0.0
*n:X -> ({ with the largest capital city in the })({ loc_1( largest( capital( city( loc_2( }) weight 0.0
*n:X -> ({ with the largest capital city in the US })({ loc_1( largest( capital( city( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  with the largest capital *n:X#1  *t:Bound })({  loc_1( largest( capital( *n:X#1  }) weight 0.0
*n:X -> ({ with the largest density })({ largest_one( density_1( }) weight 0.0
*n:X -> ({ with the largest area })({ largest_one( area_1( }) weight 0.0
*n:X -> ({ with the largest population })({ largest_one( population_1( }) weight 0.0
*n:X -> ({ with the largest population ? })({ largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ with the largest population density })({ largest_one( density_1( }) weight 0.0
*n:Query -> ({ *t:Bound  with the largest population *n:X#1  *t:Bound })({  largest_one( population_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the largest population *n:X#1  *t:Bound })({  largest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the largest *n:X#1  *t:Bound })({  largest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the largest *n:X#1  *t:Bound })({  loc_1( largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the largest *n:X#1 ?  *t:Bound })({  largest_one( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  with the largest *n:X#1 US  *t:Bound })({  loc_1( largest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  with the largest *n:X#1 city  *t:Bound })({  loc_1( largest( *n:X#1 city(  }) weight 0.0
*n:X -> ({ with the greatest })({ largest_one( }) weight 0.0
*n:X -> ({ with the greatest population })({ largest_one( population_1( }) weight 0.0
*n:X -> ({ with the greatest population ? })({ largest_one( population_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  with the greatest population *n:X#1  *t:Bound })({  largest_one( population_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the greatest *n:X#1  *t:Bound })({  largest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the greatest *n:X#1 ?  *t:Bound })({  largest_one( *n:X#1 state( all  }) weight 0.0
*n:X -> ({ with the smallest })({ smallest_one( }) weight 0.0
*n:X -> ({ with the smallest area })({ smallest_one( area_1( }) weight 0.0
*n:X -> ({ with the smallest population density })({ smallest_one( density_1( }) weight 0.0
*n:Query -> ({ *t:Bound  with the smallest *n:X#1  *t:Bound })({  smallest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1  *t:Bound })({  loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 Albany  *t:Bound })({  loc_1( *n:X#1 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 Albany ?  *t:Bound })({  loc_1( *n:X#1 cityid( 'albany', _  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 Albany *n:X#2  *t:Bound })({  loc_1( *n:X#1 cityid( 'albany', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 States  *t:Bound })({  loc_1( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 Des  *t:Bound })({  loc_1( *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 Des Moines  *t:Bound })({  loc_1( *n:X#1 cityid( 'des moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 Des *n:X#2  *t:Bound })({  loc_1( *n:X#1 cityid( 'des *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 ?  *t:Bound })({  loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 ?  *t:Bound })({  loc_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 Moines  *t:Bound })({  loc_1( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 Moines ?  *t:Bound })({  loc_1( *n:X#1 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 Moines *n:X#2  *t:Bound })({  loc_1( *n:X#1 moines', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 USA  *t:Bound })({  loc_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 United  *t:Bound })({  loc_1( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 United States  *t:Bound })({  loc_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 United *n:X#2  *t:Bound })({  loc_1( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 capital  *t:Bound })({  loc_1( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 capital city  *t:Bound })({  loc_1( *n:X#1 capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 capital *n:X#2  *t:Bound })({  loc_1( *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 US  *t:Bound })({  loc_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 in the  *t:Bound })({  loc_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 river  *t:Bound })({  loc_1( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 river ?  *t:Bound })({  loc_1( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 river *n:X#2  *t:Bound })({  loc_1( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 city  *t:Bound })({  loc_1( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 city *n:X#2  *t:Bound })({  loc_1( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 elevation  *t:Bound })({  loc_1( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 elevation ?  *t:Bound })({  loc_1( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 elevation *n:X#2  *t:Bound })({  loc_1( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 point  *t:Bound })({  loc_1( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 point ?  *t:Bound })({  loc_1( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  with the *n:X#1 point *n:X#2  *t:Bound })({  loc_1( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  with *n:X#1  *t:Bound })({  loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  with *n:X#1 Des  *t:Bound })({  loc_1( *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  with *n:X#1 Des Moines  *t:Bound })({  loc_1( *n:X#1 cityid( 'des moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  with *n:X#1 Des *n:X#2  *t:Bound })({  loc_1( *n:X#1 cityid( 'des *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  with *n:X#1 ?  *t:Bound })({  loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  with *n:X#1 Moines  *t:Bound })({  loc_1( *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  with *n:X#1 Moines ?  *t:Bound })({  loc_1( *n:X#1 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  with *n:X#1 Moines *n:X#2  *t:Bound })({  loc_1( *n:X#1 moines', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  with *n:X#1 Austin  *t:Bound })({  loc_1( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  with *n:X#1 Austin ?  *t:Bound })({  loc_1( *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  with *n:X#1 Austin *n:X#2  *t:Bound })({  loc_1( *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:X -> ({ Alabama })({ 'alabama' }) weight 0.0
*n:X -> ({ Alabama ? })({ stateid( 'alabama' }) weight 0.0
*n:X -> ({ Alabama has . })({ stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  Alabama has *n:X#1  *t:Bound })({  *n:X#1 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  Alabama *n:X#1  *t:Bound })({  *n:X#1 'alabama'  }) weight 0.0
*n:X -> ({ Mount })({ 'mount }) weight 0.0
*n:X -> ({ Mount })({ placeid( 'mount }) weight 0.0
*n:X -> ({ Mount McKinley })({ 'mount mckinley' }) weight 0.0
*n:X -> ({ Mount McKinley })({ placeid( 'mount mckinley' }) weight 0.0
*n:Query -> ({ *t:Bound  Mount *n:X#1  *t:Bound })({  'mount *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Mount *n:X#1  *t:Bound })({  placeid( 'mount *n:X#1  }) weight 0.0
*n:X -> ({ Rivers })({ river( }) weight 0.0
*n:X -> ({ Rivers in })({ river( loc_2( }) weight 0.0
*n:X -> ({ Rivers in New York ? })({ river( loc_2( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  Rivers in New York *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  Rivers in New *n:X#1 ?  *t:Bound })({  river( loc_2( stateid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Rivers in *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Rivers in *n:X#1 ?  *t:Bound })({  river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Rivers in *n:X#1 York ?  *t:Bound })({  river( loc_2( stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  Rivers in *n:X#1 York *n:X#2  *t:Bound })({  river( loc_2( *n:X#2 *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  Rivers *n:X#1  *t:Bound })({  river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Rivers *n:X#1 New York ?  *t:Bound })({  river( *n:X#1 stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  Rivers *n:X#1 New York *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  Rivers *n:X#1 New *n:X#2 ?  *t:Bound })({  river( *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:X -> ({ Texas })({ 'texas' }) weight 0.0
*n:X -> ({ Texas })({ 'tx' }) weight 0.0
*n:X -> ({ Texas . })({ stateid( 'texas' }) weight 0.0
*n:X -> ({ Texas are longer than the Red })({ 'texas' , longer( riverid( 'red' }) weight 0.0
*n:Query -> ({ *t:Bound  Texas are longer *n:X#1  *t:Bound })({  'texas' , *n:X#1 riverid( 'red'  }) weight 0.0
*n:X -> ({ Texas ? })({ stateid( 'texas' }) weight 0.0
*n:X -> ({ Texas have ? })({ stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  Texas have *n:X#1  *t:Bound })({  *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ Texas run ? })({ stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  Texas run *n:X#1  *t:Bound })({  *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  Texas *n:X#1  *t:Bound })({  'texas' , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Texas *n:X#1  *t:Bound })({  *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  Texas *n:X#1 than the Red  *t:Bound })({  'texas' , longer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Texas *n:X#1 longer *n:X#2  *t:Bound })({  'texas' , *n:X#2 *n:X#1 'red'  }) weight 0.0
*n:X -> ({ by })({ riverid( }) weight 0.0
*n:X -> ({ by the Mississippi })({ riverid( 'mississippi' }) weight 0.0
*n:X -> ({ by the Mississippi river })({ river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  by the Mississippi *n:X#1  *t:Bound })({  *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  by the *n:X#1  *t:Bound })({  riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  by the *n:X#1 river  *t:Bound })({  river( riverid( *n:X#1  }) weight 0.0
*n:X -> ({ for Michigan })({ 'michigan' }) weight 0.0
*n:X -> ({ for Michigan ? })({ stateid( 'michigan' }) weight 0.0
*n:Query -> ({ *t:Bound  for Michigan *n:X#1  *t:Bound })({  *n:X#1 'michigan'  }) weight 0.0
*n:X -> ({ height })({ elevation_1( }) weight 0.0
*n:X -> ({ height of Mount })({ elevation_1( placeid( 'mount }) weight 0.0
*n:X -> ({ height of Mount McKinley })({ elevation_1( placeid( 'mount mckinley' }) weight 0.0
*n:Query -> ({ *t:Bound  height of Mount *n:X#1  *t:Bound })({  elevation_1( placeid( 'mount *n:X#1  }) weight 0.0
*n:X -> ({ height of the highest })({ elevation_1( highest( }) weight 0.0
*n:X -> ({ height of the highest mountain in Texas ? })({ elevation_1( highest( mountain( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ height of the highest point })({ elevation_1( highest( place( }) weight 0.0
*n:X -> ({ height of the highest point in the })({ elevation_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ height of the highest point in the USA })({ elevation_1( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  height of the highest *n:X#1  *t:Bound })({  elevation_1( highest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  height of the *n:X#1  *t:Bound })({  elevation_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  height of the *n:X#1 USA  *t:Bound })({  elevation_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  height of the *n:X#1 point  *t:Bound })({  elevation_1( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  height of *n:X#1  *t:Bound })({  elevation_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  height of *n:X#1 McKinley  *t:Bound })({  elevation_1( *n:X#1 mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  height *n:X#1  *t:Bound })({  elevation_1( *n:X#1  }) weight 0.0
*n:X -> ({ least })({ smallest_one( }) weight 0.0
*n:X -> ({ least populous })({ smallest_one( population_1( }) weight 0.0
*n:X -> ({ least populous state })({ smallest_one( population_1( state( }) weight 0.0
*n:X -> ({ least populous state ? })({ smallest_one( population_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  least populous state *n:X#1  *t:Bound })({  smallest_one( population_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  least populous *n:X#1  *t:Bound })({  smallest_one( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  least populous *n:X#1 ?  *t:Bound })({  smallest_one( population_1( *n:X#1 all  }) weight 0.0
*n:X -> ({ least population })({ smallest_one( population_1( }) weight 0.0
*n:Query -> ({ *t:Bound  least *n:X#1  *t:Bound })({  smallest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  least *n:X#1 ?  *t:Bound })({  smallest_one( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  least *n:X#1 state  *t:Bound })({  smallest_one( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  least *n:X#1 state ?  *t:Bound })({  smallest_one( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  least *n:X#1 state *n:X#2  *t:Bound })({  smallest_one( *n:X#1 state( *n:X#2  }) weight 0.0
*n:X -> ({ major })({ major( }) weight 0.0
*n:X -> ({ major lakes })({ major( lake( }) weight 0.0
*n:X -> ({ major lakes in })({ major( lake( loc_2( }) weight 0.0
*n:X -> ({ major lakes in Michigan . })({ major( lake( loc_2( stateid( 'michigan' }) weight 0.0
*n:Query -> ({ *t:Bound  major lakes in Michigan *n:X#1  *t:Bound })({  major( lake( loc_2( *n:X#1 'michigan'  }) weight 0.0
*n:X -> ({ major lakes in the })({ major( lake( loc_2( }) weight 0.0
*n:X -> ({ major lakes in the US })({ major( lake( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  major lakes in the *n:X#1  *t:Bound })({  major( lake( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major lakes in *n:X#1  *t:Bound })({  major( lake( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major lakes in *n:X#1 .  *t:Bound })({  major( lake( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major lakes *n:X#1  *t:Bound })({  major( lake( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major lakes *n:X#1 Michigan .  *t:Bound })({  major( lake( *n:X#1 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  major lakes *n:X#1 Michigan *n:X#2  *t:Bound })({  major( lake( *n:X#1 *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  major lakes *n:X#1 US  *t:Bound })({  major( lake( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ major cities })({ major( city( }) weight 0.0
*n:X -> ({ major cities are })({ major( city( }) weight 0.0
*n:X -> ({ major cities are })({ major( city( loc_2( }) weight 0.0
*n:X -> ({ major cities are in })({ major( city( loc_2( }) weight 0.0
*n:X -> ({ major cities are in Arizona ? })({ major( city( loc_2( stateid( 'arizona' }) weight 0.0
*n:X -> ({ major cities are in Florida ? })({ major( city( loc_2( stateid( 'florida' }) weight 0.0
*n:X -> ({ major cities are in Texas ? })({ major( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ major cities are in states })({ major( city( loc_2( state( }) weight 0.0
*n:X -> ({ major cities are in states bordering })({ major( city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ major cities are in states bordering Utah ? })({ major( city( loc_2( state( next_to_2( stateid( 'utah' }) weight 0.0
*n:X -> ({ major cities are in states bordering Nebraska ? })({ major( city( loc_2( state( next_to_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  major cities are in *n:X#1  *t:Bound })({  major( city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ major cities are there ? })({ major( city( all }) weight 0.0
*n:X -> ({ major cities are there in })({ major( city( loc_2( }) weight 0.0
*n:X -> ({ major cities are there in Oregon ? })({ major( city( loc_2( stateid( 'oregon' }) weight 0.0
*n:Query -> ({ *t:Bound  major cities are there *n:X#1  *t:Bound })({  major( city( *n:X#1  }) weight 0.0
*n:X -> ({ major cities are located in Pennsylvania ? })({ major( city( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  major cities are located *n:X#1  *t:Bound })({  major( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities are *n:X#1  *t:Bound })({  major( city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ major cities ? })({ major( city( all }) weight 0.0
*n:X -> ({ major cities in })({ major( city( loc_2( }) weight 0.0
*n:X -> ({ major cities in Wisconsin ? })({ major( city( loc_2( stateid( 'wisconsin' }) weight 0.0
*n:Query -> ({ *t:Bound  major cities in Wisconsin *n:X#1  *t:Bound })({  major( city( loc_2( *n:X#1 'wisconsin'  }) weight 0.0
*n:X -> ({ major cities in Montana ? })({ major( city( loc_2( stateid( 'montana' }) weight 0.0
*n:Query -> ({ *t:Bound  major cities in Montana *n:X#1  *t:Bound })({  major( city( loc_2( *n:X#1 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities in *n:X#1  *t:Bound })({  major( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities in *n:X#1 ?  *t:Bound })({  major( city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1  *t:Bound })({  major( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 Oregon ?  *t:Bound })({  major( city( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 Oregon *n:X#2  *t:Bound })({  major( city( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 bordering  *t:Bound })({  major( city( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 bordering *n:X#2  *t:Bound })({  major( city( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 Wisconsin ?  *t:Bound })({  major( city( *n:X#1 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 Wisconsin *n:X#2  *t:Bound })({  major( city( *n:X#1 *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 Utah ?  *t:Bound })({  major( city( *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 Utah *n:X#2  *t:Bound })({  major( city( *n:X#1 *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 Montana ?  *t:Bound })({  major( city( *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 Montana *n:X#2  *t:Bound })({  major( city( *n:X#1 *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 Nebraska ?  *t:Bound })({  major( city( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 Nebraska *n:X#2  *t:Bound })({  major( city( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 states  *t:Bound })({  major( city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 states bordering  *t:Bound })({  major( city( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 states *n:X#2  *t:Bound })({  major( city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major cities *n:X#1 located *n:X#2  *t:Bound })({  major( city( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ major river })({ major( river( }) weight 0.0
*n:X -> ({ major river in })({ major( river( loc_2( }) weight 0.0
*n:X -> ({ major river in Virginia runs ? })({ major( river( loc_2( stateid( 'virginia' }) weight 0.0
*n:Query -> ({ *t:Bound  major river in *n:X#1  *t:Bound })({  major( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major river *n:X#1  *t:Bound })({  major( river( *n:X#1  }) weight 0.0
*n:X -> ({ major rivers })({ major( river( }) weight 0.0
*n:X -> ({ major rivers ? })({ major( river( all }) weight 0.0
*n:X -> ({ major rivers in })({ major( river( loc_2( }) weight 0.0
*n:X -> ({ major rivers in Florida . })({ major( river( loc_2( stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  major rivers in Florida *n:X#1  *t:Bound })({  major( river( loc_2( *n:X#1 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  major rivers in *n:X#1  *t:Bound })({  major( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major rivers in *n:X#1 .  *t:Bound })({  major( river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ major rivers cross })({ major( river( traverse_2( }) weight 0.0
*n:X -> ({ major rivers cross Ohio ? })({ major( river( traverse_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  major rivers cross Ohio *n:X#1  *t:Bound })({  major( river( traverse_2( *n:X#1 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  major rivers cross *n:X#1  *t:Bound })({  major( river( traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major rivers cross *n:X#1 ?  *t:Bound })({  major( river( traverse_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major rivers *n:X#1  *t:Bound })({  major( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major rivers *n:X#1 Florida .  *t:Bound })({  major( river( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  major rivers *n:X#1 Florida *n:X#2  *t:Bound })({  major( river( *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  major rivers *n:X#1 Ohio ?  *t:Bound })({  major( river( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  major rivers *n:X#1 Ohio *n:X#2  *t:Bound })({  major( river( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1  *t:Bound })({  major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Oregon ?  *t:Bound })({  major( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Oregon *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 bordering  *t:Bound })({  major( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 bordering Utah ?  *t:Bound })({  major( *n:X#1 next_to_2( stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 bordering Utah *n:X#2  *t:Bound })({  major( *n:X#1 next_to_2( *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 bordering Nebraska ?  *t:Bound })({  major( *n:X#1 next_to_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 bordering Nebraska *n:X#2  *t:Bound })({  major( *n:X#1 next_to_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 bordering *n:X#2  *t:Bound })({  major( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 bordering *n:X#2 ?  *t:Bound })({  major( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 are  *t:Bound })({  major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 are  *t:Bound })({  major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 are in  *t:Bound })({  major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 are in states  *t:Bound })({  major( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 are in *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 are there ?  *t:Bound })({  major( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 are there in  *t:Bound })({  major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 are there *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 are located *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 are *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 ?  *t:Bound })({  major( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Virginia runs ?  *t:Bound })({  major( *n:X#1 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Virginia runs *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Florida .  *t:Bound })({  major( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Florida *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Wisconsin ?  *t:Bound })({  major( *n:X#1 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Wisconsin *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Utah ?  *t:Bound })({  major( *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Utah *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Montana ?  *t:Bound })({  major( *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Montana *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Michigan .  *t:Bound })({  major( *n:X#1 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Michigan *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Nebraska ?  *t:Bound })({  major( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Nebraska *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 US  *t:Bound })({  major( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Ohio ?  *t:Bound })({  major( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 Ohio *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 states  *t:Bound })({  major( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 states bordering  *t:Bound })({  major( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 states bordering *n:X#2  *t:Bound })({  major( *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 states *n:X#2  *t:Bound })({  major( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in  *t:Bound })({  major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in Arizona ?  *t:Bound })({  major( *n:X#1 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in Florida .  *t:Bound })({  major( *n:X#1 loc_2( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in Florida ?  *t:Bound })({  major( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in Florida *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in Wisconsin ?  *t:Bound })({  major( *n:X#1 loc_2( stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in Wisconsin *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in Texas ?  *t:Bound })({  major( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in Montana ?  *t:Bound })({  major( *n:X#1 loc_2( stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in Montana *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in Michigan .  *t:Bound })({  major( *n:X#1 loc_2( stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in Michigan *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in the  *t:Bound })({  major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in the US  *t:Bound })({  major( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in the *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in *n:X#2 .  *t:Bound })({  major( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in *n:X#2 ?  *t:Bound })({  major( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 in *n:X#2 ?  *t:Bound })({  major( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 located *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 cross  *t:Bound })({  major( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 cross Ohio ?  *t:Bound })({  major( *n:X#1 traverse_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 cross Ohio *n:X#2  *t:Bound })({  major( *n:X#1 traverse_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 cross *n:X#2  *t:Bound })({  major( *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  major *n:X#1 cross *n:X#2 ?  *t:Bound })({  major( *n:X#1 traverse_2( stateid( *n:X#2  }) weight 0.0
*n:X -> ({ named })({ cityid( }) weight 0.0
*n:X -> ({ named Durham })({ cityid( 'durham', }) weight 0.0
*n:X -> ({ named Durham ? })({ cityid( 'durham', _ }) weight 0.0
*n:Query -> ({ *t:Bound  named Durham *n:X#1  *t:Bound })({  cityid( 'durham', *n:X#1  }) weight 0.0
*n:X -> ({ named Austin })({ cityid( 'austin', }) weight 0.0
*n:X -> ({ named Austin ? })({ cityid( 'austin', _ }) weight 0.0
*n:Query -> ({ *t:Bound  named Austin *n:X#1  *t:Bound })({  cityid( 'austin', *n:X#1  }) weight 0.0
*n:X -> ({ named Springfield })({ cityid( 'springfield', }) weight 0.0
*n:X -> ({ named Springfield ? })({ cityid( 'springfield', _ }) weight 0.0
*n:Query -> ({ *t:Bound  named Springfield *n:X#1  *t:Bound })({  cityid( 'springfield', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  named *n:X#1  *t:Bound })({  cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  named *n:X#1 ?  *t:Bound })({  cityid( *n:X#1 _  }) weight 0.0
*n:X -> ({ of })({ cityid( }) weight 0.0
*n:X -> ({ of })({ population_1( }) weight 0.0
*n:X -> ({ of Oregon ? })({ stateid( 'oregon' }) weight 0.0
*n:X -> ({ of Alaska ? })({ stateid( 'alaska' }) weight 0.0
*n:X -> ({ of California ? })({ stateid( 'california' }) weight 0.0
*n:X -> ({ of Arizona ? })({ stateid( 'arizona' }) weight 0.0
*n:X -> ({ of Delaware ? })({ stateid( 'delaware' }) weight 0.0
*n:X -> ({ of Louisiana ? })({ stateid( 'louisiana' }) weight 0.0
*n:X -> ({ of Denver })({ cityid( 'denver', }) weight 0.0
*n:X -> ({ of Denver ? })({ cityid( 'denver', _ }) weight 0.0
*n:Query -> ({ *t:Bound  of Denver *n:X#1  *t:Bound })({  cityid( 'denver', *n:X#1  }) weight 0.0
*n:X -> ({ of Boulder })({ cityid( 'boulder', }) weight 0.0
*n:X -> ({ of Boulder ? })({ cityid( 'boulder', _ }) weight 0.0
*n:Query -> ({ *t:Bound  of Boulder *n:X#1  *t:Bound })({  cityid( 'boulder', *n:X#1  }) weight 0.0
*n:X -> ({ of Iowa ? })({ stateid( 'iowa' }) weight 0.0
*n:X -> ({ of Maryland ? })({ stateid( 'maryland' }) weight 0.0
*n:X -> ({ of Alabama ? })({ stateid( 'alabama' }) weight 0.0
*n:X -> ({ of Indiana ? })({ stateid( 'indiana' }) weight 0.0
*n:X -> ({ of Colorado ? })({ stateid( 'colorado' }) weight 0.0
*n:X -> ({ of Georgia ? })({ stateid( 'georgia' }) weight 0.0
*n:X -> ({ of Atlanta })({ cityid( 'atlanta', }) weight 0.0
*n:X -> ({ of Atlanta ? })({ cityid( 'atlanta', _ }) weight 0.0
*n:X -> ({ of Atlanta GA })({ cityid( 'atlanta', 'ga' }) weight 0.0
*n:Query -> ({ *t:Bound  of Atlanta *n:X#1  *t:Bound })({  cityid( 'atlanta', *n:X#1  }) weight 0.0
*n:X -> ({ of Hawaii ? })({ stateid( 'hawaii' }) weight 0.0
*n:X -> ({ of Rhode Island ? })({ stateid( 'rhode island' }) weight 0.0
*n:Query -> ({ *t:Bound  of Rhode *n:X#1 ?  *t:Bound })({  stateid( 'rhode *n:X#1  }) weight 0.0
*n:X -> ({ of Austin })({ cityid( 'austin', }) weight 0.0
*n:X -> ({ of Austin ? })({ cityid( 'austin', _ }) weight 0.0
*n:X -> ({ of Austin Texas })({ cityid( 'austin', 'tx' }) weight 0.0
*n:Query -> ({ *t:Bound  of Austin *n:X#1  *t:Bound })({  cityid( 'austin', *n:X#1  }) weight 0.0
*n:X -> ({ of Boston })({ cityid( 'boston', }) weight 0.0
*n:X -> ({ of Boston Massachusetts })({ cityid( 'boston', 'ma' }) weight 0.0
*n:Query -> ({ *t:Bound  of Boston *n:X#1  *t:Bound })({  cityid( 'boston', *n:X#1  }) weight 0.0
*n:X -> ({ of Minnesota ? })({ stateid( 'minnesota' }) weight 0.0
*n:X -> ({ of North Dakota ? })({ stateid( 'north dakota' }) weight 0.0
*n:Query -> ({ *t:Bound  of North *n:X#1 ?  *t:Bound })({  stateid( 'north *n:X#1  }) weight 0.0
*n:X -> ({ of Erie })({ cityid( 'erie', }) weight 0.0
*n:X -> ({ of Erie Pennsylvania })({ cityid( 'erie', 'pa' }) weight 0.0
*n:Query -> ({ *t:Bound  of Erie *n:X#1  *t:Bound })({  cityid( 'erie', *n:X#1  }) weight 0.0
*n:X -> ({ of Florida ? })({ stateid( 'florida' }) weight 0.0
*n:X -> ({ of Houston })({ cityid( 'houston', }) weight 0.0
*n:X -> ({ of Houston ? })({ cityid( 'houston', _ }) weight 0.0
*n:Query -> ({ *t:Bound  of Houston *n:X#1  *t:Bound })({  cityid( 'houston', *n:X#1  }) weight 0.0
*n:X -> ({ of Wisconsin ? })({ stateid( 'wisconsin' }) weight 0.0
*n:X -> ({ of Seattle })({ cityid( 'seattle', }) weight 0.0
*n:X -> ({ of Seattle ? })({ cityid( 'seattle', _ }) weight 0.0
*n:X -> ({ of Seattle Washington })({ cityid( 'seattle', 'wa' }) weight 0.0
*n:Query -> ({ *t:Bound  of Seattle *n:X#1  *t:Bound })({  cityid( 'seattle', *n:X#1  }) weight 0.0
*n:X -> ({ of Maine ? })({ stateid( 'maine' }) weight 0.0
*n:X -> ({ of Idaho ? })({ stateid( 'idaho' }) weight 0.0
*n:X -> ({ of Kansas ? })({ stateid( 'kansas' }) weight 0.0
*n:X -> ({ of Dallas })({ cityid( 'dallas', }) weight 0.0
*n:X -> ({ of Dallas ? })({ cityid( 'dallas', _ }) weight 0.0
*n:Query -> ({ *t:Bound  of Dallas *n:X#1  *t:Bound })({  cityid( 'dallas', *n:X#1  }) weight 0.0
*n:X -> ({ of Tucson })({ cityid( 'tucson', }) weight 0.0
*n:X -> ({ of Tucson ? })({ cityid( 'tucson', _ }) weight 0.0
*n:Query -> ({ *t:Bound  of Tucson *n:X#1  *t:Bound })({  cityid( 'tucson', *n:X#1  }) weight 0.0
*n:X -> ({ of Utah ? })({ stateid( 'utah' }) weight 0.0
*n:X -> ({ of Texas ? })({ stateid( 'texas' }) weight 0.0
*n:X -> ({ of Montana ? })({ stateid( 'montana' }) weight 0.0
*n:X -> ({ of Illinois ? })({ stateid( 'illinois' }) weight 0.0
*n:X -> ({ of Massachusetts ? })({ stateid( 'massachusetts' }) weight 0.0
*n:X -> ({ of Washington })({ cityid( 'washington', }) weight 0.0
*n:X -> ({ of Washington ? })({ stateid( 'washington' }) weight 0.0
*n:X -> ({ of Washington DC })({ cityid( 'washington', 'dc' }) weight 0.0
*n:Query -> ({ *t:Bound  of Washington *n:X#1  *t:Bound })({  cityid( 'washington', *n:X#1  }) weight 0.0
*n:X -> ({ of Pennsylvania ? })({ stateid( 'pennsylvania' }) weight 0.0
*n:X -> ({ of Mississippi ? })({ stateid( 'mississippi' }) weight 0.0
*n:X -> ({ of Michigan ? })({ stateid( 'michigan' }) weight 0.0
*n:X -> ({ of New })({ cityid( 'new }) weight 0.0
*n:X -> ({ of New Mexico ? })({ stateid( 'new mexico' }) weight 0.0
*n:X -> ({ of New Jersey ? })({ stateid( 'new jersey' }) weight 0.0
*n:X -> ({ of New Hampshire ? })({ stateid( 'new hampshire' }) weight 0.0
*n:X -> ({ of New York })({ cityid( 'new york', }) weight 0.0
*n:X -> ({ of New York ? })({ cityid( 'new york', _ }) weight 0.0
*n:X -> ({ of New York ? })({ stateid( 'new york' }) weight 0.0
*n:X -> ({ of New York City })({ cityid( 'new york', }) weight 0.0
*n:X -> ({ of New York City ? })({ cityid( 'new york', _ }) weight 0.0
*n:Query -> ({ *t:Bound  of New York City *n:X#1  *t:Bound })({  cityid( 'new york', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of New York *n:X#1  *t:Bound })({  cityid( 'new york', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of New *n:X#1  *t:Bound })({  cityid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of New *n:X#1 ?  *t:Bound })({  cityid( 'new *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  of New *n:X#1 ?  *t:Bound })({  stateid( 'new *n:X#1  }) weight 0.0
*n:X -> ({ of Wyoming ? })({ stateid( 'wyoming' }) weight 0.0
*n:X -> ({ of Missouri ? })({ stateid( 'missouri' }) weight 0.0
*n:X -> ({ of Sacramento })({ cityid( 'sacramento', }) weight 0.0
*n:X -> ({ of Sacramento ? })({ cityid( 'sacramento', _ }) weight 0.0
*n:Query -> ({ *t:Bound  of Sacramento *n:X#1  *t:Bound })({  cityid( 'sacramento', *n:X#1  }) weight 0.0
*n:X -> ({ of San })({ cityid( 'san }) weight 0.0
*n:X -> ({ of San Antonio })({ cityid( 'san antonio', }) weight 0.0
*n:X -> ({ of San Antonio ? })({ cityid( 'san antonio', _ }) weight 0.0
*n:Query -> ({ *t:Bound  of San Antonio *n:X#1  *t:Bound })({  cityid( 'san antonio', *n:X#1  }) weight 0.0
*n:X -> ({ of San Francisco })({ cityid( 'san francisco', }) weight 0.0
*n:X -> ({ of San Francisco ? })({ cityid( 'san francisco', _ }) weight 0.0
*n:Query -> ({ *t:Bound  of San Francisco *n:X#1  *t:Bound })({  cityid( 'san francisco', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of San *n:X#1  *t:Bound })({  cityid( 'san *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of San *n:X#1 ?  *t:Bound })({  cityid( 'san *n:X#1 _  }) weight 0.0
*n:X -> ({ of South Carolina ? })({ stateid( 'south carolina' }) weight 0.0
*n:X -> ({ of South Dakota ? })({ stateid( 'south dakota' }) weight 0.0
*n:Query -> ({ *t:Bound  of South *n:X#1 ?  *t:Bound })({  stateid( 'south *n:X#1  }) weight 0.0
*n:X -> ({ of Portland })({ cityid( 'portland', }) weight 0.0
*n:X -> ({ of Portland Maine })({ cityid( 'portland', 'me' }) weight 0.0
*n:Query -> ({ *t:Bound  of Portland *n:X#1  *t:Bound })({  cityid( 'portland', *n:X#1  }) weight 0.0
*n:X -> ({ of Ohio ? })({ stateid( 'ohio' }) weight 0.0
*n:X -> ({ of states bordering Iowa ? })({ state( next_to_2( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  of states bordering *n:X#1 ?  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ of states surrounding Mississippi ? })({ state( next_to_2( stateid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  of states surrounding *n:X#1 ?  *t:Bound })({  state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ of states that border Missouri ? })({ state( next_to_2( stateid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  of states *n:X#1 Iowa ?  *t:Bound })({  state( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  of states *n:X#1 Mississippi ?  *t:Bound })({  state( *n:X#1 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  of states *n:X#1 Missouri ?  *t:Bound })({  state( *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:X -> ({ of Vermont ? })({ stateid( 'vermont' }) weight 0.0
*n:X -> ({ of Springfield })({ cityid( 'springfield', }) weight 0.0
*n:X -> ({ of Springfield Missouri })({ cityid( 'springfield', 'mo' }) weight 0.0
*n:X -> ({ of Springfield South Dakota })({ cityid( 'springfield', 'sd' }) weight 0.0
*n:Query -> ({ *t:Bound  of Springfield *n:X#1  *t:Bound })({  cityid( 'springfield', *n:X#1  }) weight 0.0
*n:X -> ({ of citizens })({ population_1( }) weight 0.0
*n:X -> ({ of citizens in })({ population_1( cityid( }) weight 0.0
*n:X -> ({ of citizens in Boulder })({ population_1( cityid( 'boulder', }) weight 0.0
*n:X -> ({ of citizens in Boulder ? })({ population_1( cityid( 'boulder', _ }) weight 0.0
*n:Query -> ({ *t:Bound  of citizens in Boulder *n:X#1  *t:Bound })({  population_1( cityid( 'boulder', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of citizens in *n:X#1  *t:Bound })({  population_1( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of citizens in *n:X#1 ?  *t:Bound })({  population_1( cityid( *n:X#1 _  }) weight 0.0
*n:X -> ({ of Tempe })({ cityid( 'tempe', }) weight 0.0
*n:X -> ({ of Tempe Arizona })({ cityid( 'tempe', 'az' }) weight 0.0
*n:Query -> ({ *t:Bound  of Tempe *n:X#1  *t:Bound })({  cityid( 'tempe', *n:X#1  }) weight 0.0
*n:X -> ({ of rivers in California . })({ river( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  of rivers in *n:X#1 .  *t:Bound })({  river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of rivers *n:X#1 California .  *t:Bound })({  river( *n:X#1 stateid( 'california'  }) weight 0.0
*n:X -> ({ of neighboring states for Kentucky ? })({ state( next_to_2( stateid( 'kentucky' }) weight 0.0
*n:X -> ({ of people in })({ population_1( cityid( }) weight 0.0
*n:X -> ({ of people in Boulder })({ population_1( cityid( 'boulder', }) weight 0.0
*n:X -> ({ of people in Boulder ? })({ population_1( cityid( 'boulder', _ }) weight 0.0
*n:Query -> ({ *t:Bound  of people in Boulder *n:X#1  *t:Bound })({  population_1( cityid( 'boulder', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of people in *n:X#1  *t:Bound })({  population_1( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of people in *n:X#1 ?  *t:Bound })({  population_1( cityid( *n:X#1 _  }) weight 0.0
*n:X -> ({ of the Alabama state ? })({ loc_2( state( stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  of the Alabama *n:X#1 ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'alabama'  }) weight 0.0
*n:X -> ({ of the Colorado river in Texas ? })({ 'colorado' , river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ of the Florida state ? })({ loc_2( state( stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  of the Florida *n:X#1 ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:X -> ({ of the highest mountain in Texas ? })({ highest( mountain( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ of the Texas state ? })({ state( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  of the Texas *n:X#1 ?  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:X -> ({ of the capital of Texas ? })({ capital( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ of the New York ? })({ stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  of the New *n:X#1 ?  *t:Bound })({  stateid( 'new *n:X#1  }) weight 0.0
*n:X -> ({ of the major cities in Illinois ? })({ major( city( loc_2( stateid( 'illinois' }) weight 0.0
*n:X -> ({ of the state Texas ? })({ loc_2( state( stateid( 'texas' }) weight 0.0
*n:X -> ({ of the state with the capital })({ state( loc_1( capital( cityid( }) weight 0.0
*n:X -> ({ of the state with the capital Albany })({ state( loc_1( capital( cityid( 'albany', }) weight 0.0
*n:X -> ({ of the state with the capital Albany ? })({ state( loc_1( capital( cityid( 'albany', _ }) weight 0.0
*n:X -> ({ of the state with the most })({ loc_2( largest_one( population_1( state( }) weight 0.0
*n:X -> ({ of the state with the most inhabitants ? })({ loc_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ of the state with the smallest population })({ smallest_one( population_1( state( }) weight 0.0
*n:X -> ({ of the state with the smallest population ? })({ smallest_one( population_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  of the state *n:X#1  *t:Bound })({  state( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  of the state *n:X#1 Albany  *t:Bound })({  state( *n:X#1 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  of the state *n:X#1 ?  *t:Bound })({  loc_2( state( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of the state *n:X#1 population  *t:Bound })({  *n:X#1 population_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1  *t:Bound })({  *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 Albany  *t:Bound })({  *n:X#1 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 Albany ?  *t:Bound })({  *n:X#1 cityid( 'albany', _  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 Albany *n:X#2  *t:Bound })({  *n:X#1 cityid( 'albany', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 ?  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 Texas ?  *t:Bound })({  loc_2( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 Texas ?  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 Illinois ?  *t:Bound })({  *n:X#1 stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 York ?  *t:Bound })({  stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 state ?  *t:Bound })({  loc_2( state( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 state ?  *t:Bound })({  state( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 the capital  *t:Bound })({  *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  of the *n:X#1 the *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1  *t:Bound })({  cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Island ?  *t:Bound })({  stateid( *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 California .  *t:Bound })({  *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Arizona  *t:Bound })({  cityid( *n:X#1 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 bordering Iowa ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 bordering *n:X#2 ?  *t:Bound })({  *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Iowa ?  *t:Bound })({  *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Mexico ?  *t:Bound })({  stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Alabama state ?  *t:Bound })({  *n:X#1 state( stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Alabama *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Antonio  *t:Bound })({  cityid( *n:X#1 antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Antonio ?  *t:Bound })({  cityid( *n:X#1 antonio', _  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Antonio *n:X#2  *t:Bound })({  cityid( *n:X#1 antonio', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Carolina ?  *t:Bound })({  stateid( *n:X#1 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 ?  *t:Bound })({  cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 ?  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Jersey ?  *t:Bound })({  stateid( *n:X#1 jersey'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Dakota ?  *t:Bound })({  stateid( *n:X#1 dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 GA  *t:Bound })({  cityid( *n:X#1 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Florida state ?  *t:Bound })({  *n:X#1 state( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Florida *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Francisco  *t:Bound })({  cityid( *n:X#1 francisco',  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Francisco ?  *t:Bound })({  cityid( *n:X#1 francisco', _  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Francisco *n:X#2  *t:Bound })({  cityid( *n:X#1 francisco', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 DC  *t:Bound })({  cityid( *n:X#1 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Maine  *t:Bound })({  cityid( *n:X#1 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Texas  *t:Bound })({  cityid( *n:X#1 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Texas ?  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Hampshire ?  *t:Bound })({  stateid( *n:X#1 hampshire'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Massachusetts  *t:Bound })({  cityid( *n:X#1 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Washington  *t:Bound })({  cityid( *n:X#1 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Pennsylvania  *t:Bound })({  cityid( *n:X#1 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Mississippi ?  *t:Bound })({  *n:X#1 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Missouri  *t:Bound })({  cityid( *n:X#1 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 Missouri ?  *t:Bound })({  *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 South Dakota  *t:Bound })({  cityid( *n:X#1 'sd'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 in  *t:Bound })({  *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 in California .  *t:Bound })({  *n:X#1 loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 in Boulder  *t:Bound })({  *n:X#1 cityid( 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 in Boulder ?  *t:Bound })({  *n:X#1 cityid( 'boulder', _  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 in Boulder *n:X#2  *t:Bound })({  *n:X#1 cityid( 'boulder', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 in *n:X#2  *t:Bound })({  *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 in *n:X#2 .  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 in *n:X#2 ?  *t:Bound })({  *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 surrounding Mississippi ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 surrounding *n:X#2 ?  *t:Bound })({  *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 of Texas ?  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 of *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 York  *t:Bound })({  cityid( *n:X#1 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 York ?  *t:Bound })({  cityid( *n:X#1 york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 York ?  *t:Bound })({  stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 York City  *t:Bound })({  cityid( *n:X#1 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 York City ?  *t:Bound })({  cityid( *n:X#1 york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 York City *n:X#2  *t:Bound })({  cityid( *n:X#1 york', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 York *n:X#2  *t:Bound })({  cityid( *n:X#1 york', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 state Texas ?  *t:Bound })({  *n:X#1 state( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  of *n:X#1 state *n:X#2 ?  *t:Bound })({  *n:X#1 state( stateid( *n:X#2  }) weight 0.0
*n:X -> ({ rivers })({ river( }) weight 0.0
*n:X -> ({ rivers are })({ river( loc_2( }) weight 0.0
*n:X -> ({ rivers are })({ river( riverid( }) weight 0.0
*n:X -> ({ rivers are in Iowa ? })({ river( loc_2( stateid( 'iowa' }) weight 0.0
*n:X -> ({ rivers are in Colorado ? })({ river( loc_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ rivers are in New York ? })({ river( loc_2( stateid( 'new york' }) weight 0.0
*n:X -> ({ rivers are in Missouri ? })({ river( loc_2( stateid( 'missouri' }) weight 0.0
*n:X -> ({ rivers are in the })({ river( loc_2( }) weight 0.0
*n:X -> ({ rivers are in the state })({ river( loc_2( state( }) weight 0.0
*n:X -> ({ rivers are in the state with })({ river( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ rivers are in the state with the highest })({ river( loc_2( state( loc_1( highest( }) weight 0.0
*n:X -> ({ rivers are in the state with the highest point })({ river( loc_2( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ rivers are in the state with the highest point ? })({ river( loc_2( state( loc_1( highest( place( all }) weight 0.0
*n:X -> ({ rivers are in the state with the largest population })({ river( loc_2( largest_one( population_1( state( }) weight 0.0
*n:X -> ({ rivers are in the state with the largest population ? })({ river( loc_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ rivers are in the state that has the most })({ river( loc_2( most( state( loc_1( }) weight 0.0
*n:X -> ({ rivers are in the state that has the most rivers })({ river( loc_2( most( state( loc_1( river( }) weight 0.0
*n:Query -> ({ *t:Bound  rivers are in the *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers are in *n:X#1 ?  *t:Bound })({  river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ rivers are found in Colorado ? })({ river( loc_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers are found *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ rivers are there in })({ river( loc_2( }) weight 0.0
*n:X -> ({ rivers are there in Idaho ? })({ river( loc_2( stateid( 'idaho' }) weight 0.0
*n:X -> ({ rivers are there in Texas ? })({ river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ rivers are there in US })({ river( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers are there in *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ rivers are called })({ river( riverid( }) weight 0.0
*n:X -> ({ rivers are called Colorado })({ river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers are called *n:X#1  *t:Bound })({  river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers are *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ rivers ? })({ river( all }) weight 0.0
*n:X -> ({ rivers in })({ river( loc_2( }) weight 0.0
*n:X -> ({ rivers in Arkansas . })({ river( loc_2( stateid( 'arkansas' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in Arkansas *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'arkansas'  }) weight 0.0
*n:X -> ({ rivers in Florida . })({ river( loc_2( stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in Florida *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'florida'  }) weight 0.0
*n:X -> ({ rivers in Texas })({ river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ rivers in Texas are longer than the Red })({ river( loc_2( stateid( 'texas' , longer( riverid( 'red' }) weight 0.0
*n:X -> ({ rivers in Texas ? })({ river( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in Texas *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ rivers in Washington ? })({ river( loc_2( stateid( 'washington' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in Washington *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'washington'  }) weight 0.0
*n:X -> ({ rivers in Ohio ? })({ river( loc_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in Ohio *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'ohio'  }) weight 0.0
*n:X -> ({ rivers in the })({ river( loc_2( }) weight 0.0
*n:X -> ({ rivers in the USA ? })({ river( all }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in the USA *n:X#1  *t:Bound })({  river( *n:X#1  }) weight 0.0
*n:X -> ({ rivers in the US })({ river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ rivers in the state })({ river( loc_2( state( }) weight 0.0
*n:X -> ({ rivers in the state of Indiana ? })({ river( loc_2( state( stateid( 'indiana' }) weight 0.0
*n:X -> ({ rivers in the state of Texas ? })({ river( loc_2( state( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in the state *n:X#1  *t:Bound })({  river( loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in the *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in *n:X#1  *t:Bound })({  river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in *n:X#1 .  *t:Bound })({  river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers in *n:X#1 ?  *t:Bound })({  river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ rivers does Alaska have ? })({ river( loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers does Alaska have *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ rivers does Colorado have ? })({ river( loc_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers does Colorado have *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers does *n:X#1 have ?  *t:Bound })({  river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers does *n:X#1 have *n:X#2  *t:Bound })({  river( loc_2( *n:X#2 *n:X#1  }) weight 0.0
*n:X -> ({ rivers cross })({ river( traverse_2( }) weight 0.0
*n:X -> ({ rivers cross Ohio ? })({ river( traverse_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers cross Ohio *n:X#1  *t:Bound })({  river( traverse_2( *n:X#1 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers cross *n:X#1  *t:Bound })({  river( traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers cross *n:X#1 ?  *t:Bound })({  river( traverse_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ rivers do })({ exclude( river( }) weight 0.0
*n:X -> ({ rivers do not traverse the })({ exclude( river( all , traverse_2( }) weight 0.0
*n:X -> ({ rivers do not traverse the state })({ exclude( river( all , traverse_2( state( }) weight 0.0
*n:X -> ({ rivers do not traverse the state with })({ exclude( river( all , traverse_2( state( loc_1( }) weight 0.0
*n:X -> ({ rivers do not traverse the state with the capital })({ exclude( river( all , traverse_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ rivers do not traverse the state with the capital Albany })({ exclude( river( all , traverse_2( state( loc_1( capital( cityid( 'albany', }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do not traverse *n:X#1  *t:Bound })({  exclude( river( *n:X#1 , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do not *n:X#1 the  *t:Bound })({  exclude( river( all , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1  *t:Bound })({  exclude( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 Albany  *t:Bound })({  exclude( river( *n:X#1 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 traverse the  *t:Bound })({  exclude( river( all *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 traverse *n:X#2  *t:Bound })({  exclude( river( *n:X#2 *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 with  *t:Bound })({  exclude( river( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 state  *t:Bound })({  exclude( river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 state with  *t:Bound })({  exclude( river( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 state *n:X#2  *t:Bound })({  exclude( river( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 the  *t:Bound })({  exclude( river( all *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 the capital  *t:Bound })({  exclude( river( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 the state  *t:Bound })({  exclude( river( all *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 the *n:X#2  *t:Bound })({  exclude( river( all *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers do *n:X#1 the *n:X#2  *t:Bound })({  exclude( river( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ rivers run through })({ river( traverse_2( }) weight 0.0
*n:X -> ({ rivers run through Texas ? })({ river( traverse_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers run through Texas *n:X#1  *t:Bound })({  river( traverse_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ rivers run through the states })({ river( traverse_2( state( }) weight 0.0
*n:X -> ({ rivers run through the states bordering })({ river( traverse_2( state( next_to_2( }) weight 0.0
*n:X -> ({ rivers run through the states bordering Colorado ? })({ river( traverse_2( state( next_to_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  rivers run through the *n:X#1  *t:Bound })({  river( traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers run through *n:X#1  *t:Bound })({  river( traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers run through *n:X#1 ?  *t:Bound })({  river( traverse_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1  *t:Bound })({  river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1  *t:Bound })({  *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 bordering  *t:Bound })({  river( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 bordering Colorado ?  *t:Bound })({  river( *n:X#1 next_to_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 bordering Colorado *n:X#2  *t:Bound })({  river( *n:X#1 next_to_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 bordering *n:X#2  *t:Bound })({  river( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 bordering *n:X#2 ?  *t:Bound })({  river( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Arkansas .  *t:Bound })({  river( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Arkansas *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Colorado  *t:Bound })({  river( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Colorado ?  *t:Bound })({  river( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Colorado *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 ?  *t:Bound })({  river( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Florida .  *t:Bound })({  river( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Florida *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Idaho ?  *t:Bound })({  river( *n:X#1 stateid( 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Idaho *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Texas  *t:Bound })({  river( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Texas ?  *t:Bound })({  river( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Texas *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Washington ?  *t:Bound })({  river( *n:X#1 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Washington *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 US  *t:Bound })({  river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Ohio ?  *t:Bound })({  river( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 Ohio *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 in Iowa ?  *t:Bound })({  river( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 in Colorado ?  *t:Bound })({  river( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 in Missouri ?  *t:Bound })({  river( *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 in *n:X#2 ?  *t:Bound })({  river( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 found *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 not traverse the  *t:Bound })({  *n:X#1 river( all , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 not traverse *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2 , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 not *n:X#2 the  *t:Bound })({  *n:X#1 river( all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 with  *t:Bound })({  river( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 with the highest  *t:Bound })({  river( *n:X#1 loc_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 with the *n:X#2  *t:Bound })({  river( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 of Indiana ?  *t:Bound })({  river( *n:X#1 stateid( 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 of Texas ?  *t:Bound })({  river( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 of *n:X#2 ?  *t:Bound })({  river( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 rivers  *t:Bound })({  river( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 point  *t:Bound })({  river( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 point ?  *t:Bound })({  river( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 point *n:X#2  *t:Bound })({  river( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 state  *t:Bound })({  river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 state with  *t:Bound })({  river( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 state *n:X#2  *t:Bound })({  river( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 state *n:X#2 ?  *t:Bound })({  river( *n:X#1 state( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 state *n:X#2 point  *t:Bound })({  river( *n:X#1 state( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 the highest  *t:Bound })({  river( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 the highest point  *t:Bound })({  river( *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 the highest *n:X#2  *t:Bound })({  river( *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 the states  *t:Bound })({  river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 the states bordering  *t:Bound })({  river( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 the states *n:X#2  *t:Bound })({  river( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 the *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 the *n:X#2 bordering  *t:Bound })({  river( *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 the *n:X#2 ?  *t:Bound })({  river( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  rivers *n:X#1 the *n:X#2 point  *t:Bound })({  river( *n:X#1 *n:X#2 place(  }) weight 0.0
*n:X -> ({ tallest })({ highest( }) weight 0.0
*n:X -> ({ tallest mountain })({ highest( mountain( }) weight 0.0
*n:X -> ({ tallest mountain in })({ highest( mountain( loc_2( }) weight 0.0
*n:X -> ({ tallest mountain in America })({ highest( mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ tallest mountain in the })({ highest( mountain( loc_2( }) weight 0.0
*n:X -> ({ tallest mountain in the United })({ highest( mountain( loc_2( countryid( }) weight 0.0
*n:X -> ({ tallest mountain in the United States })({ highest( mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  tallest mountain in the *n:X#1  *t:Bound })({  highest( mountain( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest mountain in *n:X#1  *t:Bound })({  highest( mountain( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest mountain *n:X#1  *t:Bound })({  highest( mountain( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest mountain *n:X#1 States  *t:Bound })({  highest( mountain( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest mountain *n:X#1 America  *t:Bound })({  highest( mountain( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest mountain *n:X#1 United  *t:Bound })({  highest( mountain( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest mountain *n:X#1 United States  *t:Bound })({  highest( mountain( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest mountain *n:X#1 United *n:X#2  *t:Bound })({  highest( mountain( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1  *t:Bound })({  highest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1 States  *t:Bound })({  highest( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1 America  *t:Bound })({  highest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1 United  *t:Bound })({  highest( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1 United States  *t:Bound })({  highest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1 United *n:X#2  *t:Bound })({  highest( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1 in  *t:Bound })({  highest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1 in America  *t:Bound })({  highest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1 in the  *t:Bound })({  highest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1 in the United  *t:Bound })({  highest( *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1 in the *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  tallest *n:X#1 in *n:X#2  *t:Bound })({  highest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:X -> ({ that borders })({ next_to_2( }) weight 0.0
*n:X -> ({ that borders Tennessee ? })({ next_to_2( stateid( 'tennessee' }) weight 0.0
*n:Query -> ({ *t:Bound  that borders Tennessee *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'tennessee'  }) weight 0.0
*n:X -> ({ that borders California ? })({ next_to_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  that borders California *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ that borders Indiana ? })({ next_to_2( stateid( 'indiana' }) weight 0.0
*n:Query -> ({ *t:Bound  that borders Indiana *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'indiana'  }) weight 0.0
*n:X -> ({ that borders Texas ? })({ next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  that borders Texas *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ that borders the most })({ most( }) weight 0.0
*n:X -> ({ that borders the most states })({ most( state( next_to_2( state( }) weight 0.0
*n:X -> ({ that borders the most states ? })({ most( state( next_to_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  that borders the most *n:X#1  *t:Bound })({  most( state( next_to_2( *n:X#1  }) weight 0.0
*n:X -> ({ that borders the state })({ next_to_2( state( }) weight 0.0
*n:X -> ({ that borders the state with })({ next_to_2( largest_one( }) weight 0.0
*n:X -> ({ that borders the state with })({ next_to_2( state( loc_1( }) weight 0.0
*n:X -> ({ that borders the state with the highest population })({ next_to_2( largest_one( population_1( }) weight 0.0
*n:X -> ({ that borders the state with the highest population ? })({ next_to_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ that borders the state with the lowest })({ next_to_2( state( loc_1( lowest( }) weight 0.0
*n:X -> ({ that borders the state with the lowest point })({ next_to_2( state( loc_1( lowest( place( }) weight 0.0
*n:X -> ({ that borders the state with the lowest point in the })({ next_to_2( state( loc_1( lowest( place( loc_2( }) weight 0.0
*n:X -> ({ that borders the state that borders })({ next_to_2( state( next_to_2( }) weight 0.0
*n:X -> ({ that borders the state that borders Texas ? })({ next_to_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  that borders the state *n:X#1  *t:Bound })({  next_to_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  that borders the state *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  that borders the *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  that borders the *n:X#1 with  *t:Bound })({  next_to_2( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  that borders the *n:X#1 point  *t:Bound })({  next_to_2( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  that borders *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  that borders *n:X#1 ?  *t:Bound })({  next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ that flows through })({ traverse_2( }) weight 0.0
*n:X -> ({ that flows through Colorado ? })({ traverse_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  that flows through Colorado *n:X#1  *t:Bound })({  traverse_2( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  that flows through *n:X#1  *t:Bound })({  traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  that flows through *n:X#1 ?  *t:Bound })({  traverse_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ that border })({ next_to_2( }) weight 0.0
*n:X -> ({ that border California ? })({ next_to_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  that border California *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ that border Utah . })({ next_to_2( stateid( 'utah' }) weight 0.0
*n:Query -> ({ *t:Bound  that border Utah *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'utah'  }) weight 0.0
*n:X -> ({ that border Texas ? })({ next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  that border Texas *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ that border Nebraska ? })({ next_to_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  that border Nebraska *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'nebraska'  }) weight 0.0
*n:X -> ({ that border the largest })({ next_to_2( largest( }) weight 0.0
*n:X -> ({ that border the largest state })({ next_to_2( largest( state( }) weight 0.0
*n:X -> ({ that border the largest state ? })({ next_to_2( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  that border the largest *n:X#1  *t:Bound })({  next_to_2( largest( *n:X#1  }) weight 0.0
*n:X -> ({ that border the state with the greatest })({ next_to_2( largest_one( }) weight 0.0
*n:X -> ({ that border the state with the greatest population })({ next_to_2( largest_one( population_1( }) weight 0.0
*n:X -> ({ that border the state with the greatest population ? })({ next_to_2( largest_one( population_1( state( all }) weight 0.0
*n:X -> ({ that border the state that borders the most })({ most( state( next_to_2( }) weight 0.0
*n:X -> ({ that border the state that borders the most states })({ most( state( next_to_2( state( }) weight 0.0
*n:X -> ({ that border the state that borders the most states ? })({ most( state( next_to_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  that border the state *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  that border the *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  that border the *n:X#1 ?  *t:Bound })({  next_to_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  that border the *n:X#1 state  *t:Bound })({  next_to_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  that border *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  that border *n:X#1 .  *t:Bound })({  next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  that border *n:X#1 ?  *t:Bound })({  next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ that runs through })({ traverse_2( }) weight 0.0
*n:X -> ({ that runs through Texas ? })({ traverse_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  that runs through Texas *n:X#1  *t:Bound })({  traverse_2( *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  that runs through *n:X#1  *t:Bound })({  traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  that runs through *n:X#1 ?  *t:Bound })({  traverse_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ that cross over })({ traverse_2( }) weight 0.0
*n:X -> ({ that cross over Ohio ? })({ traverse_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  that cross over Ohio *n:X#1  *t:Bound })({  traverse_2( *n:X#1 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  that cross over *n:X#1  *t:Bound })({  traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  that cross over *n:X#1 ?  *t:Bound })({  traverse_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ that passes through })({ traverse_2( }) weight 0.0
*n:X -> ({ that passes through the US })({ traverse_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  that passes through the *n:X#1  *t:Bound })({  traverse_2( *n:X#1  }) weight 0.0
*n:X -> ({ California })({ 'california' }) weight 0.0
*n:X -> ({ California . })({ stateid( 'california' }) weight 0.0
*n:X -> ({ California ? })({ stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  California *n:X#1  *t:Bound })({  *n:X#1 'california'  }) weight 0.0
*n:X -> ({ Chicago })({ 'chicago', }) weight 0.0
*n:X -> ({ Chicago ? })({ 'chicago', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Chicago *n:X#1  *t:Bound })({  'chicago', *n:X#1  }) weight 0.0
*n:X -> ({ Indiana })({ 'indiana' }) weight 0.0
*n:X -> ({ Indiana ? })({ stateid( 'indiana' }) weight 0.0
*n:Query -> ({ *t:Bound  Indiana *n:X#1  *t:Bound })({  *n:X#1 'indiana'  }) weight 0.0
*n:X -> ({ Rhode })({ 'rhode }) weight 0.0
*n:X -> ({ Rhode Island })({ 'rhode island' }) weight 0.0
*n:X -> ({ Rhode Island ? })({ stateid( 'rhode island' }) weight 0.0
*n:Query -> ({ *t:Bound  Rhode Island *n:X#1  *t:Bound })({  *n:X#1 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  Rhode *n:X#1  *t:Bound })({  'rhode *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Rhode *n:X#1 ?  *t:Bound })({  stateid( 'rhode *n:X#1  }) weight 0.0
*n:X -> ({ has })({ largest_one( }) weight 0.0
*n:X -> ({ has })({ loc_1( }) weight 0.0
*n:X -> ({ has the highest population density })({ largest_one( density_1( }) weight 0.0
*n:Query -> ({ *t:Bound  has the highest *n:X#1  *t:Bound })({  largest_one( *n:X#1  }) weight 0.0
*n:X -> ({ have })({ largest_one( }) weight 0.0
*n:X -> ({ have })({ loc_1( }) weight 0.0
*n:X -> ({ have })({ count( }) weight 0.0
*n:X -> ({ have })({ all }) weight 0.0
*n:X -> ({ have in the USA ? })({ all }) weight 0.0
*n:X -> ({ have no })({ all , }) weight 0.0
*n:X -> ({ have no surrounding })({ all , next_to_2( }) weight 0.0
*n:X -> ({ have no surrounding states })({ all , next_to_2( state( }) weight 0.0
*n:X -> ({ have no surrounding states . })({ all , next_to_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  have no surrounding states *n:X#1  *t:Bound })({  all , next_to_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have no surrounding *n:X#1  *t:Bound })({  all , next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have no surrounding *n:X#1 .  *t:Bound })({  all , next_to_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  have no *n:X#1  *t:Bound })({  all , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have no *n:X#1 .  *t:Bound })({  all , *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  have no *n:X#1 states  *t:Bound })({  all , *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  have no *n:X#1 states .  *t:Bound })({  all , *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  have no *n:X#1 states *n:X#2  *t:Bound })({  all , *n:X#1 state( *n:X#2  }) weight 0.0
*n:X -> ({ have cities })({ loc_1( city( }) weight 0.0
*n:X -> ({ have cities or towns named Springfield })({ loc_1( city( cityid( 'springfield', }) weight 0.0
*n:X -> ({ have cities or towns named Springfield ? })({ loc_1( city( cityid( 'springfield', _ }) weight 0.0
*n:Query -> ({ *t:Bound  have cities or *n:X#1  *t:Bound })({  loc_1( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have cities or *n:X#1 ?  *t:Bound })({  loc_1( city( *n:X#1 _  }) weight 0.0
*n:X -> ({ have cities named })({ loc_1( city( cityid( }) weight 0.0
*n:X -> ({ have cities named Durham })({ loc_1( city( cityid( 'durham', }) weight 0.0
*n:X -> ({ have cities named Durham ? })({ loc_1( city( cityid( 'durham', _ }) weight 0.0
*n:Query -> ({ *t:Bound  have cities named Durham *n:X#1  *t:Bound })({  loc_1( city( cityid( 'durham', *n:X#1  }) weight 0.0
*n:X -> ({ have cities named Austin })({ loc_1( city( cityid( 'austin', }) weight 0.0
*n:X -> ({ have cities named Austin ? })({ loc_1( city( cityid( 'austin', _ }) weight 0.0
*n:Query -> ({ *t:Bound  have cities named Austin *n:X#1  *t:Bound })({  loc_1( city( cityid( 'austin', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have cities named *n:X#1  *t:Bound })({  loc_1( city( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have cities named *n:X#1 ?  *t:Bound })({  loc_1( city( cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  have cities *n:X#1  *t:Bound })({  loc_1( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have cities *n:X#1 Durham  *t:Bound })({  loc_1( city( *n:X#1 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  have cities *n:X#1 Durham ?  *t:Bound })({  loc_1( city( *n:X#1 'durham', _  }) weight 0.0
*n:Query -> ({ *t:Bound  have cities *n:X#1 Durham *n:X#2  *t:Bound })({  loc_1( city( *n:X#1 'durham', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have cities *n:X#1 ?  *t:Bound })({  loc_1( city( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  have cities *n:X#1 Austin  *t:Bound })({  loc_1( city( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  have cities *n:X#1 Austin ?  *t:Bound })({  loc_1( city( *n:X#1 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  have cities *n:X#1 Austin *n:X#2  *t:Bound })({  loc_1( city( *n:X#1 'austin', *n:X#2  }) weight 0.0
*n:X -> ({ have major })({ loc_1( major( }) weight 0.0
*n:X -> ({ have major rivers })({ loc_1( major( river( }) weight 0.0
*n:X -> ({ have major rivers ? })({ loc_1( major( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  have major rivers *n:X#1  *t:Bound })({  loc_1( major( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have major *n:X#1  *t:Bound })({  loc_1( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have major *n:X#1 ?  *t:Bound })({  loc_1( major( *n:X#1 all  }) weight 0.0
*n:X -> ({ have a })({ loc_1( }) weight 0.0
*n:X -> ({ have a city })({ loc_1( city( }) weight 0.0
*n:X -> ({ have a city called Rochester })({ loc_1( city( cityid( 'rochester', }) weight 0.0
*n:X -> ({ have a city called Rochester ? })({ loc_1( city( cityid( 'rochester', _ }) weight 0.0
*n:Query -> ({ *t:Bound  have a city called *n:X#1  *t:Bound })({  loc_1( city( cityid( *n:X#1  }) weight 0.0
*n:X -> ({ have a city named })({ loc_1( city( cityid( }) weight 0.0
*n:X -> ({ have a city named Springfield })({ loc_1( city( cityid( 'springfield', }) weight 0.0
*n:X -> ({ have a city named Springfield ? })({ loc_1( city( cityid( 'springfield', _ }) weight 0.0
*n:Query -> ({ *t:Bound  have a city named *n:X#1  *t:Bound })({  loc_1( city( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have a city *n:X#1  *t:Bound })({  loc_1( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have a city *n:X#1 ?  *t:Bound })({  loc_1( city( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  have a city *n:X#1 Springfield  *t:Bound })({  loc_1( city( *n:X#1 'springfield',  }) weight 0.0
*n:X -> ({ have a higher point than })({ loc_1( place( higher_2( }) weight 0.0
*n:X -> ({ have a higher point than the highest })({ loc_1( place( higher_2( highest( }) weight 0.0
*n:X -> ({ have a higher point than the highest point })({ loc_1( place( higher_2( highest( place( }) weight 0.0
*n:X -> ({ have a higher point than the highest point of the })({ loc_1( place( higher_2( highest( place( loc_2( }) weight 0.0
*n:Query -> ({ *t:Bound  have a higher *n:X#1 than  *t:Bound })({  loc_1( *n:X#1 higher_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1  *t:Bound })({  loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 ?  *t:Bound })({  loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 Springfield  *t:Bound })({  loc_1( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 Springfield ?  *t:Bound })({  loc_1( *n:X#1 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 Springfield *n:X#2  *t:Bound })({  loc_1( *n:X#1 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 called Rochester  *t:Bound })({  loc_1( *n:X#1 cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 called *n:X#2  *t:Bound })({  loc_1( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 named  *t:Bound })({  loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 named Springfield  *t:Bound })({  loc_1( *n:X#1 cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 named *n:X#2  *t:Bound })({  loc_1( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 of the  *t:Bound })({  loc_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 of *n:X#2  *t:Bound })({  loc_1( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 point  *t:Bound })({  loc_1( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 the highest  *t:Bound })({  loc_1( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  have a *n:X#1 the *n:X#2  *t:Bound })({  loc_1( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ have rivers })({ loc_1( river( }) weight 0.0
*n:X -> ({ have rivers ? })({ loc_1( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  have rivers *n:X#1  *t:Bound })({  loc_1( river( *n:X#1  }) weight 0.0
*n:X -> ({ have the highest populations })({ largest_one( population_1( }) weight 0.0
*n:X -> ({ have the highest number })({ largest_one( }) weight 0.0
*n:X -> ({ have the highest number of citizens })({ largest_one( population_1( }) weight 0.0
*n:Query -> ({ *t:Bound  have the highest number *n:X#1  *t:Bound })({  largest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have the highest *n:X#1  *t:Bound })({  largest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1  *t:Bound })({  loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1  *t:Bound })({  all *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 .  *t:Bound })({  all *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 Durham  *t:Bound })({  loc_1( *n:X#1 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 Durham ?  *t:Bound })({  loc_1( *n:X#1 'durham', _  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 Durham *n:X#2  *t:Bound })({  loc_1( *n:X#1 'durham', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 ?  *t:Bound })({  loc_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 ?  *t:Bound })({  loc_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 Austin  *t:Bound })({  loc_1( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 Austin ?  *t:Bound })({  loc_1( *n:X#1 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 Austin *n:X#2  *t:Bound })({  loc_1( *n:X#1 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 states  *t:Bound })({  all *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 states .  *t:Bound })({  all *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 states *n:X#2  *t:Bound })({  all *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 surrounding  *t:Bound })({  all *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 surrounding states  *t:Bound })({  all *n:X#1 next_to_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 surrounding states .  *t:Bound })({  all *n:X#1 next_to_2( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 surrounding states *n:X#2  *t:Bound })({  all *n:X#1 next_to_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 surrounding *n:X#2  *t:Bound })({  all *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 surrounding *n:X#2 .  *t:Bound })({  all *n:X#1 next_to_2( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 or *n:X#2  *t:Bound })({  loc_1( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 or *n:X#2 ?  *t:Bound })({  loc_1( *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 named  *t:Bound })({  loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 named Durham  *t:Bound })({  loc_1( *n:X#1 cityid( 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 named Durham ?  *t:Bound })({  loc_1( *n:X#1 cityid( 'durham', _  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 named Durham *n:X#2  *t:Bound })({  loc_1( *n:X#1 cityid( 'durham', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 named Austin  *t:Bound })({  loc_1( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 named Austin ?  *t:Bound })({  loc_1( *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 named Austin *n:X#2  *t:Bound })({  loc_1( *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 named *n:X#2  *t:Bound })({  loc_1( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 named *n:X#2 ?  *t:Bound })({  loc_1( *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 rivers  *t:Bound })({  loc_1( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 rivers ?  *t:Bound })({  loc_1( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  have *n:X#1 rivers *n:X#2  *t:Bound })({  loc_1( *n:X#1 river( *n:X#2  }) weight 0.0
*n:X -> ({ longest })({ longest( }) weight 0.0
*n:X -> ({ longest river })({ longest( exclude( river( }) weight 0.0
*n:X -> ({ longest river })({ longest( river( }) weight 0.0
*n:X -> ({ longest river ? })({ longest( river( all }) weight 0.0
*n:X -> ({ longest river flowing through })({ longest( river( traverse_2( }) weight 0.0
*n:X -> ({ longest river flowing through New York ? })({ longest( river( traverse_2( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  longest river flowing through *n:X#1  *t:Bound })({  longest( river( traverse_2( *n:X#1  }) weight 0.0
*n:X -> ({ longest river in })({ longest( river( loc_2( }) weight 0.0
*n:X -> ({ longest river in California ? })({ longest( river( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  longest river in California *n:X#1  *t:Bound })({  longest( river( loc_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ longest river in America })({ longest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ longest river in Florida ? })({ longest( river( loc_2( stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  longest river in Florida *n:X#1  *t:Bound })({  longest( river( loc_2( *n:X#1 'florida'  }) weight 0.0
*n:X -> ({ longest river in Texas ? })({ longest( river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ longest river in Texas run ? })({ longest( river( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  longest river in Texas *n:X#1  *t:Bound })({  longest( river( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ longest river in Pennsylvania ? })({ longest( river( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  longest river in Pennsylvania *n:X#1  *t:Bound })({  longest( river( loc_2( *n:X#1 'pennsylvania'  }) weight 0.0
*n:X -> ({ longest river in Mississippi ? })({ longest( river( loc_2( stateid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  longest river in Mississippi *n:X#1  *t:Bound })({  longest( river( loc_2( *n:X#1 'mississippi'  }) weight 0.0
*n:X -> ({ longest river in New York ? })({ longest( river( loc_2( stateid( 'new york' }) weight 0.0
*n:X -> ({ longest river in US })({ longest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ longest river in the })({ longest( river( loc_2( }) weight 0.0
*n:X -> ({ longest river in the USA })({ longest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ longest river in the United })({ longest( river( loc_2( countryid( }) weight 0.0
*n:X -> ({ longest river in the United States })({ longest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ longest river in the US })({ longest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ longest river in the states })({ longest( river( loc_2( state( }) weight 0.0
*n:X -> ({ longest river in the states that border })({ longest( river( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ longest river in the states that border Nebraska ? })({ longest( river( loc_2( state( next_to_2( stateid( 'nebraska' }) weight 0.0
*n:X -> ({ longest river in the largest })({ longest( river( loc_2( largest( }) weight 0.0
*n:X -> ({ longest river in the largest state })({ longest( river( loc_2( largest( state( }) weight 0.0
*n:X -> ({ longest river in the largest state ? })({ longest( river( loc_2( largest( state( all }) weight 0.0
*n:X -> ({ longest river in the smallest })({ longest( river( loc_2( smallest( }) weight 0.0
*n:X -> ({ longest river in the smallest state })({ longest( river( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ longest river in the smallest state in the })({ longest( river( loc_2( smallest( state( loc_2( }) weight 0.0
*n:X -> ({ longest river in the smallest state in the USA })({ longest( river( loc_2( smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ longest river in the state })({ longest( river( loc_2( state( }) weight 0.0
*n:X -> ({ longest river in the state with })({ longest( river( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ longest river in the state with the highest })({ longest( river( loc_2( state( loc_1( highest( }) weight 0.0
*n:X -> ({ longest river in the state with the highest point })({ longest( river( loc_2( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ longest river in the state with the highest point ? })({ longest( river( loc_2( state( loc_1( highest( place( all }) weight 0.0
*n:X -> ({ longest river in the state with the most })({ longest( river( loc_2( most( state( loc_1( }) weight 0.0
*n:X -> ({ longest river in the state with the most major })({ longest( river( loc_2( most( state( loc_1( major( }) weight 0.0
*n:X -> ({ longest river in the state with the most major cities })({ longest( river( loc_2( most( state( loc_1( major( city( }) weight 0.0
*n:Query -> ({ *t:Bound  longest river in the *n:X#1  *t:Bound })({  longest( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river in *n:X#1  *t:Bound })({  longest( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river in *n:X#1 ?  *t:Bound })({  longest( river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ longest river runs ? })({ longest( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  longest river runs *n:X#1  *t:Bound })({  longest( river( *n:X#1  }) weight 0.0
*n:X -> ({ longest river that flows through })({ longest( river( traverse_2( }) weight 0.0
*n:X -> ({ longest river that flows through Colorado ? })({ longest( river( traverse_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ longest river that flows through a state })({ longest( river( traverse_2( state( }) weight 0.0
*n:X -> ({ longest river that flows through a state that borders })({ longest( river( traverse_2( state( next_to_2( }) weight 0.0
*n:X -> ({ longest river that runs through })({ longest( river( traverse_2( }) weight 0.0
*n:X -> ({ longest river that runs through Texas ? })({ longest( river( traverse_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ longest river that runs through a state })({ longest( river( traverse_2( state( }) weight 0.0
*n:X -> ({ longest river that runs through a state that borders })({ longest( river( traverse_2( state( next_to_2( }) weight 0.0
*n:Query -> ({ *t:Bound  longest river that runs *n:X#1  *t:Bound })({  longest( river( *n:X#1  }) weight 0.0
*n:X -> ({ longest river that does not })({ longest( exclude( river( all , }) weight 0.0
*n:X -> ({ longest river that does not run through })({ longest( exclude( river( all , traverse_2( }) weight 0.0
*n:X -> ({ longest river that does not run through Texas ? })({ longest( exclude( river( all , traverse_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  longest river that does *n:X#1  *t:Bound })({  longest( exclude( river( all *n:X#1  }) weight 0.0
*n:X -> ({ longest river that passes })({ longest( river( traverse_2( }) weight 0.0
*n:X -> ({ longest river that passes through })({ longest( river( traverse_2( }) weight 0.0
*n:X -> ({ longest river that passes through the US })({ longest( river( traverse_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ longest river that passes the states })({ longest( river( traverse_2( state( }) weight 0.0
*n:Query -> ({ *t:Bound  longest river that *n:X#1  *t:Bound })({  longest( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1  *t:Bound })({  longest( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 States  *t:Bound })({  longest( river( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 California ?  *t:Bound })({  longest( river( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 California *n:X#2  *t:Bound })({  longest( river( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 America  *t:Bound })({  longest( river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Colorado ?  *t:Bound })({  longest( river( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Colorado *n:X#2  *t:Bound })({  longest( river( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 ?  *t:Bound })({  longest( river( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Florida ?  *t:Bound })({  longest( river( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Florida *n:X#2  *t:Bound })({  longest( river( *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Texas ?  *t:Bound })({  longest( river( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Texas *n:X#2  *t:Bound })({  longest( river( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 USA  *t:Bound })({  longest( river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 United  *t:Bound })({  longest( river( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 United States  *t:Bound })({  longest( river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 United *n:X#2  *t:Bound })({  longest( river( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Pennsylvania ?  *t:Bound })({  longest( river( *n:X#1 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Pennsylvania *n:X#2  *t:Bound })({  longest( river( *n:X#1 *n:X#2 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Mississippi ?  *t:Bound })({  longest( river( *n:X#1 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Mississippi *n:X#2  *t:Bound })({  longest( river( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Nebraska ?  *t:Bound })({  longest( river( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 Nebraska *n:X#2  *t:Bound })({  longest( river( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 US  *t:Bound })({  longest( river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 states  *t:Bound })({  longest( river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 states *n:X#2  *t:Bound })({  longest( river( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 in the  *t:Bound })({  longest( river( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 largest  *t:Bound })({  longest( river( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 largest state  *t:Bound })({  longest( river( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 largest *n:X#2  *t:Bound })({  longest( river( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 cities  *t:Bound })({  longest( river( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 major  *t:Bound })({  longest( river( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 major cities  *t:Bound })({  longest( river( *n:X#1 major( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 major *n:X#2  *t:Bound })({  longest( river( *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 with  *t:Bound })({  longest( river( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 that border  *t:Bound })({  longest( river( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 point  *t:Bound })({  longest( river( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 point ?  *t:Bound })({  longest( river( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 point *n:X#2  *t:Bound })({  longest( river( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 smallest  *t:Bound })({  longest( river( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 smallest state  *t:Bound })({  longest( river( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 smallest *n:X#2  *t:Bound })({  longest( river( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 state  *t:Bound })({  longest( river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 state ?  *t:Bound })({  longest( river( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 state with  *t:Bound })({  longest( river( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 state *n:X#2  *t:Bound })({  longest( river( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 the highest  *t:Bound })({  longest( river( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 the US  *t:Bound })({  longest( river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest river *n:X#1 the *n:X#2  *t:Bound })({  longest( river( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1  *t:Bound })({  longest( exclude( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1  *t:Bound })({  longest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 States  *t:Bound })({  longest( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 California ?  *t:Bound })({  longest( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 California *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 America  *t:Bound })({  longest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Colorado ?  *t:Bound })({  longest( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Colorado *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 ?  *t:Bound })({  longest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 flowing through  *t:Bound })({  longest( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 flowing through *n:X#2  *t:Bound })({  longest( *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Florida ?  *t:Bound })({  longest( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Florida *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Texas ?  *t:Bound })({  longest( exclude( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Texas ?  *t:Bound })({  longest( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Texas run ?  *t:Bound })({  longest( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Texas run *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Texas *n:X#2  *t:Bound })({  longest( exclude( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Texas *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 USA  *t:Bound })({  longest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 United  *t:Bound })({  longest( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 United States  *t:Bound })({  longest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 United *n:X#2  *t:Bound })({  longest( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Pennsylvania ?  *t:Bound })({  longest( *n:X#1 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Pennsylvania *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Mississippi ?  *t:Bound })({  longest( *n:X#1 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Mississippi *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 New York ?  *t:Bound })({  longest( *n:X#1 stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 New York *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 New *n:X#2 ?  *t:Bound })({  longest( *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Nebraska ?  *t:Bound })({  longest( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 Nebraska *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 US  *t:Bound })({  longest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 states  *t:Bound })({  longest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 states that border  *t:Bound })({  longest( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 states *n:X#2  *t:Bound })({  longest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in  *t:Bound })({  longest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in California ?  *t:Bound })({  longest( *n:X#1 loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in California *n:X#2  *t:Bound })({  longest( *n:X#1 loc_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in America  *t:Bound })({  longest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in Florida ?  *t:Bound })({  longest( *n:X#1 loc_2( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in Florida *n:X#2  *t:Bound })({  longest( *n:X#1 loc_2( *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in Texas ?  *t:Bound })({  longest( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in Texas *n:X#2  *t:Bound })({  longest( *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in Pennsylvania ?  *t:Bound })({  longest( *n:X#1 loc_2( stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in Pennsylvania *n:X#2  *t:Bound })({  longest( *n:X#1 loc_2( *n:X#2 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in Mississippi ?  *t:Bound })({  longest( *n:X#1 loc_2( stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in Mississippi *n:X#2  *t:Bound })({  longest( *n:X#1 loc_2( *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in US  *t:Bound })({  longest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in the  *t:Bound })({  longest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in the USA  *t:Bound })({  longest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in the United  *t:Bound })({  longest( *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in the US  *t:Bound })({  longest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in the states  *t:Bound })({  longest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in the largest  *t:Bound })({  longest( *n:X#1 loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in the smallest  *t:Bound })({  longest( *n:X#1 loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in the state  *t:Bound })({  longest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in the *n:X#2  *t:Bound })({  longest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in *n:X#2  *t:Bound })({  longest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 in *n:X#2 ?  *t:Bound })({  longest( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 largest  *t:Bound })({  longest( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 largest state  *t:Bound })({  longest( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 largest state ?  *t:Bound })({  longest( *n:X#1 largest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 largest state *n:X#2  *t:Bound })({  longest( *n:X#1 largest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 largest *n:X#2  *t:Bound })({  longest( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 largest *n:X#2 ?  *t:Bound })({  longest( *n:X#1 largest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 runs ?  *t:Bound })({  longest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 runs *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 cities  *t:Bound })({  longest( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 major  *t:Bound })({  longest( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 major cities  *t:Bound })({  longest( *n:X#1 major( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 major *n:X#2  *t:Bound })({  longest( *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 with  *t:Bound })({  longest( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 with the highest  *t:Bound })({  longest( *n:X#1 loc_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 with the *n:X#2  *t:Bound })({  longest( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 a state  *t:Bound })({  longest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 a state *n:X#2  *t:Bound })({  longest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 a *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 run through  *t:Bound })({  longest( exclude( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 run through *n:X#2  *t:Bound })({  longest( exclude( *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 that borders  *t:Bound })({  longest( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 that flows through  *t:Bound })({  longest( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 that border  *t:Bound })({  longest( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 that border *n:X#2  *t:Bound })({  longest( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 that runs through  *t:Bound })({  longest( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 that runs *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 that does not  *t:Bound })({  longest( exclude( *n:X#1 all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 that does *n:X#2  *t:Bound })({  longest( exclude( *n:X#1 all *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 that passes  *t:Bound })({  longest( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 that passes through  *t:Bound })({  longest( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 that *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 point  *t:Bound })({  longest( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 point ?  *t:Bound })({  longest( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 point *n:X#2  *t:Bound })({  longest( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 smallest  *t:Bound })({  longest( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 smallest state  *t:Bound })({  longest( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 smallest state *n:X#2  *t:Bound })({  longest( *n:X#1 smallest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 smallest *n:X#2  *t:Bound })({  longest( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 state  *t:Bound })({  longest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 state ?  *t:Bound })({  longest( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 state in the  *t:Bound })({  longest( *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 state with  *t:Bound })({  longest( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 state *n:X#2  *t:Bound })({  longest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 state *n:X#2 ?  *t:Bound })({  longest( *n:X#1 state( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 state *n:X#2 point  *t:Bound })({  longest( *n:X#1 state( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 the highest  *t:Bound })({  longest( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 the highest point  *t:Bound })({  longest( *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 the highest *n:X#2  *t:Bound })({  longest( *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 the US  *t:Bound })({  longest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 the states  *t:Bound })({  longest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 the *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 the *n:X#2 ?  *t:Bound })({  longest( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  longest *n:X#1 the *n:X#2 point  *t:Bound })({  longest( *n:X#1 *n:X#2 place(  }) weight 0.0
*n:X -> ({ me })({ answer( }) weight 0.0
*n:X -> ({ me what is the })({ answer( }) weight 0.0
*n:X -> ({ me what is the highest })({ answer( highest( }) weight 0.0
*n:X -> ({ me what is the highest point })({ answer( highest( place( }) weight 0.0
*n:X -> ({ me what is the highest point in the })({ answer( highest( place( loc_2( }) weight 0.0
*n:X -> ({ me what is the highest point in the state })({ answer( highest( place( loc_2( state( }) weight 0.0
*n:Query -> ({ *t:Bound  me what is the *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:X -> ({ me what cities })({ answer( city( }) weight 0.0
*n:X -> ({ me what cities are })({ answer( city( loc_2( }) weight 0.0
*n:X -> ({ me what cities are in Texas . })({ answer( city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  me what cities *n:X#1  *t:Bound })({  answer( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  me what *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  me what *n:X#1 are  *t:Bound })({  answer( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  me what *n:X#1 in *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ me all the major })({ answer( major( }) weight 0.0
*n:X -> ({ me all the major lakes })({ answer( major( lake( }) weight 0.0
*n:X -> ({ me all the major lakes in the })({ answer( major( lake( loc_2( }) weight 0.0
*n:X -> ({ me all the major lakes in the US })({ answer( major( lake( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  me all the major *n:X#1  *t:Bound })({  answer( major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  me all the *n:X#1  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  me all the *n:X#1 lakes  *t:Bound })({  answer( *n:X#1 lake(  }) weight 0.0
*n:Query -> ({ *t:Bound  me all the *n:X#1 US  *t:Bound })({  answer( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ populated })({ population_1( }) weight 0.0
*n:X -> ({ populated capital })({ population_1( capital( }) weight 0.0
*n:X -> ({ populated capital in the })({ population_1( capital( loc_2( }) weight 0.0
*n:X -> ({ populated capital in the USA })({ population_1( capital( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  populated capital in the *n:X#1  *t:Bound })({  population_1( capital( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populated capital *n:X#1  *t:Bound })({  population_1( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populated capital *n:X#1 USA  *t:Bound })({  population_1( capital( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ populated state })({ population_1( state( }) weight 0.0
*n:X -> ({ populated state bordering })({ population_1( state( next_to_2( }) weight 0.0
*n:X -> ({ populated state bordering Oklahoma ? })({ population_1( state( next_to_2( stateid( 'oklahoma' }) weight 0.0
*n:Query -> ({ *t:Bound  populated state bordering Oklahoma *n:X#1  *t:Bound })({  population_1( state( next_to_2( *n:X#1 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  populated state bordering *n:X#1  *t:Bound })({  population_1( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populated state bordering *n:X#1 ?  *t:Bound })({  population_1( state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populated state *n:X#1  *t:Bound })({  population_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populated state *n:X#1 Oklahoma ?  *t:Bound })({  population_1( state( *n:X#1 stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  populated state *n:X#1 Oklahoma *n:X#2  *t:Bound })({  population_1( state( *n:X#1 *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1 bordering  *t:Bound })({  population_1( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1 bordering Oklahoma ?  *t:Bound })({  population_1( *n:X#1 next_to_2( stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1 bordering Oklahoma *n:X#2  *t:Bound })({  population_1( *n:X#1 next_to_2( *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1 bordering *n:X#2  *t:Bound })({  population_1( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1 bordering *n:X#2 ?  *t:Bound })({  population_1( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1 USA  *t:Bound })({  population_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1 Oklahoma ?  *t:Bound })({  population_1( *n:X#1 stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1 Oklahoma *n:X#2  *t:Bound })({  population_1( *n:X#1 *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1 in the  *t:Bound })({  population_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1 in the USA  *t:Bound })({  population_1( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  populated *n:X#1 in the *n:X#2  *t:Bound })({  population_1( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:X -> ({ runs })({ riverid( }) weight 0.0
*n:X -> ({ runs through })({ traverse_1( riverid( }) weight 0.0
*n:Query -> ({ *t:Bound  runs *n:X#1  *t:Bound })({  *n:X#1 riverid(  }) weight 0.0
*n:X -> ({ Colorado })({ 'colorado' }) weight 0.0
*n:X -> ({ Colorado . })({ stateid( 'colorado' }) weight 0.0
*n:X -> ({ Colorado ? })({ stateid( 'colorado' }) weight 0.0
*n:X -> ({ Colorado and })({ 'colorado' , }) weight 0.0
*n:X -> ({ Colorado and border })({ 'colorado' , next_to_2( }) weight 0.0
*n:X -> ({ Colorado and border New Mexico ? })({ 'colorado' , next_to_2( stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado and border *n:X#1  *t:Bound })({  'colorado' , next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado and border *n:X#1 ?  *t:Bound })({  'colorado' , next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado and *n:X#1  *t:Bound })({  'colorado' , *n:X#1  }) weight 0.0
*n:X -> ({ Colorado river })({ 'colorado' , river( }) weight 0.0
*n:X -> ({ Colorado river })({ river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ Colorado river in })({ 'colorado' , river( loc_2( }) weight 0.0
*n:X -> ({ Colorado river runs })({ river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ Colorado river flow })({ river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ Colorado river run })({ river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado river *n:X#1  *t:Bound })({  'colorado' , river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado river *n:X#1  *t:Bound })({  river( *n:X#1 'colorado'  }) weight 0.0
*n:X -> ({ Colorado rivers are })({ river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado rivers *n:X#1  *t:Bound })({  river( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1  *t:Bound })({  'colorado' , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1  *t:Bound })({  'colorado' *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1  *t:Bound })({  *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1  *t:Bound })({  *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1 are  *t:Bound })({  *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1 New Mexico ?  *t:Bound })({  'colorado' *n:X#1 stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1 New Mexico *n:X#2  *t:Bound })({  'colorado' *n:X#1 *n:X#2 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1 New *n:X#2 ?  *t:Bound })({  'colorado' *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1 in  *t:Bound })({  'colorado' , *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1 border  *t:Bound })({  'colorado' *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1 border *n:X#2  *t:Bound })({  'colorado' *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1 border *n:X#2 ?  *t:Bound })({  'colorado' *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1 runs  *t:Bound })({  *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1 flow  *t:Bound })({  *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  Colorado *n:X#1 run  *t:Bound })({  *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:X -> ({ Detroit })({ 'detroit', }) weight 0.0
*n:X -> ({ Detroit ? })({ 'detroit', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Detroit *n:X#1  *t:Bound })({  'detroit', *n:X#1  }) weight 0.0
*n:X -> ({ Erie })({ 'erie', }) weight 0.0
*n:X -> ({ Erie Pennsylvania })({ 'erie', 'pa' }) weight 0.0
*n:Query -> ({ *t:Bound  Erie *n:X#1  *t:Bound })({  'erie', *n:X#1  }) weight 0.0
*n:X -> ({ Grande })({ grande' }) weight 0.0
*n:X -> ({ Hampshire })({ hampshire' }) weight 0.0
*n:X -> ({ Kalamazoo })({ 'kalamazoo', }) weight 0.0
*n:X -> ({ Kalamazoo ? })({ 'kalamazoo', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Kalamazoo *n:X#1  *t:Bound })({  'kalamazoo', *n:X#1  }) weight 0.0
*n:X -> ({ Missouri })({ 'mo' }) weight 0.0
*n:X -> ({ Missouri })({ 'missouri' }) weight 0.0
*n:X -> ({ Missouri ? })({ stateid( 'missouri' }) weight 0.0
*n:X -> ({ Missouri border ? })({ stateid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  Missouri border *n:X#1  *t:Bound })({  *n:X#1 'missouri'  }) weight 0.0
*n:X -> ({ Missouri river })({ river( riverid( 'missouri' }) weight 0.0
*n:X -> ({ Missouri river run })({ river( riverid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  Missouri river *n:X#1  *t:Bound })({  river( *n:X#1 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  Missouri *n:X#1  *t:Bound })({  *n:X#1 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  Missouri *n:X#1  *t:Bound })({  *n:X#1 riverid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  Missouri *n:X#1 run  *t:Bound })({  *n:X#1 riverid( 'missouri'  }) weight 0.0
*n:X -> ({ Number })({ count( }) weight 0.0
*n:X -> ({ Number of states bordering Iowa ? })({ count( state( next_to_2( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  Number of *n:X#1 Iowa ?  *t:Bound })({  count( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  Number *n:X#1  *t:Bound })({  count( *n:X#1  }) weight 0.0
*n:X -> ({ Vermont })({ 'vermont' }) weight 0.0
*n:X -> ({ Vermont ? })({ stateid( 'vermont' }) weight 0.0
*n:Query -> ({ *t:Bound  Vermont *n:X#1  *t:Bound })({  *n:X#1 'vermont'  }) weight 0.0
*n:X -> ({ cities })({ city( }) weight 0.0
*n:X -> ({ cities are })({ city( loc_2( }) weight 0.0
*n:X -> ({ cities are })({ major( city( loc_2( }) weight 0.0
*n:X -> ({ cities are in })({ city( loc_2( }) weight 0.0
*n:X -> ({ cities are in Arizona ? })({ city( loc_2( stateid( 'arizona' }) weight 0.0
*n:X -> ({ cities are in Louisiana ? })({ city( loc_2( stateid( 'louisiana' }) weight 0.0
*n:X -> ({ cities are in Florida ? })({ city( loc_2( stateid( 'florida' }) weight 0.0
*n:X -> ({ cities are in Texas . })({ city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ cities are in Texas ? })({ city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  cities are in Texas *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ cities are in Montana ? })({ city( loc_2( stateid( 'montana' }) weight 0.0
*n:X -> ({ cities are in Pennsylvania ? })({ major( city( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:X -> ({ cities are in states })({ city( loc_2( state( }) weight 0.0
*n:X -> ({ cities are in states bordering })({ city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ cities are in states bordering Utah ? })({ city( loc_2( state( next_to_2( stateid( 'utah' }) weight 0.0
*n:X -> ({ cities are in states bordering Nebraska ? })({ city( loc_2( state( next_to_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  cities are in states *n:X#1  *t:Bound })({  city( loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities are in *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities are in *n:X#1 .  *t:Bound })({  city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities are in *n:X#1 bordering  *t:Bound })({  city( loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities are in *n:X#1 ?  *t:Bound })({  city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities are in *n:X#1 ?  *t:Bound })({  major( city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ cities are there in })({ city( loc_2( }) weight 0.0
*n:X -> ({ cities are there in Oregon ? })({ city( loc_2( stateid( 'oregon' }) weight 0.0
*n:X -> ({ cities are there in USA })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ cities are there in US })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ cities are there in the })({ city( loc_2( }) weight 0.0
*n:X -> ({ cities are there in the United })({ city( loc_2( countryid( }) weight 0.0
*n:X -> ({ cities are there in the United States })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ cities are there in the US })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  cities are there in *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ cities are located in Pennsylvania ? })({ city( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  cities are located *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities are *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities are *n:X#1  *t:Bound })({  major( city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ cities ? })({ city( all }) weight 0.0
*n:X -> ({ cities in })({ city( loc_2( }) weight 0.0
*n:X -> ({ cities in Alaska ? })({ city( loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Alaska *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ cities in California ? })({ city( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in California *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ cities in Delaware ? })({ city( loc_2( stateid( 'delaware' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Delaware *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'delaware'  }) weight 0.0
*n:X -> ({ cities in Alabama ? })({ city( loc_2( stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Alabama *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'alabama'  }) weight 0.0
*n:X -> ({ cities in Colorado . })({ city( loc_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Colorado *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'colorado'  }) weight 0.0
*n:X -> ({ cities in Rhode Island ? })({ city( loc_2( stateid( 'rhode island' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Rhode Island *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Rhode *n:X#1 ?  *t:Bound })({  city( loc_2( stateid( 'rhode *n:X#1  }) weight 0.0
*n:X -> ({ cities in North Carolina ? })({ city( loc_2( stateid( 'north carolina' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in North Carolina *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'north carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in North *n:X#1 ?  *t:Bound })({  city( loc_2( stateid( 'north *n:X#1  }) weight 0.0
*n:X -> ({ cities in Virginia . })({ city( loc_2( stateid( 'virginia' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Virginia *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'virginia'  }) weight 0.0
*n:X -> ({ cities in Wisconsin ? })({ city( loc_2( stateid( 'wisconsin' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Wisconsin *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'wisconsin'  }) weight 0.0
*n:X -> ({ cities in Kansas ? })({ city( loc_2( stateid( 'kansas' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Kansas *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'kansas'  }) weight 0.0
*n:X -> ({ cities in Texas . })({ city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ cities in Texas ? })({ city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ cities in Texas have the highest populations ? })({ largest_one( population_1( city( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ cities in Texas have the highest number of citizens ? })({ largest_one( population_1( city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Texas *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Texas *n:X#1 ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'texas'  }) weight 0.0
*n:X -> ({ cities in Montana ? })({ city( loc_2( stateid( 'montana' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Montana *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'montana'  }) weight 0.0
*n:X -> ({ cities in USA })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ cities in New Mexico ? })({ city( loc_2( stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in New Mexico *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'new mexico'  }) weight 0.0
*n:X -> ({ cities in New York ? })({ city( loc_2( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in New York *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in New *n:X#1 ?  *t:Bound })({  city( loc_2( stateid( 'new *n:X#1  }) weight 0.0
*n:X -> ({ cities in Wyoming ? })({ city( loc_2( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Wyoming *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'wyoming'  }) weight 0.0
*n:X -> ({ cities in Missouri ? })({ city( loc_2( stateid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Missouri *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'missouri'  }) weight 0.0
*n:X -> ({ cities in Oklahoma ? })({ city( loc_2( stateid( 'oklahoma' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Oklahoma *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'oklahoma'  }) weight 0.0
*n:X -> ({ cities in Ohio ? })({ city( loc_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Ohio *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'ohio'  }) weight 0.0
*n:X -> ({ cities in states })({ city( loc_2( state( }) weight 0.0
*n:X -> ({ cities in states through which })({ city( loc_2( state( traverse_1( }) weight 0.0
*n:X -> ({ cities in states through which the Mississippi runs })({ city( loc_2( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in states *n:X#1  *t:Bound })({  city( loc_2( state( *n:X#1  }) weight 0.0
*n:X -> ({ cities in Vermont ? })({ city( loc_2( stateid( 'vermont' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in Vermont *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'vermont'  }) weight 0.0
*n:X -> ({ cities in the })({ city( loc_2( }) weight 0.0
*n:X -> ({ cities in the USA })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ cities in the states })({ city( loc_2( state( }) weight 0.0
*n:X -> ({ cities in the states through which })({ city( loc_2( state( traverse_1( }) weight 0.0
*n:X -> ({ cities in the states through which the major })({ city( loc_2( state( traverse_1( major( }) weight 0.0
*n:X -> ({ cities in the states through which the major river })({ city( loc_2( state( traverse_1( major( river( }) weight 0.0
*n:X -> ({ cities in the states through which the major river in })({ city( loc_2( state( traverse_1( major( river( loc_2( }) weight 0.0
*n:X -> ({ cities in the states that border })({ city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ cities in the states that border the largest })({ city( loc_2( state( next_to_2( largest( }) weight 0.0
*n:X -> ({ cities in the states that border the largest state })({ city( loc_2( state( next_to_2( largest( state( }) weight 0.0
*n:X -> ({ cities in the states that border the largest state ? })({ city( loc_2( state( next_to_2( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  cities in the states *n:X#1  *t:Bound })({  city( loc_2( state( *n:X#1  }) weight 0.0
*n:X -> ({ cities in the largest })({ city( loc_2( largest( }) weight 0.0
*n:X -> ({ cities in the largest state })({ city( loc_2( largest( state( }) weight 0.0
*n:X -> ({ cities in the largest state ? })({ city( loc_2( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  cities in the largest *n:X#1  *t:Bound })({  city( loc_2( largest( *n:X#1  }) weight 0.0
*n:X -> ({ cities in the smallest })({ city( loc_2( smallest( }) weight 0.0
*n:X -> ({ cities in the smallest state })({ city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ cities in the smallest state in the })({ city( loc_2( smallest( state( loc_2( }) weight 0.0
*n:X -> ({ cities in the smallest state in the US })({ city( loc_2( smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in the smallest *n:X#1  *t:Bound })({  city( loc_2( smallest( *n:X#1  }) weight 0.0
*n:X -> ({ cities in the state })({ city( loc_2( state( }) weight 0.0
*n:X -> ({ cities in the state of California ? })({ city( loc_2( state( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  cities in the state *n:X#1  *t:Bound })({  city( loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in the *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in the *n:X#1 ?  *t:Bound })({  city( loc_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in the *n:X#1 US  *t:Bound })({  city( loc_2( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in the *n:X#1 in  *t:Bound })({  city( loc_2( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in the *n:X#1 river  *t:Bound })({  city( loc_2( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in the *n:X#1 state  *t:Bound })({  city( loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 Island ?  *t:Bound })({  city( loc_2( stateid( *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 Island *n:X#2  *t:Bound })({  city( loc_2( *n:X#2 *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 .  *t:Bound })({  city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 Mexico ?  *t:Bound })({  city( loc_2( stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 Mexico *n:X#2  *t:Bound })({  city( loc_2( *n:X#2 *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 Carolina ?  *t:Bound })({  city( loc_2( stateid( *n:X#1 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 Carolina *n:X#2  *t:Bound })({  city( loc_2( *n:X#2 *n:X#1 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 ?  *t:Bound })({  city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 through which  *t:Bound })({  city( loc_2( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 York ?  *t:Bound })({  city( loc_2( stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 York *n:X#2  *t:Bound })({  city( loc_2( *n:X#2 *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities in *n:X#1 the *n:X#2  *t:Bound })({  city( loc_2( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ cities does Texas have ? })({ city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  cities does Texas have *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ cities does the })({ city( loc_2( }) weight 0.0
*n:X -> ({ cities does the USA })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  cities does the *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities does *n:X#1 have ?  *t:Bound })({  city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities does *n:X#1 have *n:X#2  *t:Bound })({  city( loc_2( *n:X#2 *n:X#1  }) weight 0.0
*n:X -> ({ cities or towns named Springfield })({ city( cityid( 'springfield', }) weight 0.0
*n:X -> ({ cities or towns named Springfield ? })({ city( cityid( 'springfield', _ }) weight 0.0
*n:Query -> ({ *t:Bound  cities or towns *n:X#1 Springfield  *t:Bound })({  city( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  cities or *n:X#1  *t:Bound })({  city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities or *n:X#1 ?  *t:Bound })({  city( *n:X#1 _  }) weight 0.0
*n:X -> ({ cities named })({ city( cityid( }) weight 0.0
*n:X -> ({ cities named })({ intersection( city( cityid( }) weight 0.0
*n:X -> ({ cities named Durham })({ city( cityid( 'durham', }) weight 0.0
*n:X -> ({ cities named Durham ? })({ city( cityid( 'durham', _ }) weight 0.0
*n:Query -> ({ *t:Bound  cities named Durham *n:X#1  *t:Bound })({  city( cityid( 'durham', *n:X#1  }) weight 0.0
*n:X -> ({ cities named Austin })({ city( cityid( 'austin', }) weight 0.0
*n:X -> ({ cities named Austin })({ intersection( city( cityid( 'austin', }) weight 0.0
*n:X -> ({ cities named Austin are there in the USA ? })({ intersection( city( cityid( 'austin', _ , loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ cities named Austin ? })({ city( cityid( 'austin', _ }) weight 0.0
*n:Query -> ({ *t:Bound  cities named Austin *n:X#1  *t:Bound })({  city( cityid( 'austin', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities named Austin *n:X#1  *t:Bound })({  intersection( city( cityid( 'austin', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities named *n:X#1  *t:Bound })({  city( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities named *n:X#1  *t:Bound })({  intersection( city( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities named *n:X#1 ?  *t:Bound })({  city( cityid( *n:X#1 _  }) weight 0.0
*n:X -> ({ cities of the })({ city( loc_2( }) weight 0.0
*n:X -> ({ cities of the United })({ city( loc_2( countryid( }) weight 0.0
*n:X -> ({ cities of the United States })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  cities of the United *n:X#1  *t:Bound })({  city( loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ cities of the US })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ cities of the states })({ city( loc_2( state( }) weight 0.0
*n:X -> ({ cities of the states which border })({ city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ cities of the states which border Texas ? })({ city( loc_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  cities of the *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of the *n:X#1 States  *t:Bound })({  city( loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of *n:X#1  *t:Bound })({  city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of *n:X#1 States  *t:Bound })({  city( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of *n:X#1 Texas ?  *t:Bound })({  city( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of *n:X#1 Texas *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of *n:X#1 United  *t:Bound })({  city( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of *n:X#1 United States  *t:Bound })({  city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of *n:X#1 United *n:X#2  *t:Bound })({  city( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of *n:X#1 US  *t:Bound })({  city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of *n:X#1 states  *t:Bound })({  city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of *n:X#1 which border  *t:Bound })({  city( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities of *n:X#1 which *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ cities which are })({ city( loc_2( }) weight 0.0
*n:X -> ({ cities which are in Texas . })({ city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  cities which are in *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities which *n:X#1  *t:Bound })({  city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities which *n:X#1 in *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1  *t:Bound })({  city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 States  *t:Bound })({  city( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Oregon ?  *t:Bound })({  city( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Oregon *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Alaska ?  *t:Bound })({  city( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Alaska *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 California ?  *t:Bound })({  city( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 California *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Delaware ?  *t:Bound })({  city( *n:X#1 stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Delaware *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 bordering  *t:Bound })({  city( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 bordering Utah ?  *t:Bound })({  city( *n:X#1 next_to_2( stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 bordering Utah *n:X#2  *t:Bound })({  city( *n:X#1 next_to_2( *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 bordering Nebraska ?  *t:Bound })({  city( *n:X#1 next_to_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 bordering Nebraska *n:X#2  *t:Bound })({  city( *n:X#1 next_to_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 bordering *n:X#2  *t:Bound })({  city( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 bordering *n:X#2 ?  *t:Bound })({  city( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Durham  *t:Bound })({  city( *n:X#1 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Durham ?  *t:Bound })({  city( *n:X#1 'durham', _  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Durham *n:X#2  *t:Bound })({  city( *n:X#1 'durham', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Alabama ?  *t:Bound })({  city( *n:X#1 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Alabama *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Colorado .  *t:Bound })({  city( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Colorado *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 ?  *t:Bound })({  city( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 ?  *t:Bound })({  city( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Rhode Island ?  *t:Bound })({  city( *n:X#1 stateid( 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Rhode Island *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Rhode *n:X#2 ?  *t:Bound })({  city( *n:X#1 stateid( 'rhode *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Austin  *t:Bound })({  city( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Austin ?  *t:Bound })({  city( *n:X#1 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Austin *n:X#2  *t:Bound })({  city( *n:X#1 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 North Carolina ?  *t:Bound })({  city( *n:X#1 stateid( 'north carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 North Carolina *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'north carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 North *n:X#2 ?  *t:Bound })({  city( *n:X#1 stateid( 'north *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Virginia .  *t:Bound })({  city( *n:X#1 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Virginia *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Wisconsin ?  *t:Bound })({  city( *n:X#1 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Wisconsin *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Kansas ?  *t:Bound })({  city( *n:X#1 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Kansas *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Utah ?  *t:Bound })({  city( *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Utah *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Texas .  *t:Bound })({  city( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Texas ?  *t:Bound })({  city( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Texas *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Montana ?  *t:Bound })({  city( *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Montana *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 USA  *t:Bound })({  city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 United  *t:Bound })({  city( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 United States  *t:Bound })({  city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 United *n:X#2  *t:Bound })({  city( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 New Mexico ?  *t:Bound })({  city( *n:X#1 stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 New Mexico *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 New York ?  *t:Bound })({  city( *n:X#1 stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 New York *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 New *n:X#2 ?  *t:Bound })({  city( *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Nebraska ?  *t:Bound })({  city( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Nebraska *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Wyoming ?  *t:Bound })({  city( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Wyoming *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Missouri ?  *t:Bound })({  city( *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Missouri *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Oklahoma ?  *t:Bound })({  city( *n:X#1 stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Oklahoma *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 US  *t:Bound })({  city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Ohio ?  *t:Bound })({  city( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Ohio *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 states  *t:Bound })({  city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 states bordering  *t:Bound })({  city( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 states bordering *n:X#2  *t:Bound })({  city( *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 states through which  *t:Bound })({  city( *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 states that border  *t:Bound })({  city( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 states *n:X#2  *t:Bound })({  city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 states *n:X#2 ?  *t:Bound })({  city( *n:X#1 state( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 states *n:X#2 in  *t:Bound })({  city( *n:X#1 state( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 states *n:X#2 river  *t:Bound })({  city( *n:X#1 state( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 states *n:X#2 state  *t:Bound })({  city( *n:X#1 state( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in  *t:Bound })({  city( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in Arizona ?  *t:Bound })({  city( *n:X#1 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in Louisiana ?  *t:Bound })({  city( *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in Florida ?  *t:Bound })({  city( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in Texas .  *t:Bound })({  city( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in Texas ?  *t:Bound })({  city( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in Texas *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in Montana ?  *t:Bound })({  city( *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in the  *t:Bound })({  city( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in the US  *t:Bound })({  city( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in the *n:X#2  *t:Bound })({  city( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in *n:X#2 .  *t:Bound })({  city( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 in *n:X#2 ?  *t:Bound })({  city( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Vermont ?  *t:Bound })({  city( *n:X#1 stateid( 'vermont'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 Vermont *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'vermont'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 largest  *t:Bound })({  city( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 largest state  *t:Bound })({  city( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 largest state ?  *t:Bound })({  city( *n:X#1 largest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 largest state *n:X#2  *t:Bound })({  city( *n:X#1 largest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 largest *n:X#2  *t:Bound })({  city( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 largest *n:X#2 ?  *t:Bound })({  city( *n:X#1 largest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 located *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 river  *t:Bound })({  city( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 river in  *t:Bound })({  city( *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 river *n:X#2  *t:Bound })({  city( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 through which  *t:Bound })({  city( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 of California ?  *t:Bound })({  city( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 of *n:X#2 ?  *t:Bound })({  city( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 that border  *t:Bound })({  city( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 smallest  *t:Bound })({  city( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 smallest state  *t:Bound })({  city( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 smallest state *n:X#2  *t:Bound })({  city( *n:X#1 smallest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 smallest *n:X#2  *t:Bound })({  city( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 state  *t:Bound })({  city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 state ?  *t:Bound })({  city( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 state in the  *t:Bound })({  city( *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 state *n:X#2  *t:Bound })({  city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the Mississippi runs  *t:Bound })({  city( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the Mississippi *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the largest  *t:Bound })({  city( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the largest state  *t:Bound })({  city( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the largest *n:X#2  *t:Bound })({  city( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the major  *t:Bound })({  city( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the major river  *t:Bound })({  city( *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the major *n:X#2  *t:Bound })({  city( *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the *n:X#2 ?  *t:Bound })({  city( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the *n:X#2 in  *t:Bound })({  city( *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the *n:X#2 runs  *t:Bound })({  city( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the *n:X#2 river  *t:Bound })({  city( *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  cities *n:X#1 the *n:X#2 state  *t:Bound })({  city( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:X -> ({ does })({ ,traverse_1( }) weight 0.0
*n:X -> ({ does })({ answer( }) weight 0.0
*n:X -> ({ does })({ loc_2( }) weight 0.0
*n:X -> ({ does })({ traverse_1( }) weight 0.0
*n:X -> ({ does })({ next_to_1( }) weight 0.0
*n:X -> ({ does Tennessee border ? })({ next_to_1( stateid( 'tennessee' }) weight 0.0
*n:Query -> ({ *t:Bound  does Tennessee border *n:X#1  *t:Bound })({  next_to_1( *n:X#1 'tennessee'  }) weight 0.0
*n:X -> ({ does Alaska have ? })({ loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  does Alaska have *n:X#1  *t:Bound })({  loc_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ does Iowa border ? })({ next_to_1( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  does Iowa border *n:X#1  *t:Bound })({  next_to_1( *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ does Colorado have ? })({ loc_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  does Colorado have *n:X#1  *t:Bound })({  loc_2( *n:X#1 'colorado'  }) weight 0.0
*n:X -> ({ does Rhode Island have ? })({ loc_2( stateid( 'rhode island' }) weight 0.0
*n:Query -> ({ *t:Bound  does Rhode Island have *n:X#1  *t:Bound })({  loc_2( *n:X#1 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  does Rhode *n:X#1 have ?  *t:Bound })({  loc_2( stateid( 'rhode *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does Rhode *n:X#1 have *n:X#2  *t:Bound })({  loc_2( *n:X#2 'rhode *n:X#1  }) weight 0.0
*n:X -> ({ does Texas have ? })({ loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  does Texas have *n:X#1  *t:Bound })({  loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ does USA })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ does Missouri border ? })({ next_to_1( stateid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  does Missouri border *n:X#1  *t:Bound })({  next_to_1( *n:X#1 'missouri'  }) weight 0.0
*n:X -> ({ does the })({ loc_2( }) weight 0.0
*n:X -> ({ does the Colorado river flow })({ traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:X -> ({ does the Colorado river run })({ traverse_1( river( riverid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  does the Colorado river *n:X#1  *t:Bound })({  traverse_1( river( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  does the Colorado *n:X#1  *t:Bound })({  traverse_1( *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  does the Colorado *n:X#1 flow  *t:Bound })({  traverse_1( *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  does the Colorado *n:X#1 run  *t:Bound })({  traverse_1( *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:X -> ({ does the USA })({ loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ does the Mississippi river run })({ traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  does the Mississippi river *n:X#1  *t:Bound })({  traverse_1( river( *n:X#1 'mississippi'  }) weight 0.0
*n:X -> ({ does the Mississippi run })({ traverse_1( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  does the Mississippi *n:X#1  *t:Bound })({  traverse_1( *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  does the Mississippi *n:X#1 run  *t:Bound })({  traverse_1( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:X -> ({ does the Missouri river run })({ traverse_1( river( riverid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  does the Missouri river *n:X#1  *t:Bound })({  traverse_1( river( *n:X#1 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  does the Missouri *n:X#1  *t:Bound })({  traverse_1( *n:X#1 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  does the Missouri *n:X#1 run  *t:Bound })({  traverse_1( *n:X#1 riverid( 'missouri'  }) weight 0.0
*n:X -> ({ does the shortest })({ ,traverse_1( shortest( }) weight 0.0
*n:X -> ({ does the shortest river })({ ,traverse_1( shortest( river( }) weight 0.0
*n:X -> ({ does the shortest river run through ? })({ ,traverse_1( shortest( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  does the shortest *n:X#1  *t:Bound })({  ,traverse_1( shortest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does the *n:X#1  *t:Bound })({  ,traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does the *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does the *n:X#1  *t:Bound })({  traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does the *n:X#1 river  *t:Bound })({  ,traverse_1( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  does the *n:X#1 river flow  *t:Bound })({  traverse_1( river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does the *n:X#1 river run  *t:Bound })({  traverse_1( river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does the *n:X#1 river *n:X#2  *t:Bound })({  traverse_1( river( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does the *n:X#1 run  *t:Bound })({  traverse_1( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does *n:X#1  *t:Bound })({  loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does *n:X#1  *t:Bound })({  next_to_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does *n:X#1 Island have ?  *t:Bound })({  loc_2( stateid( *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  does *n:X#1 Island have *n:X#2  *t:Bound })({  loc_2( *n:X#2 *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  does *n:X#1 have ?  *t:Bound })({  loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does *n:X#1 have *n:X#2  *t:Bound })({  loc_2( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does *n:X#1 border ?  *t:Bound })({  next_to_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  does *n:X#1 border *n:X#2  *t:Bound })({  next_to_1( *n:X#2 *n:X#1  }) weight 0.0
*n:X -> ({ inhabitants does Montgomery })({ 'montgomery', }) weight 0.0
*n:X -> ({ inhabitants does Montgomery have ? })({ 'montgomery', _ }) weight 0.0
*n:Query -> ({ *t:Bound  inhabitants does Montgomery have *n:X#1  *t:Bound })({  'montgomery', *n:X#1  }) weight 0.0
*n:X -> ({ large })({ size( }) weight 0.0
*n:X -> ({ large is Alaska ? })({ size( stateid( 'alaska' }) weight 0.0
*n:X -> ({ large is Texas ? })({ size( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  large is *n:X#1 ?  *t:Bound })({  size( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  large *n:X#1  *t:Bound })({  size( *n:X#1  }) weight 0.0
*n:X -> ({ longer })({ 'red' }) weight 0.0
*n:X -> ({ number })({ count( }) weight 0.0
*n:X -> ({ number of rivers in California . })({ count( river( loc_2( stateid( 'california' }) weight 0.0
*n:X -> ({ number of neighboring states for Kentucky ? })({ count( state( next_to_2( stateid( 'kentucky' }) weight 0.0
*n:Query -> ({ *t:Bound  number of *n:X#1 California .  *t:Bound })({  count( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  number *n:X#1  *t:Bound })({  count( *n:X#1  }) weight 0.0
*n:X -> ({ run })({ riverid( }) weight 0.0
*n:X -> ({ run through })({ traverse_2( }) weight 0.0
*n:X -> ({ run through Texas ? })({ traverse_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  run through Texas *n:X#1  *t:Bound })({  traverse_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ run through the states })({ traverse_2( state( }) weight 0.0
*n:X -> ({ run through the states bordering })({ traverse_2( state( next_to_2( }) weight 0.0
*n:X -> ({ run through the states bordering Colorado ? })({ traverse_2( state( next_to_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  run through the states *n:X#1  *t:Bound })({  traverse_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  run through the *n:X#1  *t:Bound })({  traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  run through the *n:X#1 bordering  *t:Bound })({  traverse_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  run through *n:X#1  *t:Bound })({  traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  run through *n:X#1 ?  *t:Bound })({  traverse_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ Antonio })({ antonio', }) weight 0.0
*n:X -> ({ Antonio ? })({ antonio', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Antonio *n:X#1  *t:Bound })({  antonio', *n:X#1  }) weight 0.0
*n:X -> ({ Austin })({ 'austin', }) weight 0.0
*n:X -> ({ Austin are there in the USA ? })({ 'austin', _ , loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ Austin ? })({ 'austin', _ }) weight 0.0
*n:X -> ({ Austin Texas })({ 'austin', 'tx' }) weight 0.0
*n:Query -> ({ *t:Bound  Austin *n:X#1  *t:Bound })({  'austin', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Austin *n:X#1 ?  *t:Bound })({  'austin', _ , *n:X#1  }) weight 0.0
*n:X -> ({ GA })({ 'ga' }) weight 0.0
*n:X -> ({ Maine })({ 'maine' }) weight 0.0
*n:X -> ({ Maine })({ 'me' }) weight 0.0
*n:X -> ({ Maine ? })({ stateid( 'maine' }) weight 0.0
*n:Query -> ({ *t:Bound  Maine *n:X#1  *t:Bound })({  *n:X#1 'maine'  }) weight 0.0
*n:X -> ({ Montana })({ 'montana' }) weight 0.0
*n:X -> ({ Montana ? })({ stateid( 'montana' }) weight 0.0
*n:Query -> ({ *t:Bound  Montana *n:X#1  *t:Bound })({  *n:X#1 'montana'  }) weight 0.0
*n:X -> ({ Pennsylvania })({ 'pennsylvania' }) weight 0.0
*n:X -> ({ Pennsylvania })({ 'pa' }) weight 0.0
*n:X -> ({ Pennsylvania ? })({ stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  Pennsylvania *n:X#1  *t:Bound })({  *n:X#1 'pennsylvania'  }) weight 0.0
*n:X -> ({ is })({ answer( }) weight 0.0
*n:X -> ({ is })({ cityid( }) weight 0.0
*n:X -> ({ is Alaska ? })({ stateid( 'alaska' }) weight 0.0
*n:X -> ({ is Boston })({ cityid( 'boston', }) weight 0.0
*n:X -> ({ is Boston ? })({ cityid( 'boston', _ }) weight 0.0
*n:Query -> ({ *t:Bound  is Boston *n:X#1  *t:Bound })({  cityid( 'boston', *n:X#1  }) weight 0.0
*n:X -> ({ is North Dakota ? })({ stateid( 'north dakota' }) weight 0.0
*n:Query -> ({ *t:Bound  is North *n:X#1 ?  *t:Bound })({  stateid( 'north *n:X#1  }) weight 0.0
*n:X -> ({ is Texas ? })({ stateid( 'texas' }) weight 0.0
*n:X -> ({ is Massachusetts ? })({ stateid( 'massachusetts' }) weight 0.0
*n:X -> ({ is New Mexico ? })({ stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  is New *n:X#1 ?  *t:Bound })({  stateid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  is *n:X#1  *t:Bound })({  cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  is *n:X#1 Mexico ?  *t:Bound })({  stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  is *n:X#1 ?  *t:Bound })({  cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  is *n:X#1 ?  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  is *n:X#1 Dakota ?  *t:Bound })({  stateid( *n:X#1 dakota'  }) weight 0.0
*n:X -> ({ largest })({ largest_one( }) weight 0.0
*n:X -> ({ largest })({ largest( }) weight 0.0
*n:X -> ({ largest capital })({ largest( capital( }) weight 0.0
*n:X -> ({ largest capital ? })({ largest( capital( all }) weight 0.0
*n:X -> ({ largest capital city })({ largest( capital( city( }) weight 0.0
*n:X -> ({ largest capital city in the })({ largest( capital( city( loc_2( }) weight 0.0
*n:X -> ({ largest capital city in the USA })({ largest( capital( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ largest capital city in the US })({ largest( capital( city( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  largest capital city *n:X#1  *t:Bound })({  largest( capital( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest capital *n:X#1  *t:Bound })({  largest( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest capital *n:X#1 USA  *t:Bound })({  largest( capital( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest capital *n:X#1 US  *t:Bound })({  largest( capital( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest capital *n:X#1 in the  *t:Bound })({  largest( capital( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ largest cities })({ largest( city( }) weight 0.0
*n:X -> ({ largest cities in the })({ largest( city( loc_2( }) weight 0.0
*n:X -> ({ largest cities in the states })({ largest( city( loc_2( state( }) weight 0.0
*n:X -> ({ largest cities in the states that border })({ largest( city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ largest cities in the states that border the largest })({ largest( city( loc_2( state( next_to_2( largest( }) weight 0.0
*n:X -> ({ largest cities in the states that border the largest state })({ largest( city( loc_2( state( next_to_2( largest( state( }) weight 0.0
*n:Query -> ({ *t:Bound  largest cities in the *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest cities *n:X#1  *t:Bound })({  largest( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest cities *n:X#1 states  *t:Bound })({  largest( city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest cities *n:X#1 states *n:X#2  *t:Bound })({  largest( city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest cities *n:X#1 that border  *t:Bound })({  largest( city( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest cities *n:X#1 state  *t:Bound })({  largest( city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest cities *n:X#1 the largest  *t:Bound })({  largest( city( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest cities *n:X#1 the *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ largest city })({ largest( city( }) weight 0.0
*n:X -> ({ largest city in })({ largest( city( loc_2( }) weight 0.0
*n:X -> ({ largest city in Alaska ? })({ largest( city( loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in Alaska *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ largest city in California ? })({ largest( city( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in California *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ largest city in Alabama ? })({ largest( city( loc_2( stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in Alabama *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'alabama'  }) weight 0.0
*n:X -> ({ largest city in Rhode Island ? })({ largest( city( loc_2( stateid( 'rhode island' }) weight 0.0
*n:X -> ({ largest city in Minnesota by population ? })({ largest_one( population_1( city( loc_2( stateid( 'minnesota' }) weight 0.0
*n:X -> ({ largest city in Wisconsin ? })({ largest( city( loc_2( stateid( 'wisconsin' }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in Wisconsin *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'wisconsin'  }) weight 0.0
*n:X -> ({ largest city in Texas ? })({ largest( city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in Texas *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ largest city in Michigan ? })({ largest( city( loc_2( stateid( 'michigan' }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in Michigan *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'michigan'  }) weight 0.0
*n:X -> ({ largest city in Missouri ? })({ largest( city( loc_2( stateid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in Missouri *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'missouri'  }) weight 0.0
*n:X -> ({ largest city in states })({ largest( city( loc_2( state( }) weight 0.0
*n:X -> ({ largest city in states that border })({ largest( city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ largest city in states that border California ? })({ largest( city( loc_2( state( next_to_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in states *n:X#1  *t:Bound })({  largest( city( loc_2( state( *n:X#1  }) weight 0.0
*n:X -> ({ largest city in a state })({ largest( city( loc_2( state( }) weight 0.0
*n:X -> ({ largest city in a state that borders })({ largest( city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ largest city in a state that borders Texas ? })({ largest( city( loc_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in a *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ largest city in smallest })({ largest( city( loc_2( smallest( }) weight 0.0
*n:X -> ({ largest city in smallest state })({ largest( city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ largest city in smallest state through which })({ largest( city( loc_2( smallest( state( traverse_1( }) weight 0.0
*n:X -> ({ largest city in smallest state through which the Mississippi runs })({ largest( city( loc_2( smallest( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in smallest *n:X#1  *t:Bound })({  largest( city( loc_2( smallest( *n:X#1  }) weight 0.0
*n:X -> ({ largest city in the })({ largest( city( loc_2( }) weight 0.0
*n:X -> ({ largest city in the smallest })({ largest( city( loc_2( smallest( }) weight 0.0
*n:X -> ({ largest city in the smallest state })({ largest( city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ largest city in the smallest state in the })({ largest( city( loc_2( smallest( state( loc_2( }) weight 0.0
*n:X -> ({ largest city in the smallest state in the USA })({ largest( city( loc_2( smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ largest city in the state with the largest area })({ largest( city( loc_2( largest_one( area_1( state( }) weight 0.0
*n:X -> ({ largest city in the state with the largest area ? })({ largest( city( loc_2( largest_one( area_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in the *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in *n:X#1 ?  *t:Bound })({  largest( city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city in *n:X#1 state  *t:Bound })({  largest( city( loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1  *t:Bound })({  largest( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Alaska ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Alaska *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 California ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 California *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Alabama ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Alabama *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 ?  *t:Bound })({  largest( city( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Wisconsin ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Wisconsin *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Texas ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Texas *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 USA  *t:Bound })({  largest( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Michigan ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Michigan *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Missouri ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 Missouri *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 states  *t:Bound })({  largest( city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 states *n:X#2  *t:Bound })({  largest( city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 in the  *t:Bound })({  largest( city( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 through which  *t:Bound })({  largest( city( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 a state  *t:Bound })({  largest( city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 a *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 that borders  *t:Bound })({  largest( city( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 that border  *t:Bound })({  largest( city( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 smallest  *t:Bound })({  largest( city( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 smallest state  *t:Bound })({  largest( city( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 smallest *n:X#2  *t:Bound })({  largest( city( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 state  *t:Bound })({  largest( city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 state *n:X#2  *t:Bound })({  largest( city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest city *n:X#1 the *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ largest of the states })({ largest( state( }) weight 0.0
*n:X -> ({ largest of the states that the Rio Grande runs through })({ largest( state( traverse_1( riverid( 'rio grande' }) weight 0.0
*n:Query -> ({ *t:Bound  largest of the *n:X#1  *t:Bound })({  largest( *n:X#1  }) weight 0.0
*n:X -> ({ largest state })({ largest( state( }) weight 0.0
*n:X -> ({ largest state . })({ largest( state( all }) weight 0.0
*n:X -> ({ largest state bordering })({ largest( state( next_to_2( }) weight 0.0
*n:X -> ({ largest state bordering Arkansas ? })({ largest( state( next_to_2( stateid( 'arkansas' }) weight 0.0
*n:Query -> ({ *t:Bound  largest state bordering Arkansas *n:X#1  *t:Bound })({  largest( state( next_to_2( *n:X#1 'arkansas'  }) weight 0.0
*n:X -> ({ largest state bordering Texas ? })({ largest( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  largest state bordering Texas *n:X#1  *t:Bound })({  largest( state( next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state bordering *n:X#1  *t:Bound })({  largest( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state bordering *n:X#1 ?  *t:Bound })({  largest( state( next_to_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ largest state ? })({ largest( state( all }) weight 0.0
*n:X -> ({ largest state capital in population })({ largest_one( population_1( capital_1( state( }) weight 0.0
*n:X -> ({ largest state capital in population ? })({ largest_one( population_1( capital_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  largest state capital in *n:X#1  *t:Bound })({  largest_one( *n:X#1 capital_1( state(  }) weight 0.0
*n:X -> ({ largest state in })({ largest( state( loc_2( }) weight 0.0
*n:X -> ({ largest state in USA })({ largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ largest state in the })({ largest( state( loc_2( }) weight 0.0
*n:X -> ({ largest state in the USA })({ largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ largest state in the US })({ largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  largest state in the *n:X#1  *t:Bound })({  largest( state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state in *n:X#1  *t:Bound })({  largest( state( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ largest state traversed })({ largest( state( traverse_1( }) weight 0.0
*n:X -> ({ largest state traversed by the Mississippi river })({ largest( state( traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  largest state traversed *n:X#1  *t:Bound })({  largest( state( traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state traversed *n:X#1 river  *t:Bound })({  largest( state( traverse_1( river( *n:X#1  }) weight 0.0
*n:X -> ({ largest state through which })({ largest( state( traverse_1( }) weight 0.0
*n:X -> ({ largest state through which the Mississippi runs })({ largest( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ largest state that borders })({ largest( state( next_to_2( }) weight 0.0
*n:X -> ({ largest state that borders California ? })({ largest( state( next_to_2( stateid( 'california' }) weight 0.0
*n:X -> ({ largest state that borders Texas ? })({ largest( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ largest state that borders the state })({ largest( state( next_to_2( state( }) weight 0.0
*n:X -> ({ largest state that borders the state with })({ largest( state( next_to_2( largest_one( }) weight 0.0
*n:X -> ({ largest state that borders the state with })({ largest( state( next_to_2( state( loc_1( }) weight 0.0
*n:X -> ({ largest state that borders the state with the highest population })({ largest( state( next_to_2( largest_one( population_1( }) weight 0.0
*n:X -> ({ largest state that borders the state with the lowest })({ largest( state( next_to_2( state( loc_1( lowest( }) weight 0.0
*n:X -> ({ largest state that borders the state with the lowest point })({ largest( state( next_to_2( state( loc_1( lowest( place( }) weight 0.0
*n:Query -> ({ *t:Bound  largest state that borders *n:X#1  *t:Bound })({  largest( state( next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1  *t:Bound })({  largest( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 California ?  *t:Bound })({  largest( state( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 California *n:X#2  *t:Bound })({  largest( state( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 Arkansas ?  *t:Bound })({  largest( state( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 Arkansas *n:X#2  *t:Bound })({  largest( state( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 Texas ?  *t:Bound })({  largest( state( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 Texas *n:X#2  *t:Bound })({  largest( state( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 USA  *t:Bound })({  largest( state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 US  *t:Bound })({  largest( state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 with  *t:Bound })({  largest( state( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 point  *t:Bound })({  largest( state( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 the lowest  *t:Bound })({  largest( state( *n:X#1 lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 the state  *t:Bound })({  largest( state( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest state *n:X#1 the *n:X#2  *t:Bound })({  largest( state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1  *t:Bound })({  largest_one( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1  *t:Bound })({  largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Alaska ?  *t:Bound })({  largest( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Alaska *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 California ?  *t:Bound })({  largest( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 California *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 .  *t:Bound })({  largest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 bordering  *t:Bound })({  largest( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 bordering Arkansas ?  *t:Bound })({  largest( *n:X#1 next_to_2( stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 bordering Arkansas *n:X#2  *t:Bound })({  largest( *n:X#1 next_to_2( *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 bordering Texas ?  *t:Bound })({  largest( *n:X#1 next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 bordering Texas *n:X#2  *t:Bound })({  largest( *n:X#1 next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 bordering *n:X#2  *t:Bound })({  largest( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 bordering *n:X#2 ?  *t:Bound })({  largest( *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Arkansas ?  *t:Bound })({  largest( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Arkansas *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Alabama ?  *t:Bound })({  largest( *n:X#1 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Alabama *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 ?  *t:Bound })({  largest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Rhode Island ?  *t:Bound })({  largest( *n:X#1 stateid( 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Rhode Island *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Rhode *n:X#2 ?  *t:Bound })({  largest( *n:X#1 stateid( 'rhode *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Wisconsin ?  *t:Bound })({  largest( *n:X#1 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Wisconsin *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Texas ?  *t:Bound })({  largest( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Texas *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 USA  *t:Bound })({  largest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 capital in population  *t:Bound })({  largest_one( population_1( capital_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 capital in *n:X#2  *t:Bound })({  largest_one( *n:X#2 capital_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Michigan ?  *t:Bound })({  largest( *n:X#1 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Michigan *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Missouri ?  *t:Bound })({  largest( *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 Missouri *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 US  *t:Bound })({  largest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 states  *t:Bound })({  largest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 states that border  *t:Bound })({  largest( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 states *n:X#2  *t:Bound })({  largest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 states *n:X#2 state  *t:Bound })({  largest( *n:X#1 state( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in  *t:Bound })({  largest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Alaska ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Alaska *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in California ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in California *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Alabama ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Alabama *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Wisconsin ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Wisconsin *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Texas ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Texas *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in USA  *t:Bound })({  largest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Michigan ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Michigan *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Missouri ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in Missouri *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in states  *t:Bound })({  largest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in states *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in a state  *t:Bound })({  largest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in a *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in smallest  *t:Bound })({  largest( *n:X#1 loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in smallest state  *t:Bound })({  largest( *n:X#1 loc_2( smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in smallest *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in the  *t:Bound })({  largest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in the USA  *t:Bound })({  largest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in the US  *t:Bound })({  largest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in the states  *t:Bound })({  largest( *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in the smallest  *t:Bound })({  largest( *n:X#1 loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in the *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in *n:X#2 ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 in *n:X#2 state  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 city  *t:Bound })({  largest( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 city in the  *t:Bound })({  largest( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 city *n:X#2  *t:Bound })({  largest( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 traversed  *t:Bound })({  largest( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 traversed *n:X#2  *t:Bound })({  largest( *n:X#1 traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 traversed *n:X#2 river  *t:Bound })({  largest( *n:X#1 traverse_1( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 through which  *t:Bound })({  largest( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 with  *t:Bound })({  largest( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 with the lowest  *t:Bound })({  largest( *n:X#1 loc_1( lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 with the *n:X#2  *t:Bound })({  largest( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 a state  *t:Bound })({  largest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 a state *n:X#2  *t:Bound })({  largest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 a *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 that borders  *t:Bound })({  largest( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 that borders *n:X#2  *t:Bound })({  largest( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 that border  *t:Bound })({  largest( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 that border *n:X#2  *t:Bound })({  largest( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 point  *t:Bound })({  largest( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 smallest  *t:Bound })({  largest( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 smallest state  *t:Bound })({  largest( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 smallest state *n:X#2  *t:Bound })({  largest( *n:X#1 smallest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 smallest *n:X#2  *t:Bound })({  largest( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 state  *t:Bound })({  largest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 state in the  *t:Bound })({  largest( *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 state through which  *t:Bound })({  largest( *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 state *n:X#2  *t:Bound })({  largest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the highest population  *t:Bound })({  largest( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the highest *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the Mississippi runs  *t:Bound })({  largest( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the Mississippi *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the lowest  *t:Bound })({  largest( *n:X#1 lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the lowest point  *t:Bound })({  largest( *n:X#1 lowest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the lowest *n:X#2  *t:Bound })({  largest( *n:X#1 lowest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the largest  *t:Bound })({  largest( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the largest state  *t:Bound })({  largest( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the largest *n:X#2  *t:Bound })({  largest( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the state  *t:Bound })({  largest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the state with  *t:Bound })({  largest( *n:X#1 largest_one(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the state with  *t:Bound })({  largest( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the state *n:X#2  *t:Bound })({  largest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the state *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the *n:X#2 runs  *t:Bound })({  largest( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the *n:X#2 with  *t:Bound })({  largest( *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the *n:X#2 point  *t:Bound })({  largest( *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  largest *n:X#1 the *n:X#2 state  *t:Bound })({  largest( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:X -> ({ river })({ river( }) weight 0.0
*n:X -> ({ river ? })({ river( all }) weight 0.0
*n:X -> ({ river flowing through })({ river( traverse_2( }) weight 0.0
*n:X -> ({ river flowing through New York ? })({ river( traverse_2( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  river flowing through *n:X#1  *t:Bound })({  river( traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river flowing through *n:X#1 ?  *t:Bound })({  river( traverse_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ river in })({ river( loc_2( }) weight 0.0
*n:X -> ({ river in Alaska ? })({ river( loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  river in Alaska *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ river in California ? })({ river( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  river in California *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ river in America })({ river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ river in Iowa ? })({ river( loc_2( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  river in Iowa *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ river in Virginia runs ? })({ river( loc_2( stateid( 'virginia' }) weight 0.0
*n:Query -> ({ *t:Bound  river in Virginia runs *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'virginia'  }) weight 0.0
*n:X -> ({ river in Florida ? })({ river( loc_2( stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  river in Florida *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'florida'  }) weight 0.0
*n:X -> ({ river in Texas ? })({ river( loc_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ river in Texas run ? })({ river( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  river in Texas run *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  river in Texas *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ river in Illinois ? })({ river( loc_2( stateid( 'illinois' }) weight 0.0
*n:Query -> ({ *t:Bound  river in Illinois *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'illinois'  }) weight 0.0
*n:X -> ({ river in Washington state ? })({ river( loc_2( state( stateid( 'washington' }) weight 0.0
*n:Query -> ({ *t:Bound  river in Washington state *n:X#1  *t:Bound })({  river( loc_2( state( *n:X#1 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  river in Washington *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  river in Washington *n:X#1 ?  *t:Bound })({  river( loc_2( *n:X#1 stateid( 'washington'  }) weight 0.0
*n:X -> ({ river in Pennsylvania ? })({ river( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  river in Pennsylvania *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'pennsylvania'  }) weight 0.0
*n:X -> ({ river in Mississippi ? })({ river( loc_2( stateid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  river in Mississippi *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'mississippi'  }) weight 0.0
*n:X -> ({ river in New York ? })({ river( loc_2( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  river in New York *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  river in New *n:X#1 ?  *t:Bound })({  river( loc_2( stateid( 'new *n:X#1  }) weight 0.0
*n:X -> ({ river in Nebraska ? })({ river( loc_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  river in Nebraska *n:X#1  *t:Bound })({  river( loc_2( *n:X#1 'nebraska'  }) weight 0.0
*n:X -> ({ river in US })({ river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ river in miles })({ river( riverid( }) weight 0.0
*n:X -> ({ river in the })({ river( loc_2( }) weight 0.0
*n:X -> ({ river in the USA })({ river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ river in the United })({ river( loc_2( countryid( }) weight 0.0
*n:X -> ({ river in the United States })({ river( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  river in the United *n:X#1  *t:Bound })({  river( loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ river in the US })({ river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ river in the states })({ river( loc_2( state( }) weight 0.0
*n:X -> ({ river in the states that border })({ river( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ river in the states that border Nebraska ? })({ river( loc_2( state( next_to_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  river in the states *n:X#1  *t:Bound })({  river( loc_2( state( *n:X#1  }) weight 0.0
*n:X -> ({ river in the largest })({ river( loc_2( largest( }) weight 0.0
*n:X -> ({ river in the largest state })({ river( loc_2( largest( state( }) weight 0.0
*n:X -> ({ river in the largest state ? })({ river( loc_2( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  river in the largest *n:X#1  *t:Bound })({  river( loc_2( largest( *n:X#1  }) weight 0.0
*n:X -> ({ river in the smallest })({ river( loc_2( smallest( }) weight 0.0
*n:X -> ({ river in the smallest state })({ river( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ river in the smallest state in the })({ river( loc_2( smallest( state( loc_2( }) weight 0.0
*n:X -> ({ river in the smallest state in the USA })({ river( loc_2( smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  river in the smallest *n:X#1  *t:Bound })({  river( loc_2( smallest( *n:X#1  }) weight 0.0
*n:X -> ({ river in the state })({ river( loc_2( state( }) weight 0.0
*n:X -> ({ river in the state with })({ river( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ river in the state with the highest })({ river( loc_2( state( loc_1( highest( }) weight 0.0
*n:X -> ({ river in the state with the highest point })({ river( loc_2( state( loc_1( highest( place( }) weight 0.0
*n:X -> ({ river in the state with the highest point ? })({ river( loc_2( state( loc_1( highest( place( all }) weight 0.0
*n:X -> ({ river in the state with the most })({ river( loc_2( most( state( loc_1( }) weight 0.0
*n:X -> ({ river in the state with the most major })({ river( loc_2( most( state( loc_1( major( }) weight 0.0
*n:X -> ({ river in the state with the most major cities })({ river( loc_2( most( state( loc_1( major( city( }) weight 0.0
*n:X -> ({ river in the state with the most major cities ? })({ river( loc_2( most( state( loc_1( major( city( all }) weight 0.0
*n:Query -> ({ *t:Bound  river in the state *n:X#1  *t:Bound })({  river( loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river in the *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river in the *n:X#1 States  *t:Bound })({  river( loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  river in the *n:X#1 ?  *t:Bound })({  river( loc_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  river in the *n:X#1 USA  *t:Bound })({  river( loc_2( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  river in the *n:X#1 with  *t:Bound })({  river( loc_2( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  river in the *n:X#1 point  *t:Bound })({  river( loc_2( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  river in the *n:X#1 state  *t:Bound })({  river( loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  river in *n:X#1  *t:Bound })({  river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river in *n:X#1  *t:Bound })({  river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river in *n:X#1 ?  *t:Bound })({  river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river in *n:X#1 runs ?  *t:Bound })({  river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river in *n:X#1 runs *n:X#2  *t:Bound })({  river( loc_2( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river in *n:X#1 York ?  *t:Bound })({  river( loc_2( stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  river in *n:X#1 York *n:X#2  *t:Bound })({  river( loc_2( *n:X#2 *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  river in *n:X#1 run ?  *t:Bound })({  river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river in *n:X#1 run *n:X#2  *t:Bound })({  river( loc_2( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river in *n:X#1 state ?  *t:Bound })({  river( loc_2( state( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river in *n:X#1 state *n:X#2  *t:Bound })({  river( loc_2( state( *n:X#2 *n:X#1  }) weight 0.0
*n:X -> ({ river runs })({ river( riverid( }) weight 0.0
*n:X -> ({ river runs ? })({ river( all }) weight 0.0
*n:X -> ({ river runs through })({ traverse_1( river( riverid( }) weight 0.0
*n:Query -> ({ *t:Bound  river runs *n:X#1  *t:Bound })({  river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river runs *n:X#1  *t:Bound })({  *n:X#1 river( riverid(  }) weight 0.0
*n:X -> ({ river flow })({ river( riverid( }) weight 0.0
*n:X -> ({ river run })({ river( riverid( }) weight 0.0
*n:X -> ({ river run through ? })({ river( all }) weight 0.0
*n:Query -> ({ *t:Bound  river run through *n:X#1  *t:Bound })({  river( *n:X#1  }) weight 0.0
*n:X -> ({ river that flows through })({ river( traverse_2( }) weight 0.0
*n:X -> ({ river that flows through Colorado ? })({ river( traverse_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ river that flows through a state })({ river( traverse_2( state( }) weight 0.0
*n:X -> ({ river that flows through a state that borders })({ river( traverse_2( state( next_to_2( }) weight 0.0
*n:X -> ({ river that flows through a state that borders Indiana ? })({ river( traverse_2( state( next_to_2( stateid( 'indiana' }) weight 0.0
*n:X -> ({ river that flows through the most })({ most( river( traverse_2( }) weight 0.0
*n:X -> ({ river that flows through the most states })({ most( river( traverse_2( state( }) weight 0.0
*n:X -> ({ river that flows through the most states ? })({ most( river( traverse_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  river that flows through *n:X#1  *t:Bound })({  river( traverse_2( *n:X#1  }) weight 0.0
*n:X -> ({ river that runs through })({ river( traverse_2( }) weight 0.0
*n:X -> ({ river that runs through Texas ? })({ river( traverse_2( stateid( 'texas' }) weight 0.0
*n:X -> ({ river that runs through a state })({ river( traverse_2( state( }) weight 0.0
*n:X -> ({ river that runs through a state that borders })({ river( traverse_2( state( next_to_2( }) weight 0.0
*n:X -> ({ river that runs through a state that borders Tennessee ? })({ river( traverse_2( state( next_to_2( stateid( 'tennessee' }) weight 0.0
*n:X -> ({ river that runs through the most })({ most( river( traverse_2( }) weight 0.0
*n:X -> ({ river that runs through the most states })({ most( river( traverse_2( state( }) weight 0.0
*n:X -> ({ river that runs through the most states ? })({ most( river( traverse_2( state( all }) weight 0.0
*n:X -> ({ river that runs through the most number of states })({ most( river( traverse_2( state( }) weight 0.0
*n:X -> ({ river that runs through the most number of states ? })({ most( river( traverse_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  river that runs through *n:X#1  *t:Bound })({  river( traverse_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river that runs *n:X#1  *t:Bound })({  river( *n:X#1  }) weight 0.0
*n:X -> ({ river that does not })({ river( all , }) weight 0.0
*n:X -> ({ river that does not run through })({ river( all , traverse_2( }) weight 0.0
*n:X -> ({ river that does not run through Texas ? })({ river( all , traverse_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  river that does not *n:X#1  *t:Bound })({  river( all , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river that does *n:X#1  *t:Bound })({  river( all *n:X#1  }) weight 0.0
*n:X -> ({ river that cross over })({ river( traverse_2( }) weight 0.0
*n:X -> ({ river that cross over Ohio ? })({ river( traverse_2( stateid( 'ohio' }) weight 0.0
*n:Query -> ({ *t:Bound  river that cross over *n:X#1  *t:Bound })({  river( traverse_2( *n:X#1  }) weight 0.0
*n:X -> ({ river that passes })({ river( traverse_2( }) weight 0.0
*n:X -> ({ river that passes through })({ river( traverse_2( }) weight 0.0
*n:X -> ({ river that passes through the US })({ river( traverse_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ river that passes the states })({ river( traverse_2( state( }) weight 0.0
*n:Query -> ({ *t:Bound  river that passes the *n:X#1  *t:Bound })({  river( traverse_2( *n:X#1  }) weight 0.0
*n:X -> ({ river that traverses the most })({ most( river( traverse_2( }) weight 0.0
*n:X -> ({ river that traverses the most states })({ most( river( traverse_2( state( }) weight 0.0
*n:X -> ({ river that traverses the most states ? })({ most( river( traverse_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  river that *n:X#1  *t:Bound })({  river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river that *n:X#1 Indiana ?  *t:Bound })({  river( *n:X#1 stateid( 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  river that *n:X#1 Indiana *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  river that *n:X#1 a state  *t:Bound })({  river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  river that *n:X#1 a *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river that *n:X#1 that borders  *t:Bound })({  river( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  river that *n:X#1 the states  *t:Bound })({  river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  river that *n:X#1 the most  *t:Bound })({  most( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river that *n:X#1 the *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ river which })({ traverse_1( river( }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1  *t:Bound })({  river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1  *t:Bound })({  *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 States  *t:Bound })({  river( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Alaska ?  *t:Bound })({  river( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Alaska *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 California ?  *t:Bound })({  river( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 California *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 America  *t:Bound })({  river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Iowa ?  *t:Bound })({  river( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Iowa *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Colorado ?  *t:Bound })({  river( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Colorado *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 ?  *t:Bound })({  river( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Virginia runs ?  *t:Bound })({  river( *n:X#1 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Virginia runs *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Florida ?  *t:Bound })({  river( *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Florida *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Texas ?  *t:Bound })({  river( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Texas run ?  *t:Bound })({  river( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Texas run *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Texas *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Illinois ?  *t:Bound })({  river( *n:X#1 stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Illinois *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Washington state ?  *t:Bound })({  river( *n:X#1 state( stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Washington state *n:X#2  *t:Bound })({  river( *n:X#1 state( *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Washington *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Washington *n:X#2 ?  *t:Bound })({  river( *n:X#1 *n:X#2 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 USA  *t:Bound })({  river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 United  *t:Bound })({  river( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 United States  *t:Bound })({  river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 United *n:X#2  *t:Bound })({  river( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Pennsylvania ?  *t:Bound })({  river( *n:X#1 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Pennsylvania *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Mississippi ?  *t:Bound })({  river( *n:X#1 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Mississippi *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 New York ?  *t:Bound })({  river( *n:X#1 stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 New York *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 New *n:X#2 ?  *t:Bound })({  river( *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Nebraska ?  *t:Bound })({  river( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Nebraska *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 US  *t:Bound })({  river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Ohio ?  *t:Bound })({  river( *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 Ohio *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 states  *t:Bound })({  river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 states that border  *t:Bound })({  river( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 states *n:X#2  *t:Bound })({  river( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 in the  *t:Bound })({  river( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 in the USA  *t:Bound })({  river( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 in the *n:X#2  *t:Bound })({  river( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 largest  *t:Bound })({  river( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 largest state  *t:Bound })({  river( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 largest state ?  *t:Bound })({  river( *n:X#1 largest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 largest state *n:X#2  *t:Bound })({  river( *n:X#1 largest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 largest *n:X#2  *t:Bound })({  river( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 largest *n:X#2 ?  *t:Bound })({  river( *n:X#1 largest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 cities  *t:Bound })({  river( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 cities ?  *t:Bound })({  river( *n:X#1 city( all  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 cities *n:X#2  *t:Bound })({  river( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 major  *t:Bound })({  river( *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 major cities  *t:Bound })({  river( *n:X#1 major( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 major cities ?  *t:Bound })({  river( *n:X#1 major( city( all  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 major cities *n:X#2  *t:Bound })({  river( *n:X#1 major( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 major *n:X#2  *t:Bound })({  river( *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 major *n:X#2 ?  *t:Bound })({  river( *n:X#1 major( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 through  *t:Bound })({  traverse_1( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 with  *t:Bound })({  river( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 with the highest  *t:Bound })({  river( *n:X#1 loc_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 with the *n:X#2  *t:Bound })({  river( *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 that border  *t:Bound })({  river( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 that border *n:X#2  *t:Bound })({  river( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 point  *t:Bound })({  river( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 point ?  *t:Bound })({  river( *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 point *n:X#2  *t:Bound })({  river( *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 smallest  *t:Bound })({  river( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 smallest state  *t:Bound })({  river( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 smallest state *n:X#2  *t:Bound })({  river( *n:X#1 smallest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 smallest *n:X#2  *t:Bound })({  river( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 state  *t:Bound })({  river( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 state ?  *t:Bound })({  river( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 state in the  *t:Bound })({  river( *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 state with  *t:Bound })({  river( *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 state *n:X#2  *t:Bound })({  river( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 state *n:X#2 ?  *t:Bound })({  river( *n:X#1 state( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 state *n:X#2 point  *t:Bound })({  river( *n:X#1 state( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 the highest  *t:Bound })({  river( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 the highest point  *t:Bound })({  river( *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 the highest *n:X#2  *t:Bound })({  river( *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 the US  *t:Bound })({  river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 the *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 the *n:X#2 ?  *t:Bound })({  river( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  river *n:X#1 the *n:X#2 point  *t:Bound })({  river( *n:X#1 *n:X#2 place(  }) weight 0.0
*n:X -> ({ shortest })({ shortest( }) weight 0.0
*n:X -> ({ shortest river })({ shortest( river( }) weight 0.0
*n:X -> ({ shortest river ? })({ shortest( river( all }) weight 0.0
*n:X -> ({ shortest river in })({ shortest( river( loc_2( }) weight 0.0
*n:X -> ({ shortest river in Alaska ? })({ shortest( river( loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river in Alaska *n:X#1  *t:Bound })({  shortest( river( loc_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ shortest river in Iowa ? })({ shortest( river( loc_2( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river in Iowa *n:X#1  *t:Bound })({  shortest( river( loc_2( *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ shortest river in Texas ? })({ shortest( river( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river in Texas *n:X#1  *t:Bound })({  shortest( river( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ shortest river in Nebraska ? })({ shortest( river( loc_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river in Nebraska *n:X#1  *t:Bound })({  shortest( river( loc_2( *n:X#1 'nebraska'  }) weight 0.0
*n:X -> ({ shortest river in the })({ shortest( river( loc_2( }) weight 0.0
*n:X -> ({ shortest river in the USA })({ shortest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ shortest river in the United })({ shortest( river( loc_2( countryid( }) weight 0.0
*n:X -> ({ shortest river in the United States })({ shortest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ shortest river in the US })({ shortest( river( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river in the *n:X#1  *t:Bound })({  shortest( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river in *n:X#1  *t:Bound })({  shortest( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river in *n:X#1 ?  *t:Bound })({  shortest( river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ shortest river run through ? })({ shortest( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river run through *n:X#1  *t:Bound })({  shortest( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1  *t:Bound })({  shortest( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 States  *t:Bound })({  shortest( river( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 Alaska ?  *t:Bound })({  shortest( river( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 Alaska *n:X#2  *t:Bound })({  shortest( river( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 Iowa ?  *t:Bound })({  shortest( river( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 Iowa *n:X#2  *t:Bound })({  shortest( river( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 Texas ?  *t:Bound })({  shortest( river( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 Texas *n:X#2  *t:Bound })({  shortest( river( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 USA  *t:Bound })({  shortest( river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 United  *t:Bound })({  shortest( river( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 United States  *t:Bound })({  shortest( river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 United *n:X#2  *t:Bound })({  shortest( river( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 Nebraska ?  *t:Bound })({  shortest( river( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 Nebraska *n:X#2  *t:Bound })({  shortest( river( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest river *n:X#1 US  *t:Bound })({  shortest( river( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1  *t:Bound })({  shortest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 States  *t:Bound })({  shortest( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 Alaska ?  *t:Bound })({  shortest( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 Alaska *n:X#2  *t:Bound })({  shortest( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 Iowa ?  *t:Bound })({  shortest( *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 Iowa *n:X#2  *t:Bound })({  shortest( *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 ?  *t:Bound })({  shortest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 Texas ?  *t:Bound })({  shortest( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 Texas *n:X#2  *t:Bound })({  shortest( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 USA  *t:Bound })({  shortest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 United  *t:Bound })({  shortest( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 United States  *t:Bound })({  shortest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 United *n:X#2  *t:Bound })({  shortest( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 Nebraska ?  *t:Bound })({  shortest( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 Nebraska *n:X#2  *t:Bound })({  shortest( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 US  *t:Bound })({  shortest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in  *t:Bound })({  shortest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in Alaska ?  *t:Bound })({  shortest( *n:X#1 loc_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in Alaska *n:X#2  *t:Bound })({  shortest( *n:X#1 loc_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in Iowa ?  *t:Bound })({  shortest( *n:X#1 loc_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in Iowa *n:X#2  *t:Bound })({  shortest( *n:X#1 loc_2( *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in Texas ?  *t:Bound })({  shortest( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in Texas *n:X#2  *t:Bound })({  shortest( *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in Nebraska ?  *t:Bound })({  shortest( *n:X#1 loc_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in Nebraska *n:X#2  *t:Bound })({  shortest( *n:X#1 loc_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in the  *t:Bound })({  shortest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in the USA  *t:Bound })({  shortest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in the United  *t:Bound })({  shortest( *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in the US  *t:Bound })({  shortest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in the *n:X#2  *t:Bound })({  shortest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in *n:X#2  *t:Bound })({  shortest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 in *n:X#2 ?  *t:Bound })({  shortest( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 run through ?  *t:Bound })({  shortest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  shortest *n:X#1 run through *n:X#2  *t:Bound })({  shortest( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ 50 capitals })({ capital( }) weight 0.0
*n:X -> ({ 50 capitals in the })({ capital( loc_2( }) weight 0.0
*n:X -> ({ 50 capitals in the USA })({ capital( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  50 capitals in the *n:X#1  *t:Bound })({  capital( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  50 capitals *n:X#1  *t:Bound })({  capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  50 capitals *n:X#1 USA  *t:Bound })({  capital( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ Boulder })({ 'boulder', }) weight 0.0
*n:X -> ({ Boulder ? })({ 'boulder', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Boulder *n:X#1  *t:Bound })({  'boulder', *n:X#1  }) weight 0.0
*n:X -> ({ Carolina })({ carolina' }) weight 0.0
*n:X -> ({ Florida })({ 'florida' }) weight 0.0
*n:X -> ({ Florida . })({ stateid( 'florida' }) weight 0.0
*n:X -> ({ Florida ? })({ stateid( 'florida' }) weight 0.0
*n:Query -> ({ *t:Bound  Florida *n:X#1  *t:Bound })({  *n:X#1 'florida'  }) weight 0.0
*n:X -> ({ Idaho })({ 'idaho' }) weight 0.0
*n:X -> ({ Idaho ? })({ stateid( 'idaho' }) weight 0.0
*n:Query -> ({ *t:Bound  Idaho *n:X#1  *t:Bound })({  *n:X#1 'idaho'  }) weight 0.0
*n:X -> ({ Illinois })({ 'illinois' }) weight 0.0
*n:X -> ({ Illinois ? })({ stateid( 'illinois' }) weight 0.0
*n:Query -> ({ *t:Bound  Illinois *n:X#1  *t:Bound })({  *n:X#1 'illinois'  }) weight 0.0
*n:X -> ({ Mississippi })({ 'mississippi' }) weight 0.0
*n:X -> ({ Mississippi ? })({ stateid( 'mississippi' }) weight 0.0
*n:X -> ({ Mississippi runs })({ riverid( 'mississippi' }) weight 0.0
*n:X -> ({ Mississippi river })({ river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ Mississippi river in miles })({ river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi river in *n:X#1  *t:Bound })({  river( *n:X#1 'mississippi'  }) weight 0.0
*n:X -> ({ Mississippi river runs })({ river( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ Mississippi river runs through })({ traverse_1( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi river runs *n:X#1  *t:Bound })({  *n:X#1 river( riverid( 'mississippi'  }) weight 0.0
*n:X -> ({ Mississippi river run })({ river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi river *n:X#1  *t:Bound })({  river( *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi river *n:X#1 through  *t:Bound })({  traverse_1( river( *n:X#1 'mississippi'  }) weight 0.0
*n:X -> ({ Mississippi flow })({ riverid( 'mississippi' }) weight 0.0
*n:X -> ({ Mississippi run })({ riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi *n:X#1  *t:Bound })({  *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi *n:X#1  *t:Bound })({  *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi *n:X#1 in miles  *t:Bound })({  *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi *n:X#1 in *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi *n:X#1 runs  *t:Bound })({  *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi *n:X#1 runs through  *t:Bound })({  traverse_1( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi *n:X#1 runs *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi *n:X#1 through  *t:Bound })({  traverse_1( *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  Mississippi *n:X#1 run  *t:Bound })({  *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:X -> ({ Name })({ exclude( }) weight 0.0
*n:X -> ({ Name the })({ answer( exclude( }) weight 0.0
*n:X -> ({ Name the states })({ answer( exclude( state( }) weight 0.0
*n:X -> ({ Name the states which have })({ answer( exclude( state( all }) weight 0.0
*n:X -> ({ Name the states which have no })({ answer( exclude( state( all , }) weight 0.0
*n:X -> ({ Name the states which have no surrounding })({ answer( exclude( state( all , next_to_2( }) weight 0.0
*n:X -> ({ Name the states which have no surrounding states })({ answer( exclude( state( all , next_to_2( state( }) weight 0.0
*n:X -> ({ Name the states which have no surrounding states . })({ answer( exclude( state( all , next_to_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  Name the states which *n:X#1  *t:Bound })({  answer( exclude( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1  *t:Bound })({  answer( exclude( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 .  *t:Bound })({  answer( exclude( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 states  *t:Bound })({  answer( exclude( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 states .  *t:Bound })({  answer( exclude( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 states *n:X#2  *t:Bound })({  answer( exclude( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 no  *t:Bound })({  answer( exclude( *n:X#1 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 no surrounding  *t:Bound })({  answer( exclude( *n:X#1 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 no *n:X#2  *t:Bound })({  answer( exclude( *n:X#1 , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 surrounding  *t:Bound })({  answer( exclude( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 surrounding states  *t:Bound })({  answer( exclude( *n:X#1 next_to_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 surrounding *n:X#2  *t:Bound })({  answer( exclude( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 which have  *t:Bound })({  answer( exclude( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  Name the *n:X#1 which *n:X#2  *t:Bound })({  answer( exclude( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  Name *n:X#1  *t:Bound })({  *n:X#1 exclude(  }) weight 0.0
*n:Query -> ({ *t:Bound  Name *n:X#1 states  *t:Bound })({  *n:X#1 exclude( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  Name *n:X#1 states which have  *t:Bound })({  *n:X#1 exclude( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  Name *n:X#1 states which *n:X#2  *t:Bound })({  *n:X#1 exclude( state( *n:X#2  }) weight 0.0
*n:X -> ({ South })({ 'south }) weight 0.0
*n:X -> ({ South Carolina })({ 'south carolina' }) weight 0.0
*n:X -> ({ South Carolina ? })({ stateid( 'south carolina' }) weight 0.0
*n:Query -> ({ *t:Bound  South Carolina *n:X#1  *t:Bound })({  *n:X#1 'south carolina'  }) weight 0.0
*n:X -> ({ South Dakota })({ 'south dakota' }) weight 0.0
*n:X -> ({ South Dakota })({ 'sd' }) weight 0.0
*n:Query -> ({ *t:Bound  South *n:X#1  *t:Bound })({  'south *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  South *n:X#1 ?  *t:Bound })({  stateid( 'south *n:X#1  }) weight 0.0
*n:X -> ({ Springfield })({ 'springfield', }) weight 0.0
*n:X -> ({ Springfield ? })({ 'springfield', _ }) weight 0.0
*n:X -> ({ Springfield Missouri })({ 'springfield', 'mo' }) weight 0.0
*n:X -> ({ Springfield South Dakota })({ 'springfield', 'sd' }) weight 0.0
*n:Query -> ({ *t:Bound  Springfield *n:X#1  *t:Bound })({  'springfield', *n:X#1  }) weight 0.0
*n:X -> ({ average population })({ density_1( }) weight 0.0
*n:X -> ({ average population of the US })({ density_1( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  average population of the *n:X#1  *t:Bound })({  density_1( *n:X#1  }) weight 0.0
*n:X -> ({ average population per square km })({ density_1( }) weight 0.0
*n:X -> ({ average population per square km })({ density_1( countryid( }) weight 0.0
*n:X -> ({ average population per square km in Pennsylvania ? })({ density_1( stateid( 'pennsylvania' }) weight 0.0
*n:X -> ({ average population per square km in the US })({ density_1( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  average population per *n:X#1 km  *t:Bound })({  density_1( *n:X#1  }) weight 0.0
*n:X -> ({ capitals })({ capital( }) weight 0.0
*n:X -> ({ capitals does Rhode Island have ? })({ capital( loc_2( stateid( 'rhode island' }) weight 0.0
*n:Query -> ({ *t:Bound  capitals does *n:X#1 have ?  *t:Bound })({  capital( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capitals does *n:X#1 have *n:X#2  *t:Bound })({  capital( loc_2( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  capitals *n:X#1  *t:Bound })({  capital( *n:X#1  }) weight 0.0
*n:X -> ({ citizens })({ population_1( }) weight 0.0
*n:X -> ({ citizens in Alabama ? })({ population_1( stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  citizens in *n:X#1 ?  *t:Bound })({  population_1( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ citizens does the biggest })({ population_1( largest( }) weight 0.0
*n:X -> ({ citizens does the biggest city })({ population_1( largest( city( }) weight 0.0
*n:X -> ({ citizens does the biggest city have in the USA ? })({ population_1( largest( city( all }) weight 0.0
*n:Query -> ({ *t:Bound  citizens does the biggest *n:X#1  *t:Bound })({  population_1( largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  citizens does the *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  citizens does the *n:X#1 city  *t:Bound })({  population_1( *n:X#1 city(  }) weight 0.0
*n:X -> ({ citizens live })({ population_1( }) weight 0.0
*n:X -> ({ citizens live in California ? })({ population_1( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  citizens live in *n:X#1 ?  *t:Bound })({  population_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  citizens live *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  citizens *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:X -> ({ city })({ city( }) weight 0.0
*n:X -> ({ city ? })({ city( all }) weight 0.0
*n:X -> ({ city have in the USA ? })({ city( all }) weight 0.0
*n:X -> ({ city in })({ city( loc_2( }) weight 0.0
*n:X -> ({ city in Oregon ? })({ city( loc_2( stateid( 'oregon' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Oregon *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'oregon'  }) weight 0.0
*n:X -> ({ city in Alaska ? })({ city( loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Alaska *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ city in California ? })({ city( loc_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  city in California *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'california'  }) weight 0.0
*n:X -> ({ city in Arizona ? })({ city( loc_2( stateid( 'arizona' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Arizona *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'arizona'  }) weight 0.0
*n:X -> ({ city in Louisiana ? })({ city( loc_2( stateid( 'louisiana' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Louisiana *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'louisiana'  }) weight 0.0
*n:X -> ({ city in Arkansas ? })({ city( loc_2( stateid( 'arkansas' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Arkansas *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'arkansas'  }) weight 0.0
*n:X -> ({ city in Alabama ? })({ city( loc_2( stateid( 'alabama' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Alabama *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'alabama'  }) weight 0.0
*n:X -> ({ city in Georgia ? })({ city( loc_2( stateid( 'georgia' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Georgia *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'georgia'  }) weight 0.0
*n:X -> ({ city in Hawaii ? })({ city( loc_2( stateid( 'hawaii' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Hawaii *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'hawaii'  }) weight 0.0
*n:X -> ({ city in Rhode Island ? })({ city( loc_2( stateid( 'rhode island' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Rhode Island *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  city in Rhode *n:X#1 ?  *t:Bound })({  city( loc_2( stateid( 'rhode *n:X#1  }) weight 0.0
*n:X -> ({ city in Minnesota by population ? })({ population_1( city( loc_2( stateid( 'minnesota' }) weight 0.0
*n:X -> ({ city in Wisconsin ? })({ city( loc_2( stateid( 'wisconsin' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Wisconsin *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'wisconsin'  }) weight 0.0
*n:X -> ({ city in Kansas ? })({ city( loc_2( stateid( 'kansas' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Kansas *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'kansas'  }) weight 0.0
*n:X -> ({ city in Texas ? })({ city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Texas *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ city in Washington ? })({ city( loc_2( stateid( 'washington' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Washington *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'washington'  }) weight 0.0
*n:X -> ({ city in USA })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ city in Michigan ? })({ city( loc_2( stateid( 'michigan' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Michigan *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'michigan'  }) weight 0.0
*n:X -> ({ city in New York state ? })({ city( loc_2( state( stateid( 'new york' }) weight 0.0
*n:Query -> ({ *t:Bound  city in New York *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'new york'  }) weight 0.0
*n:X -> ({ city in Nebraska ? })({ city( loc_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Nebraska *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'nebraska'  }) weight 0.0
*n:X -> ({ city in Wyoming ? })({ city( loc_2( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Wyoming *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'wyoming'  }) weight 0.0
*n:X -> ({ city in Missouri ? })({ city( loc_2( stateid( 'missouri' }) weight 0.0
*n:Query -> ({ *t:Bound  city in Missouri *n:X#1  *t:Bound })({  city( loc_2( *n:X#1 'missouri'  }) weight 0.0
*n:X -> ({ city in states })({ city( loc_2( state( }) weight 0.0
*n:X -> ({ city in states that border })({ city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ city in states that border California ? })({ city( loc_2( state( next_to_2( stateid( 'california' }) weight 0.0
*n:Query -> ({ *t:Bound  city in states *n:X#1  *t:Bound })({  city( loc_2( state( *n:X#1  }) weight 0.0
*n:X -> ({ city in a state })({ city( loc_2( state( }) weight 0.0
*n:X -> ({ city in a state with a })({ city( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ city in a state with a river })({ city( loc_2( state( loc_1( river( }) weight 0.0
*n:X -> ({ city in a state with a river ? })({ city( loc_2( state( loc_1( river( all }) weight 0.0
*n:X -> ({ city in a state that borders })({ city( loc_2( state( next_to_2( }) weight 0.0
*n:X -> ({ city in a state that borders Texas ? })({ city( loc_2( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  city in a state *n:X#1  *t:Bound })({  city( loc_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city in a *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:X -> ({ city in smallest })({ city( loc_2( smallest( }) weight 0.0
*n:X -> ({ city in smallest state })({ city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ city in smallest state through which })({ city( loc_2( smallest( state( traverse_1( }) weight 0.0
*n:X -> ({ city in smallest state through which the Mississippi runs })({ city( loc_2( smallest( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  city in smallest state *n:X#1  *t:Bound })({  city( loc_2( smallest( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city in smallest *n:X#1  *t:Bound })({  city( loc_2( smallest( *n:X#1  }) weight 0.0
*n:X -> ({ city in the })({ city( loc_2( }) weight 0.0
*n:X -> ({ city in the USA })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ city in the United })({ city( loc_2( countryid( }) weight 0.0
*n:X -> ({ city in the United States })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ city in the United States has the highest population density })({ largest_one( density_1( city( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  city in the United *n:X#1  *t:Bound })({  city( loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ city in the US })({ city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ city in the largest })({ city( loc_2( largest( }) weight 0.0
*n:X -> ({ city in the largest state })({ city( loc_2( largest( state( }) weight 0.0
*n:X -> ({ city in the largest state ? })({ city( loc_2( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  city in the largest *n:X#1  *t:Bound })({  city( loc_2( largest( *n:X#1  }) weight 0.0
*n:X -> ({ city in the smallest })({ city( loc_2( smallest( }) weight 0.0
*n:X -> ({ city in the smallest state })({ city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ city in the smallest state ? })({ city( loc_2( smallest( state( all }) weight 0.0
*n:X -> ({ city in the smallest state in the })({ city( loc_2( smallest( state( loc_2( }) weight 0.0
*n:X -> ({ city in the smallest state in the USA })({ city( loc_2( smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  city in the smallest *n:X#1  *t:Bound })({  city( loc_2( smallest( *n:X#1  }) weight 0.0
*n:X -> ({ city in the state with the largest area })({ city( loc_2( largest_one( area_1( state( }) weight 0.0
*n:X -> ({ city in the state with the largest area ? })({ city( loc_2( largest_one( area_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  city in the *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city in the *n:X#1 States  *t:Bound })({  city( loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  city in the *n:X#1 ?  *t:Bound })({  city( loc_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  city in the *n:X#1 USA  *t:Bound })({  city( loc_2( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  city in the *n:X#1 state  *t:Bound })({  city( loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 Island ?  *t:Bound })({  city( loc_2( stateid( *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 Island *n:X#2  *t:Bound })({  city( loc_2( *n:X#2 *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 California ?  *t:Bound })({  city( loc_2( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 California *n:X#2  *t:Bound })({  city( loc_2( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 ?  *t:Bound })({  city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 ?  *t:Bound })({  city( loc_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 river  *t:Bound })({  city( loc_2( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 river ?  *t:Bound })({  city( loc_2( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 river *n:X#2  *t:Bound })({  city( loc_2( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 through which  *t:Bound })({  city( loc_2( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 York *n:X#2  *t:Bound })({  city( loc_2( *n:X#2 *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 population ?  *t:Bound })({  population_1( city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 population *n:X#2  *t:Bound })({  population_1( city( loc_2( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 that border  *t:Bound })({  city( loc_2( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 state  *t:Bound })({  city( loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 state ?  *t:Bound })({  city( loc_2( state( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 state *n:X#2  *t:Bound })({  city( loc_2( state( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 state *n:X#2  *t:Bound })({  city( loc_2( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city in *n:X#1 the *n:X#2  *t:Bound })({  city( loc_2( *n:X#1 *n:X#2  }) weight 0.0
*n:X -> ({ city called Rochester })({ city( cityid( 'rochester', }) weight 0.0
*n:X -> ({ city called Rochester ? })({ city( cityid( 'rochester', _ }) weight 0.0
*n:Query -> ({ *t:Bound  city called Rochester *n:X#1  *t:Bound })({  city( cityid( 'rochester', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city called *n:X#1  *t:Bound })({  city( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city called *n:X#1 ?  *t:Bound })({  city( cityid( *n:X#1 _  }) weight 0.0
*n:X -> ({ city named })({ city( cityid( }) weight 0.0
*n:X -> ({ city named Springfield })({ city( cityid( 'springfield', }) weight 0.0
*n:X -> ({ city named Springfield ? })({ city( cityid( 'springfield', _ }) weight 0.0
*n:Query -> ({ *t:Bound  city named Springfield *n:X#1  *t:Bound })({  city( cityid( 'springfield', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city named *n:X#1  *t:Bound })({  city( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city named *n:X#1 ?  *t:Bound })({  city( cityid( *n:X#1 _  }) weight 0.0
*n:X -> ({ city of })({ city( cityid( }) weight 0.0
*n:X -> ({ city of New })({ city( cityid( 'new }) weight 0.0
*n:X -> ({ city of New York })({ city( cityid( 'new york', }) weight 0.0
*n:X -> ({ city of New York ? })({ city( cityid( 'new york', _ }) weight 0.0
*n:Query -> ({ *t:Bound  city of New York *n:X#1  *t:Bound })({  city( cityid( 'new york', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city of New *n:X#1  *t:Bound })({  city( cityid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city of New *n:X#1 ?  *t:Bound })({  city( cityid( 'new *n:X#1 _  }) weight 0.0
*n:X -> ({ city of the })({ city( loc_2( }) weight 0.0
*n:X -> ({ city of the largest })({ city( loc_2( largest( }) weight 0.0
*n:X -> ({ city of the largest state })({ city( loc_2( largest( state( }) weight 0.0
*n:X -> ({ city of the largest state in the })({ city( loc_2( largest( state( loc_2( }) weight 0.0
*n:X -> ({ city of the largest state in the US })({ city( loc_2( largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  city of the largest *n:X#1  *t:Bound })({  city( loc_2( largest( *n:X#1  }) weight 0.0
*n:X -> ({ city of the smallest })({ city( loc_2( smallest( }) weight 0.0
*n:X -> ({ city of the smallest state })({ city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ city of the smallest state in the })({ city( loc_2( smallest( state( loc_2( }) weight 0.0
*n:X -> ({ city of the smallest state in the US })({ city( loc_2( smallest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  city of the smallest *n:X#1  *t:Bound })({  city( loc_2( smallest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city of the *n:X#1  *t:Bound })({  city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city of the *n:X#1 US  *t:Bound })({  city( loc_2( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  city of the *n:X#1 state  *t:Bound })({  city( loc_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1  *t:Bound })({  city( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1  *t:Bound })({  city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 ?  *t:Bound })({  city( cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 US  *t:Bound })({  city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 in the  *t:Bound })({  city( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 largest  *t:Bound })({  city( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 largest state  *t:Bound })({  city( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 largest *n:X#2  *t:Bound })({  city( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 York  *t:Bound })({  city( cityid( *n:X#1 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 York ?  *t:Bound })({  city( cityid( *n:X#1 york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 York *n:X#2  *t:Bound })({  city( cityid( *n:X#1 york', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 smallest  *t:Bound })({  city( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 smallest state  *t:Bound })({  city( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 smallest *n:X#2  *t:Bound })({  city( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 state  *t:Bound })({  city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  city of *n:X#1 state *n:X#2  *t:Bound })({  city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1  *t:Bound })({  city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 States  *t:Bound })({  city( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 States *n:X#2  *t:Bound })({  *n:X#2 city( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Oregon ?  *t:Bound })({  city( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Oregon *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Alaska ?  *t:Bound })({  city( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Alaska *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 California ?  *t:Bound })({  city( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 California *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Arizona ?  *t:Bound })({  city( *n:X#1 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Arizona *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Louisiana ?  *t:Bound })({  city( *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Louisiana *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Arkansas ?  *t:Bound })({  city( *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Arkansas *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Alabama ?  *t:Bound })({  city( *n:X#1 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Alabama *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Georgia ?  *t:Bound })({  city( *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Georgia *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 ?  *t:Bound })({  city( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 ?  *t:Bound })({  city( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Hawaii ?  *t:Bound })({  city( *n:X#1 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Hawaii *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Rhode Island ?  *t:Bound })({  city( *n:X#1 stateid( 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Rhode Island *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Rhode *n:X#2 ?  *t:Bound })({  city( *n:X#1 stateid( 'rhode *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Wisconsin ?  *t:Bound })({  city( *n:X#1 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Wisconsin *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Kansas ?  *t:Bound })({  city( *n:X#1 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Kansas *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Texas ?  *t:Bound })({  city( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Texas *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Washington ?  *t:Bound })({  city( *n:X#1 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Washington *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 USA  *t:Bound })({  city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 United  *t:Bound })({  city( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 United States  *t:Bound })({  city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 United States *n:X#2  *t:Bound })({  *n:X#2 city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 United *n:X#2  *t:Bound })({  city( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Michigan ?  *t:Bound })({  city( *n:X#1 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Michigan *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 New  *t:Bound })({  city( *n:X#1 'new  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 New York  *t:Bound })({  city( *n:X#1 'new york',  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 New York ?  *t:Bound })({  city( *n:X#1 'new york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 New York *n:X#2  *t:Bound })({  city( *n:X#1 'new york', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 New York *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 New *n:X#2  *t:Bound })({  city( *n:X#1 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 New *n:X#2 ?  *t:Bound })({  city( *n:X#1 'new *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Nebraska ?  *t:Bound })({  city( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Nebraska *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Wyoming ?  *t:Bound })({  city( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Wyoming *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Missouri ?  *t:Bound })({  city( *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Missouri *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 US  *t:Bound })({  city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 states  *t:Bound })({  city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 states that border  *t:Bound })({  city( *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 states *n:X#2  *t:Bound })({  city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 in the  *t:Bound })({  city( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 in the USA  *t:Bound })({  city( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 in the *n:X#2  *t:Bound })({  city( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 largest  *t:Bound })({  city( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 largest state  *t:Bound })({  city( *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 largest state ?  *t:Bound })({  city( *n:X#1 largest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 largest state *n:X#2  *t:Bound })({  city( *n:X#1 largest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 largest *n:X#2  *t:Bound })({  city( *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 largest *n:X#2 ?  *t:Bound })({  city( *n:X#1 largest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Springfield  *t:Bound })({  city( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Springfield ?  *t:Bound })({  city( *n:X#1 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 Springfield *n:X#2  *t:Bound })({  city( *n:X#1 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 river  *t:Bound })({  city( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 river ?  *t:Bound })({  city( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 river *n:X#2  *t:Bound })({  city( *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 through which  *t:Bound })({  city( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 York  *t:Bound })({  city( *n:X#1 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 York ?  *t:Bound })({  city( *n:X#1 york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 York *n:X#2  *t:Bound })({  city( *n:X#1 york', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 a state  *t:Bound })({  city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 a state *n:X#2  *t:Bound })({  city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 a *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 that borders  *t:Bound })({  city( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 that borders *n:X#2  *t:Bound })({  city( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 that border  *t:Bound })({  city( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 that border *n:X#2  *t:Bound })({  city( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 smallest  *t:Bound })({  city( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 smallest state  *t:Bound })({  city( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 smallest state ?  *t:Bound })({  city( *n:X#1 smallest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 smallest state *n:X#2  *t:Bound })({  city( *n:X#1 smallest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 smallest *n:X#2  *t:Bound })({  city( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 smallest *n:X#2 ?  *t:Bound })({  city( *n:X#1 smallest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 state  *t:Bound })({  city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 state ?  *t:Bound })({  city( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 state in the  *t:Bound })({  city( *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 state through which  *t:Bound })({  city( *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 state *n:X#2  *t:Bound })({  city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 the Mississippi runs  *t:Bound })({  city( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 the Mississippi *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 the *n:X#2  *t:Bound })({  city( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  city *n:X#1 the *n:X#2 runs  *t:Bound })({  city( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:X -> ({ do })({ exclude( }) weight 0.0
*n:X -> ({ elevation })({ place( }) weight 0.0
*n:X -> ({ elevation })({ elevation_1( }) weight 0.0
*n:X -> ({ elevation ? })({ place( all }) weight 0.0
*n:X -> ({ elevation in })({ place( loc_2( }) weight 0.0
*n:X -> ({ elevation in Texas ? })({ place( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in Texas *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ elevation in Pennsylvania ? })({ place( loc_2( stateid( 'pennsylvania' }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in Pennsylvania *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'pennsylvania'  }) weight 0.0
*n:X -> ({ elevation in New Mexico ? })({ place( loc_2( stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in New Mexico *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in New *n:X#1 ?  *t:Bound })({  place( loc_2( stateid( 'new *n:X#1  }) weight 0.0
*n:X -> ({ elevation in South Carolina ? })({ place( loc_2( stateid( 'south carolina' }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in South Carolina *n:X#1  *t:Bound })({  place( loc_2( *n:X#1 'south carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in South *n:X#1 ?  *t:Bound })({  place( loc_2( stateid( 'south *n:X#1  }) weight 0.0
*n:X -> ({ elevation in the })({ place( loc_2( }) weight 0.0
*n:X -> ({ elevation in the United })({ place( loc_2( countryid( }) weight 0.0
*n:X -> ({ elevation in the United States })({ place( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in the United *n:X#1  *t:Bound })({  place( loc_2( countryid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in the *n:X#1  *t:Bound })({  place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in the *n:X#1 States  *t:Bound })({  place( loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in *n:X#1  *t:Bound })({  place( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in *n:X#1 Mexico ?  *t:Bound })({  place( loc_2( stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in *n:X#1 Mexico *n:X#2  *t:Bound })({  place( loc_2( *n:X#2 *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in *n:X#1 Carolina ?  *t:Bound })({  place( loc_2( stateid( *n:X#1 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in *n:X#1 Carolina *n:X#2  *t:Bound })({  place( loc_2( *n:X#2 *n:X#1 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation in *n:X#1 ?  *t:Bound })({  place( loc_2( stateid( *n:X#1  }) weight 0.0
*n:X -> ({ elevation of Death })({ elevation_1( placeid( 'death }) weight 0.0
*n:X -> ({ elevation of Death Valley })({ elevation_1( placeid( 'death valley' }) weight 0.0
*n:Query -> ({ *t:Bound  elevation of Death *n:X#1  *t:Bound })({  elevation_1( placeid( 'death *n:X#1  }) weight 0.0
*n:X -> ({ elevation of the highest })({ elevation_1( highest( }) weight 0.0
*n:X -> ({ elevation of the highest point })({ elevation_1( highest( place( }) weight 0.0
*n:X -> ({ elevation of the highest point in the })({ elevation_1( highest( place( loc_2( }) weight 0.0
*n:X -> ({ elevation of the highest point in the USA })({ elevation_1( highest( place( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  elevation of the highest *n:X#1  *t:Bound })({  elevation_1( highest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation of the *n:X#1  *t:Bound })({  elevation_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation of the *n:X#1 USA  *t:Bound })({  elevation_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation of the *n:X#1 point  *t:Bound })({  elevation_1( *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation of *n:X#1  *t:Bound })({  elevation_1( placeid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation of *n:X#1 Valley  *t:Bound })({  elevation_1( placeid( *n:X#1 valley'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1  *t:Bound })({  place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 States  *t:Bound })({  place( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 Texas ?  *t:Bound })({  place( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 Texas *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 United  *t:Bound })({  place( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 United States  *t:Bound })({  place( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 United *n:X#2  *t:Bound })({  place( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 Pennsylvania ?  *t:Bound })({  place( *n:X#1 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 Pennsylvania *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 New Mexico ?  *t:Bound })({  place( *n:X#1 stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 New Mexico *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 New *n:X#2 ?  *t:Bound })({  place( *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 South Carolina ?  *t:Bound })({  place( *n:X#1 stateid( 'south carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 South Carolina *n:X#2  *t:Bound })({  place( *n:X#1 *n:X#2 'south carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  elevation *n:X#1 South *n:X#2 ?  *t:Bound })({  place( *n:X#1 stateid( 'south *n:X#2  }) weight 0.0
*n:X -> ({ kilometers })({ area_1( }) weight 0.0
*n:X -> ({ which })({ loc_1( }) weight 0.0
*n:X -> ({ which })({ traverse_1( }) weight 0.0
*n:X -> ({ which states does })({ state( traverse_1( }) weight 0.0
*n:X -> ({ which states does the })({ answer( state( traverse_1( }) weight 0.0
*n:X -> ({ which states does the Mississippi flow })({ answer( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ which states does the Mississippi run })({ answer( state( traverse_1( riverid( 'mississippi' }) weight 0.0
*n:X -> ({ which states does the longest })({ state( traverse_1( longest( }) weight 0.0
*n:X -> ({ which states does the longest river })({ state( traverse_1( longest( river( }) weight 0.0
*n:X -> ({ which states does the longest river in })({ state( traverse_1( longest( river( loc_2( }) weight 0.0
*n:X -> ({ which states does the longest river in Texas run ? })({ state( traverse_1( longest( river( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  which states does the *n:X#1  *t:Bound })({  answer( state( traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  which states does the *n:X#1  *t:Bound })({  state( traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  which states does *n:X#1  *t:Bound })({  *n:X#1 state( traverse_1(  }) weight 0.0
*n:X -> ({ which state })({ state( loc_1( }) weight 0.0
*n:Query -> ({ *t:Bound  which *n:X#1  *t:Bound })({  *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  which *n:X#1 does  *t:Bound })({  *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  which *n:X#1 does the  *t:Bound })({  answer( *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  which *n:X#1 does the longest  *t:Bound })({  *n:X#1 traverse_1( longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  which *n:X#1 does the *n:X#2  *t:Bound })({  answer( *n:X#1 traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  which *n:X#1 does the *n:X#2  *t:Bound })({  *n:X#1 traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  which *n:X#1 does *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 traverse_1(  }) weight 0.0
*n:X -> ({ . })({ stateid( }) weight 0.0
*n:X -> ({ . })({ all }) weight 0.0
*n:X -> ({ America })({ countryid( 'usa' }) weight 0.0
*n:X -> ({ Georgia })({ 'georgia' }) weight 0.0
*n:X -> ({ Georgia ? })({ stateid( 'georgia' }) weight 0.0
*n:Query -> ({ *t:Bound  Georgia *n:X#1  *t:Bound })({  *n:X#1 'georgia'  }) weight 0.0
*n:X -> ({ Guadalupe })({ 'guadalupe }) weight 0.0
*n:X -> ({ Guadalupe Peak })({ 'guadalupe peak' }) weight 0.0
*n:Query -> ({ *t:Bound  Guadalupe *n:X#1  *t:Bound })({  'guadalupe *n:X#1  }) weight 0.0
*n:X -> ({ Houston })({ 'houston', }) weight 0.0
*n:X -> ({ Houston ? })({ 'houston', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Houston *n:X#1  *t:Bound })({  'houston', *n:X#1  }) weight 0.0
*n:X -> ({ Massachusetts })({ 'massachusetts' }) weight 0.0
*n:X -> ({ Massachusetts })({ 'ma' }) weight 0.0
*n:X -> ({ Massachusetts ? })({ stateid( 'massachusetts' }) weight 0.0
*n:Query -> ({ *t:Bound  Massachusetts *n:X#1  *t:Bound })({  *n:X#1 'massachusetts'  }) weight 0.0
*n:X -> ({ Michigan })({ 'michigan' }) weight 0.0
*n:X -> ({ Michigan . })({ stateid( 'michigan' }) weight 0.0
*n:X -> ({ Michigan ? })({ stateid( 'michigan' }) weight 0.0
*n:Query -> ({ *t:Bound  Michigan *n:X#1  *t:Bound })({  *n:X#1 'michigan'  }) weight 0.0
*n:X -> ({ Oklahoma })({ 'oklahoma' }) weight 0.0
*n:X -> ({ Oklahoma ? })({ stateid( 'oklahoma' }) weight 0.0
*n:Query -> ({ *t:Bound  Oklahoma *n:X#1  *t:Bound })({  *n:X#1 'oklahoma'  }) weight 0.0
*n:X -> ({ Portland })({ 'portland', }) weight 0.0
*n:X -> ({ Portland Maine })({ 'portland', 'me' }) weight 0.0
*n:Query -> ({ *t:Bound  Portland *n:X#1  *t:Bound })({  'portland', *n:X#1  }) weight 0.0
*n:X -> ({ border })({ next_to_2( }) weight 0.0
*n:X -> ({ border Tennessee ? })({ next_to_2( stateid( 'tennessee' }) weight 0.0
*n:Query -> ({ *t:Bound  border Tennessee *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'tennessee'  }) weight 0.0
*n:X -> ({ border Alaska ? })({ next_to_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  border Alaska *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ border Iowa ? })({ next_to_2( stateid( 'iowa' }) weight 0.0
*n:Query -> ({ *t:Bound  border Iowa *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'iowa'  }) weight 0.0
*n:X -> ({ border Colorado })({ next_to_2( stateid( 'colorado' }) weight 0.0
*n:X -> ({ border Colorado and })({ next_to_2( stateid( 'colorado' , }) weight 0.0
*n:X -> ({ border Colorado and border })({ next_to_2( stateid( 'colorado' , next_to_2( }) weight 0.0
*n:X -> ({ border Colorado and border New Mexico ? })({ next_to_2( stateid( 'colorado' , next_to_2( stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  border Colorado and *n:X#1  *t:Bound })({  next_to_2( stateid( 'colorado' , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border Colorado *n:X#1  *t:Bound })({  next_to_2( stateid( 'colorado' *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border Colorado *n:X#1 border  *t:Bound })({  next_to_2( stateid( 'colorado' *n:X#1 next_to_2(  }) weight 0.0
*n:X -> ({ border Hawaii ? })({ next_to_2( stateid( 'hawaii' }) weight 0.0
*n:Query -> ({ *t:Bound  border Hawaii *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'hawaii'  }) weight 0.0
*n:X -> ({ border Texas ? })({ next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  border Texas *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ border New Mexico ? })({ next_to_2( stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  border New Mexico *n:X#1  *t:Bound })({  next_to_2( *n:X#1 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  border New *n:X#1 ?  *t:Bound })({  next_to_2( stateid( 'new *n:X#1  }) weight 0.0
*n:X -> ({ border at })({ next_to_2( }) weight 0.0
*n:X -> ({ border at least one other state })({ next_to_2( state( }) weight 0.0
*n:X -> ({ border at least one other state ? })({ next_to_2( state( all }) weight 0.0
*n:X -> ({ border on the state })({ next_to_2( state( }) weight 0.0
*n:X -> ({ border on the state whose })({ next_to_2( state( loc_1( }) weight 0.0
*n:X -> ({ border on the state whose capital })({ next_to_2( state( loc_1( capital( }) weight 0.0
*n:X -> ({ border on the state whose capital is })({ next_to_2( state( loc_1( capital( cityid( }) weight 0.0
*n:X -> ({ border on the state whose capital is Boston })({ next_to_2( state( loc_1( capital( cityid( 'boston', }) weight 0.0
*n:X -> ({ border on the state whose capital is Boston ? })({ next_to_2( state( loc_1( capital( cityid( 'boston', _ }) weight 0.0
*n:Query -> ({ *t:Bound  border on the state *n:X#1  *t:Bound })({  next_to_2( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border on the *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border on the *n:X#1 ?  *t:Bound })({  next_to_2( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  border on the *n:X#1 Boston  *t:Bound })({  next_to_2( *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  border on the *n:X#1 capital  *t:Bound })({  next_to_2( *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  border on the *n:X#1 is  *t:Bound })({  next_to_2( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  border on the *n:X#1 whose  *t:Bound })({  next_to_2( *n:X#1 loc_1(  }) weight 0.0
*n:X -> ({ border the Mississippi river })({ next_to_2( river( riverid( 'mississippi' }) weight 0.0
*n:Query -> ({ *t:Bound  border the Mississippi *n:X#1  *t:Bound })({  next_to_2( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:X -> ({ border the largest })({ next_to_2( largest( }) weight 0.0
*n:X -> ({ border the largest state })({ next_to_2( largest( state( }) weight 0.0
*n:X -> ({ border the largest state ? })({ next_to_2( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  border the largest state *n:X#1  *t:Bound })({  next_to_2( largest( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border the largest *n:X#1  *t:Bound })({  next_to_2( largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border the largest *n:X#1 ?  *t:Bound })({  next_to_2( largest( *n:X#1 all  }) weight 0.0
*n:X -> ({ border the state with the largest })({ next_to_2( largest_one( }) weight 0.0
*n:X -> ({ border the state with the largest population })({ next_to_2( largest_one( population_1( }) weight 0.0
*n:X -> ({ border the state with the largest population ? })({ next_to_2( largest_one( population_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  border the state *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border the state *n:X#1 ?  *t:Bound })({  next_to_2( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  border the state *n:X#1 population  *t:Bound })({  next_to_2( *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  border the *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border the *n:X#1 ?  *t:Bound })({  next_to_2( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  border the *n:X#1 river  *t:Bound })({  next_to_2( river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border the *n:X#1 state  *t:Bound })({  next_to_2( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  border the *n:X#1 state ?  *t:Bound })({  next_to_2( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  border the *n:X#1 state *n:X#2  *t:Bound })({  next_to_2( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  border *n:X#1  *t:Bound })({  next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border *n:X#1  *t:Bound })({  next_to_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border *n:X#1 Mexico ?  *t:Bound })({  next_to_2( stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  border *n:X#1 Mexico *n:X#2  *t:Bound })({  next_to_2( *n:X#2 *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  border *n:X#1 ?  *t:Bound })({  next_to_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  border *n:X#1 and  *t:Bound })({  next_to_2( stateid( *n:X#1 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  border *n:X#1 and border  *t:Bound })({  next_to_2( stateid( *n:X#1 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  border *n:X#1 and *n:X#2  *t:Bound })({  next_to_2( stateid( *n:X#1 , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  border *n:X#1 border  *t:Bound })({  next_to_2( stateid( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  border *n:X#1 border *n:X#2  *t:Bound })({  next_to_2( stateid( *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:X -> ({ live })({ population_1( }) weight 0.0
*n:X -> ({ live in Texas ? })({ population_1( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  live in *n:X#1 ?  *t:Bound })({  population_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  live *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:X -> ({ long })({ len( }) weight 0.0
*n:X -> ({ miles })({ riverid( }) weight 0.0
*n:X -> ({ ? })({ _ }) weight 0.0
*n:X -> ({ ? })({ stateid( }) weight 0.0
*n:X -> ({ ? })({ all }) weight 0.0
*n:X -> ({ Boston })({ 'boston', }) weight 0.0
*n:X -> ({ Boston ? })({ 'boston', _ }) weight 0.0
*n:X -> ({ Boston Massachusetts })({ 'boston', 'ma' }) weight 0.0
*n:Query -> ({ *t:Bound  Boston *n:X#1  *t:Bound })({  'boston', *n:X#1  }) weight 0.0
*n:X -> ({ Kansas })({ 'kansas' }) weight 0.0
*n:X -> ({ Kansas ? })({ stateid( 'kansas' }) weight 0.0
*n:Query -> ({ *t:Bound  Kansas *n:X#1  *t:Bound })({  *n:X#1 'kansas'  }) weight 0.0
*n:X -> ({ Minneapolis })({ 'minneapolis', }) weight 0.0
*n:X -> ({ Minneapolis Minnesota })({ 'minneapolis', 'mn' }) weight 0.0
*n:Query -> ({ *t:Bound  Minneapolis *n:X#1  *t:Bound })({  'minneapolis', *n:X#1  }) weight 0.0
*n:X -> ({ Population of Boulder })({ cityid( 'boulder', }) weight 0.0
*n:X -> ({ Population of Boulder ? })({ cityid( 'boulder', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Population of Boulder *n:X#1  *t:Bound })({  cityid( 'boulder', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Population *n:X#1 Boulder  *t:Bound })({  *n:X#1 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  Population *n:X#1 Boulder ?  *t:Bound })({  *n:X#1 'boulder', _  }) weight 0.0
*n:Query -> ({ *t:Bound  Population *n:X#1 Boulder *n:X#2  *t:Bound })({  *n:X#1 'boulder', *n:X#2  }) weight 0.0
*n:X -> ({ Sacramento })({ 'sacramento', }) weight 0.0
*n:X -> ({ Sacramento ? })({ 'sacramento', _ }) weight 0.0
*n:X -> ({ Sacramento is the capital of which state })({ answer( state( loc_1( capital( cityid( 'sacramento', }) weight 0.0
*n:X -> ({ Sacramento is the capital of which state ? })({ answer( state( loc_1( capital( cityid( 'sacramento', _ }) weight 0.0
*n:Query -> ({ *t:Bound  Sacramento is the *n:X#1  *t:Bound })({  answer( *n:X#1 'sacramento',  }) weight 0.0
*n:Query -> ({ *t:Bound  Sacramento is the *n:X#1 ?  *t:Bound })({  answer( *n:X#1 'sacramento', _  }) weight 0.0
*n:Query -> ({ *t:Bound  Sacramento is the *n:X#1 state  *t:Bound })({  answer( state( *n:X#1 'sacramento',  }) weight 0.0
*n:Query -> ({ *t:Bound  Sacramento is *n:X#1  *t:Bound })({  *n:X#1 'sacramento',  }) weight 0.0
*n:Query -> ({ *t:Bound  Sacramento is *n:X#1 ?  *t:Bound })({  *n:X#1 'sacramento', _  }) weight 0.0
*n:Query -> ({ *t:Bound  Sacramento *n:X#1  *t:Bound })({  'sacramento', *n:X#1  }) weight 0.0
*n:X -> ({ Show major })({ major( }) weight 0.0
*n:X -> ({ Show major cities })({ major( city( }) weight 0.0
*n:X -> ({ Show major cities in })({ major( city( loc_2( }) weight 0.0
*n:X -> ({ Show major cities in Colorado . })({ major( city( loc_2( stateid( 'colorado' }) weight 0.0
*n:Query -> ({ *t:Bound  Show major cities in *n:X#1  *t:Bound })({  major( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Show major cities *n:X#1  *t:Bound })({  major( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Show major *n:X#1  *t:Bound })({  major( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  Show major *n:X#1 Colorado .  *t:Bound })({  major( *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  Show major *n:X#1 Colorado *n:X#2  *t:Bound })({  major( *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  Show major *n:X#1 in  *t:Bound })({  major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  Show major *n:X#1 in *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:X -> ({ Spokane })({ 'spokane', }) weight 0.0
*n:X -> ({ Spokane Washington })({ 'spokane', 'wa' }) weight 0.0
*n:Query -> ({ *t:Bound  Spokane *n:X#1  *t:Bound })({  'spokane', *n:X#1  }) weight 0.0
*n:X -> ({ area })({ area_1( }) weight 0.0
*n:X -> ({ area of })({ area_1( cityid( }) weight 0.0
*n:X -> ({ area of Alaska ? })({ area_1( stateid( 'alaska' }) weight 0.0
*n:X -> ({ area of California ? })({ area_1( stateid( 'california' }) weight 0.0
*n:X -> ({ area of Maryland in square kilometers ? })({ area_1( stateid( 'maryland' }) weight 0.0
*n:X -> ({ area of Florida ? })({ area_1( stateid( 'florida' }) weight 0.0
*n:X -> ({ area of Wisconsin ? })({ area_1( stateid( 'wisconsin' }) weight 0.0
*n:X -> ({ area of Seattle })({ area_1( cityid( 'seattle', }) weight 0.0
*n:X -> ({ area of Seattle ? })({ area_1( cityid( 'seattle', _ }) weight 0.0
*n:Query -> ({ *t:Bound  area of Seattle *n:X#1  *t:Bound })({  area_1( cityid( 'seattle', *n:X#1  }) weight 0.0
*n:X -> ({ area of Maine ? })({ area_1( stateid( 'maine' }) weight 0.0
*n:X -> ({ area of Idaho ? })({ area_1( stateid( 'idaho' }) weight 0.0
*n:X -> ({ area of Texas ? })({ area_1( stateid( 'texas' }) weight 0.0
*n:X -> ({ area of New Mexico ? })({ area_1( stateid( 'new mexico' }) weight 0.0
*n:Query -> ({ *t:Bound  area of New *n:X#1 ?  *t:Bound })({  area_1( stateid( 'new *n:X#1  }) weight 0.0
*n:X -> ({ area of South Carolina ? })({ area_1( stateid( 'south carolina' }) weight 0.0
*n:Query -> ({ *t:Bound  area of South *n:X#1 ?  *t:Bound })({  area_1( stateid( 'south *n:X#1  }) weight 0.0
*n:X -> ({ area of Ohio ? })({ area_1( stateid( 'ohio' }) weight 0.0
*n:X -> ({ area of all the states combined })({ sum( area_1( state( }) weight 0.0
*n:X -> ({ area of all the states combined ? })({ sum( area_1( state( all }) weight 0.0
*n:X -> ({ area of the Texas state ? })({ area_1( state( stateid( 'texas' }) weight 0.0
*n:X -> ({ area of the states })({ area_1( state( }) weight 0.0
*n:X -> ({ area of the states ? })({ area_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  area of the states *n:X#1  *t:Bound })({  area_1( state( *n:X#1  }) weight 0.0
*n:X -> ({ area of the largest })({ area_1( largest( }) weight 0.0
*n:X -> ({ area of the largest state })({ area_1( largest( state( }) weight 0.0
*n:X -> ({ area of the largest state ? })({ area_1( largest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  area of the largest *n:X#1  *t:Bound })({  area_1( largest( *n:X#1  }) weight 0.0
*n:X -> ({ area of the smallest })({ area_1( smallest( }) weight 0.0
*n:X -> ({ area of the smallest state })({ area_1( smallest( state( }) weight 0.0
*n:X -> ({ area of the smallest state ? })({ area_1( smallest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  area of the smallest *n:X#1  *t:Bound })({  area_1( smallest( *n:X#1  }) weight 0.0
*n:X -> ({ area of the state with the capital })({ area_1( state( loc_1( capital( cityid( }) weight 0.0
*n:X -> ({ area of the state with the capital Albany })({ area_1( state( loc_1( capital( cityid( 'albany', }) weight 0.0
*n:X -> ({ area of the state with the capital Albany ? })({ area_1( state( loc_1( capital( cityid( 'albany', _ }) weight 0.0
*n:X -> ({ area of the state with the smallest population density })({ area_1( smallest_one( density_1( state( }) weight 0.0
*n:X -> ({ area of the state with the smallest population density ? })({ area_1( smallest_one( density_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  area of the state *n:X#1  *t:Bound })({  area_1( state( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  area of the state *n:X#1  *t:Bound })({  area_1( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  area of the *n:X#1  *t:Bound })({  area_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  area of the *n:X#1  *t:Bound })({  area_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  area of the *n:X#1 Albany  *t:Bound })({  area_1( *n:X#1 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  area of the *n:X#1 ?  *t:Bound })({  area_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  area of the *n:X#1 state  *t:Bound })({  area_1( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  area of *n:X#1  *t:Bound })({  area_1( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  area of *n:X#1 Mexico ?  *t:Bound })({  area_1( stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  area of *n:X#1 Carolina ?  *t:Bound })({  area_1( stateid( *n:X#1 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  area of *n:X#1 ?  *t:Bound })({  area_1( cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  area of *n:X#1 ?  *t:Bound })({  area_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  area *n:X#1  *t:Bound })({  area_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  area *n:X#1 Albany  *t:Bound })({  area_1( *n:X#1 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  area *n:X#1 Albany ?  *t:Bound })({  area_1( *n:X#1 'albany', _  }) weight 0.0
*n:Query -> ({ *t:Bound  area *n:X#1 Albany *n:X#2  *t:Bound })({  area_1( *n:X#1 'albany', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  area *n:X#1 ?  *t:Bound })({  area_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  area *n:X#1 Seattle  *t:Bound })({  area_1( *n:X#1 'seattle',  }) weight 0.0
*n:Query -> ({ *t:Bound  area *n:X#1 Seattle ?  *t:Bound })({  area_1( *n:X#1 'seattle', _  }) weight 0.0
*n:Query -> ({ *t:Bound  area *n:X#1 Seattle *n:X#2  *t:Bound })({  area_1( *n:X#1 'seattle', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  area *n:X#1 the state *n:X#2  *t:Bound })({  area_1( state( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  area *n:X#1 the *n:X#2  *t:Bound })({  area_1( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  area *n:X#1 the *n:X#2 Albany  *t:Bound })({  area_1( *n:X#2 *n:X#1 'albany',  }) weight 0.0
*n:X -> ({ biggest })({ largest( }) weight 0.0
*n:X -> ({ biggest })({ longest( }) weight 0.0
*n:X -> ({ biggest American city })({ largest( city( }) weight 0.0
*n:X -> ({ biggest American city in })({ largest( city( loc_2( }) weight 0.0
*n:X -> ({ biggest American city in a state with a })({ largest( city( loc_2( state( loc_1( }) weight 0.0
*n:X -> ({ biggest American city in a state with a river })({ largest( city( loc_2( state( loc_1( river( }) weight 0.0
*n:X -> ({ biggest American city in a state with a river ? })({ largest( city( loc_2( state( loc_1( river( all }) weight 0.0
*n:Query -> ({ *t:Bound  biggest American city in *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest American city *n:X#1  *t:Bound })({  largest( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest American city *n:X#1 ?  *t:Bound })({  largest( city( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest American city *n:X#1 river  *t:Bound })({  largest( city( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest American *n:X#1  *t:Bound })({  largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest American *n:X#1 ?  *t:Bound })({  largest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest American *n:X#1 in  *t:Bound })({  largest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest American *n:X#1 in *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest American *n:X#1 river  *t:Bound })({  largest( *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest American *n:X#1 river ?  *t:Bound })({  largest( *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest American *n:X#1 river *n:X#2  *t:Bound })({  largest( *n:X#1 river( *n:X#2  }) weight 0.0
*n:X -> ({ biggest capital })({ largest( capital( }) weight 0.0
*n:X -> ({ biggest capital city })({ largest( capital( city( }) weight 0.0
*n:X -> ({ biggest capital city in the })({ largest( capital( city( loc_2( }) weight 0.0
*n:X -> ({ biggest capital city in the US })({ largest( capital( city( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest capital city *n:X#1  *t:Bound })({  largest( capital( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest capital *n:X#1  *t:Bound })({  largest( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest capital *n:X#1 US  *t:Bound })({  largest( capital( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest capital *n:X#1 in the  *t:Bound })({  largest( capital( *n:X#1 loc_2(  }) weight 0.0
*n:X -> ({ biggest river })({ longest( river( }) weight 0.0
*n:X -> ({ biggest river in })({ longest( river( loc_2( }) weight 0.0
*n:X -> ({ biggest river in Illinois ? })({ longest( river( loc_2( stateid( 'illinois' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest river in Illinois *n:X#1  *t:Bound })({  longest( river( loc_2( *n:X#1 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest river in *n:X#1  *t:Bound })({  longest( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest river in *n:X#1 ?  *t:Bound })({  longest( river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest river *n:X#1  *t:Bound })({  longest( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest river *n:X#1 Illinois ?  *t:Bound })({  longest( river( *n:X#1 stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest river *n:X#1 Illinois *n:X#2  *t:Bound })({  longest( river( *n:X#1 *n:X#2 'illinois'  }) weight 0.0
*n:X -> ({ biggest city })({ largest( city( }) weight 0.0
*n:X -> ({ biggest city have in the USA ? })({ largest( city( all }) weight 0.0
*n:X -> ({ biggest city in })({ largest( city( loc_2( }) weight 0.0
*n:X -> ({ biggest city in Oregon ? })({ largest( city( loc_2( stateid( 'oregon' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city in Oregon *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'oregon'  }) weight 0.0
*n:X -> ({ biggest city in Arizona ? })({ largest( city( loc_2( stateid( 'arizona' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city in Arizona *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'arizona'  }) weight 0.0
*n:X -> ({ biggest city in Louisiana ? })({ largest( city( loc_2( stateid( 'louisiana' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city in Louisiana *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'louisiana'  }) weight 0.0
*n:X -> ({ biggest city in Georgia ? })({ largest( city( loc_2( stateid( 'georgia' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city in Georgia *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'georgia'  }) weight 0.0
*n:X -> ({ biggest city in Kansas ? })({ largest( city( loc_2( stateid( 'kansas' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city in Kansas *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'kansas'  }) weight 0.0
*n:X -> ({ biggest city in Texas ? })({ largest( city( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city in Texas *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ biggest city in USA })({ largest( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ biggest city in New York state ? })({ largest( city( loc_2( state( stateid( 'new york' }) weight 0.0
*n:X -> ({ biggest city in Nebraska ? })({ largest( city( loc_2( stateid( 'nebraska' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city in Nebraska *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'nebraska'  }) weight 0.0
*n:X -> ({ biggest city in Wyoming ? })({ largest( city( loc_2( stateid( 'wyoming' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city in Wyoming *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1 'wyoming'  }) weight 0.0
*n:X -> ({ biggest city in the })({ largest( city( loc_2( }) weight 0.0
*n:X -> ({ biggest city in the USA })({ largest( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ biggest city in the US })({ largest( city( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ biggest city in the smallest })({ largest( city( loc_2( smallest( }) weight 0.0
*n:X -> ({ biggest city in the smallest state })({ largest( city( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ biggest city in the smallest state ? })({ largest( city( loc_2( smallest( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city in the *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city in *n:X#1  *t:Bound })({  largest( city( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city in *n:X#1 ?  *t:Bound })({  largest( city( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1  *t:Bound })({  largest( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Oregon ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Oregon *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Arizona ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Arizona *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Louisiana ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Louisiana *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Georgia ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Georgia *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 ?  *t:Bound })({  largest( city( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Kansas ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Kansas *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Texas ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Texas *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 USA  *t:Bound })({  largest( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Nebraska ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Nebraska *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Wyoming ?  *t:Bound })({  largest( city( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 Wyoming *n:X#2  *t:Bound })({  largest( city( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 US  *t:Bound })({  largest( city( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 smallest  *t:Bound })({  largest( city( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 smallest state  *t:Bound })({  largest( city( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 smallest *n:X#2  *t:Bound })({  largest( city( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 state  *t:Bound })({  largest( city( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 state ?  *t:Bound })({  largest( city( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest city *n:X#1 state *n:X#2  *t:Bound })({  largest( city( *n:X#1 state( *n:X#2  }) weight 0.0
*n:X -> ({ biggest rivers })({ longest( river( }) weight 0.0
*n:X -> ({ biggest rivers in })({ longest( river( loc_2( }) weight 0.0
*n:X -> ({ biggest rivers in Texas ? })({ longest( river( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest rivers in Texas *n:X#1  *t:Bound })({  longest( river( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest rivers in *n:X#1  *t:Bound })({  longest( river( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest rivers in *n:X#1 ?  *t:Bound })({  longest( river( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest rivers *n:X#1  *t:Bound })({  longest( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest rivers *n:X#1 Texas ?  *t:Bound })({  longest( river( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest rivers *n:X#1 Texas *n:X#2  *t:Bound })({  longest( river( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:X -> ({ biggest state })({ largest( state( }) weight 0.0
*n:X -> ({ biggest state ? })({ largest( state( all }) weight 0.0
*n:X -> ({ biggest state in })({ largest( state( loc_2( }) weight 0.0
*n:X -> ({ biggest state in continental })({ largest( state( loc_2( countryid( }) weight 0.0
*n:X -> ({ biggest state in continental US })({ largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest state in continental *n:X#1  *t:Bound })({  largest( state( loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ biggest state in the })({ largest( state( loc_2( }) weight 0.0
*n:X -> ({ biggest state in the USA })({ largest( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  biggest state in the *n:X#1  *t:Bound })({  largest( state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest state in *n:X#1  *t:Bound })({  largest( state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest state in *n:X#1 US  *t:Bound })({  largest( state( loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest state *n:X#1  *t:Bound })({  largest( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest state *n:X#1 USA  *t:Bound })({  largest( state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest state *n:X#1 US  *t:Bound })({  largest( state( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest state *n:X#1 continental  *t:Bound })({  largest( state( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest state *n:X#1 continental US  *t:Bound })({  largest( state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest state *n:X#1 continental *n:X#2  *t:Bound })({  largest( state( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1  *t:Bound })({  largest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1  *t:Bound })({  longest( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Oregon ?  *t:Bound })({  largest( *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Oregon *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Arizona ?  *t:Bound })({  largest( *n:X#1 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Arizona *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Louisiana ?  *t:Bound })({  largest( *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Louisiana *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Georgia ?  *t:Bound })({  largest( *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Georgia *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 ?  *t:Bound })({  largest( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Kansas ?  *t:Bound })({  largest( *n:X#1 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Kansas *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Texas ?  *t:Bound })({  largest( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Texas ?  *t:Bound })({  longest( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Texas *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Texas *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Illinois ?  *t:Bound })({  longest( *n:X#1 stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Illinois *n:X#2  *t:Bound })({  longest( *n:X#1 *n:X#2 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 USA  *t:Bound })({  largest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 New York *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Nebraska ?  *t:Bound })({  largest( *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Nebraska *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Wyoming ?  *t:Bound })({  largest( *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 Wyoming *n:X#2  *t:Bound })({  largest( *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 US  *t:Bound })({  largest( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 US  *t:Bound })({  largest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in  *t:Bound })({  largest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in  *t:Bound })({  longest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Oregon ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Oregon *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Arizona ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Arizona *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Louisiana ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Louisiana *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Georgia ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Georgia *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Kansas ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Kansas *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Texas ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Texas ?  *t:Bound })({  longest( *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Texas *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Texas *n:X#2  *t:Bound })({  longest( *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Illinois ?  *t:Bound })({  longest( *n:X#1 loc_2( stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Illinois *n:X#2  *t:Bound })({  longest( *n:X#1 loc_2( *n:X#2 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in USA  *t:Bound })({  largest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Nebraska ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Nebraska *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Wyoming ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in Wyoming *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in continental  *t:Bound })({  largest( *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in continental US  *t:Bound })({  largest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in continental *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in the  *t:Bound })({  largest( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in the USA  *t:Bound })({  largest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in the US  *t:Bound })({  largest( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in the smallest  *t:Bound })({  largest( *n:X#1 loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in the *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in *n:X#2  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in *n:X#2  *t:Bound })({  longest( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in *n:X#2 ?  *t:Bound })({  largest( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in *n:X#2 ?  *t:Bound })({  longest( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 in *n:X#2 US  *t:Bound })({  largest( *n:X#1 loc_2( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 city  *t:Bound })({  largest( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 city in the  *t:Bound })({  largest( *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 city *n:X#2  *t:Bound })({  largest( *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 continental  *t:Bound })({  largest( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 continental US  *t:Bound })({  largest( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 continental *n:X#2  *t:Bound })({  largest( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 smallest  *t:Bound })({  largest( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 smallest state  *t:Bound })({  largest( *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 smallest state ?  *t:Bound })({  largest( *n:X#1 smallest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 smallest state *n:X#2  *t:Bound })({  largest( *n:X#1 smallest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 smallest *n:X#2  *t:Bound })({  largest( *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 smallest *n:X#2 ?  *t:Bound })({  largest( *n:X#1 smallest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 state  *t:Bound })({  largest( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 state ?  *t:Bound })({  largest( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  biggest *n:X#1 state *n:X#2  *t:Bound })({  largest( *n:X#1 state( *n:X#2  }) weight 0.0
*n:X -> ({ continental })({ countryid( }) weight 0.0
*n:X -> ({ continental US })({ countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  continental *n:X#1  *t:Bound })({  countryid( *n:X#1  }) weight 0.0
*n:X -> ({ dense })({ density_1( }) weight 0.0
*n:X -> ({ dense state })({ density_1( state( }) weight 0.0
*n:X -> ({ dense state in the })({ density_1( state( loc_2( }) weight 0.0
*n:X -> ({ dense state in the USA })({ density_1( state( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  dense state in the *n:X#1  *t:Bound })({  density_1( state( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  dense state *n:X#1  *t:Bound })({  density_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  dense state *n:X#1 USA  *t:Bound })({  density_1( state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  dense *n:X#1  *t:Bound })({  density_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  dense *n:X#1 USA  *t:Bound })({  density_1( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  dense *n:X#1 in the  *t:Bound })({  density_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  dense *n:X#1 in the USA  *t:Bound })({  density_1( *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  dense *n:X#1 in the *n:X#2  *t:Bound })({  density_1( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:X -> ({ mountain })({ mountain( }) weight 0.0
*n:X -> ({ mountain in })({ mountain( loc_2( }) weight 0.0
*n:X -> ({ mountain in Alaska ? })({ mountain( loc_2( stateid( 'alaska' }) weight 0.0
*n:Query -> ({ *t:Bound  mountain in Alaska *n:X#1  *t:Bound })({  mountain( loc_2( *n:X#1 'alaska'  }) weight 0.0
*n:X -> ({ mountain in America })({ mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ mountain in Texas ? })({ mountain( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  mountain in Texas *n:X#1  *t:Bound })({  mountain( loc_2( *n:X#1 'texas'  }) weight 0.0
*n:X -> ({ mountain in US })({ mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:X -> ({ mountain in the })({ mountain( loc_2( }) weight 0.0
*n:X -> ({ mountain in the United })({ mountain( loc_2( countryid( }) weight 0.0
*n:X -> ({ mountain in the United States })({ mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  mountain in the United *n:X#1  *t:Bound })({  mountain( loc_2( countryid( *n:X#1  }) weight 0.0
*n:X -> ({ mountain in the US })({ mountain( loc_2( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  mountain in the *n:X#1  *t:Bound })({  mountain( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain in the *n:X#1 States  *t:Bound })({  mountain( loc_2( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain in *n:X#1  *t:Bound })({  mountain( loc_2( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain in *n:X#1 ?  *t:Bound })({  mountain( loc_2( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain *n:X#1  *t:Bound })({  mountain( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain *n:X#1 States  *t:Bound })({  mountain( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain *n:X#1 Alaska ?  *t:Bound })({  mountain( *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain *n:X#1 Alaska *n:X#2  *t:Bound })({  mountain( *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain *n:X#1 America  *t:Bound })({  mountain( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain *n:X#1 Texas ?  *t:Bound })({  mountain( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain *n:X#1 Texas *n:X#2  *t:Bound })({  mountain( *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain *n:X#1 United  *t:Bound })({  mountain( *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain *n:X#1 United States  *t:Bound })({  mountain( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain *n:X#1 United *n:X#2  *t:Bound })({  mountain( *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  mountain *n:X#1 US  *t:Bound })({  mountain( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:X -> ({ population })({ population_1( }) weight 0.0
*n:X -> ({ population ? })({ population_1( state( all }) weight 0.0
*n:X -> ({ population densities of each })({ density_1( }) weight 0.0
*n:X -> ({ population densities of each US state })({ density_1( state( }) weight 0.0
*n:X -> ({ population densities of each US state ? })({ density_1( state( all }) weight 0.0
*n:X -> ({ population density })({ density_1( }) weight 0.0
*n:X -> ({ population density in the state })({ density_1( state( }) weight 0.0
*n:X -> ({ population density in the state with })({ density_1( state( loc_1( }) weight 0.0
*n:X -> ({ population density in the state with capital })({ density_1( state( loc_1( capital( }) weight 0.0
*n:X -> ({ population density in the state with capital Austin })({ density_1( state( loc_1( capital( cityid( 'austin', }) weight 0.0
*n:X -> ({ population density in the state with capital Austin ? })({ density_1( state( loc_1( capital( cityid( 'austin', _ }) weight 0.0
*n:Query -> ({ *t:Bound  population density in the *n:X#1  *t:Bound })({  density_1( *n:X#1  }) weight 0.0
*n:X -> ({ population density of Maine ? })({ density_1( stateid( 'maine' }) weight 0.0
*n:X -> ({ population density of Texas ? })({ density_1( stateid( 'texas' }) weight 0.0
*n:X -> ({ population density of Wyoming ? })({ density_1( stateid( 'wyoming' }) weight 0.0
*n:X -> ({ population density of South Dakota ? })({ density_1( stateid( 'south dakota' }) weight 0.0
*n:X -> ({ population density of the largest })({ density_1( largest( }) weight 0.0
*n:X -> ({ population density of the largest state })({ density_1( largest( state( }) weight 0.0
*n:X -> ({ population density of the largest state ? })({ density_1( largest( state( all }) weight 0.0
*n:X -> ({ population density of the smallest })({ density_1( smallest( }) weight 0.0
*n:X -> ({ population density of the smallest state })({ density_1( smallest( state( }) weight 0.0
*n:X -> ({ population density of the smallest state ? })({ density_1( smallest( state( all }) weight 0.0
*n:X -> ({ population density of the state with the smallest area })({ density_1( smallest_one( area_1( state( }) weight 0.0
*n:X -> ({ population density of the state with the smallest area ? })({ density_1( smallest_one( area_1( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  population density of the *n:X#1  *t:Bound })({  density_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population density of *n:X#1 ?  *t:Bound })({  density_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population density *n:X#1  *t:Bound })({  density_1( *n:X#1  }) weight 0.0
*n:X -> ({ population in })({ population_1( cityid( }) weight 0.0
*n:X -> ({ population in Boston })({ population_1( cityid( 'boston', }) weight 0.0
*n:X -> ({ population in Boston ? })({ population_1( cityid( 'boston', _ }) weight 0.0
*n:Query -> ({ *t:Bound  population in Boston *n:X#1  *t:Bound })({  population_1( cityid( 'boston', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population in *n:X#1  *t:Bound })({  population_1( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population in *n:X#1 ?  *t:Bound })({  population_1( cityid( *n:X#1 _  }) weight 0.0
*n:X -> ({ population does Texas have ? })({ population_1( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  population does Texas have *n:X#1  *t:Bound })({  population_1( *n:X#1 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  population does *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population does *n:X#1 have ?  *t:Bound })({  population_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population does *n:X#1 have *n:X#2  *t:Bound })({  population_1( *n:X#2 *n:X#1  }) weight 0.0
*n:X -> ({ population of })({ population_1( }) weight 0.0
*n:X -> ({ population of })({ population_1( cityid( }) weight 0.0
*n:X -> ({ population of })({ population_1( city( cityid( }) weight 0.0
*n:X -> ({ population of Oregon ? })({ population_1( stateid( 'oregon' }) weight 0.0
*n:X -> ({ population of Alaska ? })({ population_1( stateid( 'alaska' }) weight 0.0
*n:X -> ({ population of California ? })({ population_1( stateid( 'california' }) weight 0.0
*n:X -> ({ population of Arizona ? })({ population_1( stateid( 'arizona' }) weight 0.0
*n:X -> ({ population of Denver })({ population_1( cityid( 'denver', }) weight 0.0
*n:X -> ({ population of Denver ? })({ population_1( cityid( 'denver', _ }) weight 0.0
*n:Query -> ({ *t:Bound  population of Denver *n:X#1  *t:Bound })({  population_1( cityid( 'denver', *n:X#1  }) weight 0.0
*n:X -> ({ population of Boulder })({ population_1( cityid( 'boulder', }) weight 0.0
*n:X -> ({ population of Boulder ? })({ population_1( cityid( 'boulder', _ }) weight 0.0
*n:Query -> ({ *t:Bound  population of Boulder *n:X#1  *t:Bound })({  population_1( cityid( 'boulder', *n:X#1  }) weight 0.0
*n:X -> ({ population of Maryland ? })({ population_1( stateid( 'maryland' }) weight 0.0
*n:X -> ({ population of Atlanta })({ population_1( cityid( 'atlanta', }) weight 0.0
*n:X -> ({ population of Atlanta ? })({ population_1( cityid( 'atlanta', _ }) weight 0.0
*n:X -> ({ population of Atlanta GA })({ population_1( cityid( 'atlanta', 'ga' }) weight 0.0
*n:Query -> ({ *t:Bound  population of Atlanta *n:X#1  *t:Bound })({  population_1( cityid( 'atlanta', *n:X#1  }) weight 0.0
*n:X -> ({ population of Hawaii ? })({ population_1( stateid( 'hawaii' }) weight 0.0
*n:X -> ({ population of Rhode Island ? })({ population_1( stateid( 'rhode island' }) weight 0.0
*n:Query -> ({ *t:Bound  population of Rhode *n:X#1 ?  *t:Bound })({  population_1( stateid( 'rhode *n:X#1  }) weight 0.0
*n:X -> ({ population of Austin })({ population_1( cityid( 'austin', }) weight 0.0
*n:X -> ({ population of Austin ? })({ population_1( cityid( 'austin', _ }) weight 0.0
*n:X -> ({ population of Austin Texas })({ population_1( cityid( 'austin', 'tx' }) weight 0.0
*n:Query -> ({ *t:Bound  population of Austin *n:X#1  *t:Bound })({  population_1( cityid( 'austin', *n:X#1  }) weight 0.0
*n:X -> ({ population of Boston })({ population_1( cityid( 'boston', }) weight 0.0
*n:X -> ({ population of Boston Massachusetts })({ population_1( cityid( 'boston', 'ma' }) weight 0.0
*n:Query -> ({ *t:Bound  population of Boston *n:X#1  *t:Bound })({  population_1( cityid( 'boston', *n:X#1  }) weight 0.0
*n:X -> ({ population of Minnesota ? })({ population_1( stateid( 'minnesota' }) weight 0.0
*n:X -> ({ population of Erie })({ population_1( cityid( 'erie', }) weight 0.0
*n:X -> ({ population of Erie Pennsylvania })({ population_1( cityid( 'erie', 'pa' }) weight 0.0
*n:Query -> ({ *t:Bound  population of Erie *n:X#1  *t:Bound })({  population_1( cityid( 'erie', *n:X#1  }) weight 0.0
*n:X -> ({ population of Houston })({ population_1( cityid( 'houston', }) weight 0.0
*n:X -> ({ population of Houston ? })({ population_1( cityid( 'houston', _ }) weight 0.0
*n:Query -> ({ *t:Bound  population of Houston *n:X#1  *t:Bound })({  population_1( cityid( 'houston', *n:X#1  }) weight 0.0
*n:X -> ({ population of Seattle })({ population_1( cityid( 'seattle', }) weight 0.0
*n:X -> ({ population of Seattle ? })({ population_1( cityid( 'seattle', _ }) weight 0.0
*n:X -> ({ population of Seattle Washington })({ population_1( cityid( 'seattle', 'wa' }) weight 0.0
*n:Query -> ({ *t:Bound  population of Seattle *n:X#1  *t:Bound })({  population_1( cityid( 'seattle', *n:X#1  }) weight 0.0
*n:X -> ({ population of Maine ? })({ population_1( stateid( 'maine' }) weight 0.0
*n:X -> ({ population of Idaho ? })({ population_1( stateid( 'idaho' }) weight 0.0
*n:X -> ({ population of Dallas })({ population_1( cityid( 'dallas', }) weight 0.0
*n:X -> ({ population of Dallas ? })({ population_1( cityid( 'dallas', _ }) weight 0.0
*n:Query -> ({ *t:Bound  population of Dallas *n:X#1  *t:Bound })({  population_1( cityid( 'dallas', *n:X#1  }) weight 0.0
*n:X -> ({ population of Tucson })({ population_1( cityid( 'tucson', }) weight 0.0
*n:X -> ({ population of Tucson ? })({ population_1( cityid( 'tucson', _ }) weight 0.0
*n:Query -> ({ *t:Bound  population of Tucson *n:X#1  *t:Bound })({  population_1( cityid( 'tucson', *n:X#1  }) weight 0.0
*n:X -> ({ population of Utah ? })({ population_1( stateid( 'utah' }) weight 0.0
*n:X -> ({ population of Texas ? })({ population_1( stateid( 'texas' }) weight 0.0
*n:X -> ({ population of Montana ? })({ population_1( stateid( 'montana' }) weight 0.0
*n:X -> ({ population of Illinois ? })({ population_1( stateid( 'illinois' }) weight 0.0
*n:X -> ({ population of Washington })({ population_1( cityid( 'washington', }) weight 0.0
*n:X -> ({ population of Washington ? })({ population_1( stateid( 'washington' }) weight 0.0
*n:X -> ({ population of Washington DC })({ population_1( cityid( 'washington', 'dc' }) weight 0.0
*n:Query -> ({ *t:Bound  population of Washington *n:X#1  *t:Bound })({  population_1( cityid( 'washington', *n:X#1  }) weight 0.0
*n:X -> ({ population of Mississippi ? })({ population_1( stateid( 'mississippi' }) weight 0.0
*n:X -> ({ population of New })({ population_1( city( cityid( 'new }) weight 0.0
*n:X -> ({ population of New Mexico ? })({ population_1( stateid( 'new mexico' }) weight 0.0
*n:X -> ({ population of New York ? })({ population_1( stateid( 'new york' }) weight 0.0
*n:X -> ({ population of New York City })({ population_1( city( cityid( 'new york', }) weight 0.0
*n:X -> ({ population of New York City ? })({ population_1( city( cityid( 'new york', _ }) weight 0.0
*n:Query -> ({ *t:Bound  population of New *n:X#1  *t:Bound })({  population_1( city( cityid( 'new *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population of New *n:X#1 ?  *t:Bound })({  population_1( stateid( 'new *n:X#1  }) weight 0.0
*n:X -> ({ population of Missouri ? })({ population_1( stateid( 'missouri' }) weight 0.0
*n:X -> ({ population of Sacramento })({ population_1( cityid( 'sacramento', }) weight 0.0
*n:X -> ({ population of Sacramento ? })({ population_1( cityid( 'sacramento', _ }) weight 0.0
*n:Query -> ({ *t:Bound  population of Sacramento *n:X#1  *t:Bound })({  population_1( cityid( 'sacramento', *n:X#1  }) weight 0.0
*n:X -> ({ population of San })({ population_1( cityid( 'san }) weight 0.0
*n:X -> ({ population of San Antonio })({ population_1( cityid( 'san antonio', }) weight 0.0
*n:X -> ({ population of San Antonio ? })({ population_1( cityid( 'san antonio', _ }) weight 0.0
*n:Query -> ({ *t:Bound  population of San Antonio *n:X#1  *t:Bound })({  population_1( cityid( 'san antonio', *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population of San *n:X#1  *t:Bound })({  population_1( cityid( 'san *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population of San *n:X#1 ?  *t:Bound })({  population_1( cityid( 'san *n:X#1 _  }) weight 0.0
*n:X -> ({ population of South Dakota ? })({ population_1( stateid( 'south dakota' }) weight 0.0
*n:Query -> ({ *t:Bound  population of South *n:X#1 ?  *t:Bound })({  population_1( stateid( 'south *n:X#1  }) weight 0.0
*n:X -> ({ population of Portland })({ population_1( cityid( 'portland', }) weight 0.0
*n:X -> ({ population of Portland Maine })({ population_1( cityid( 'portland', 'me' }) weight 0.0
*n:Query -> ({ *t:Bound  population of Portland *n:X#1  *t:Bound })({  population_1( cityid( 'portland', *n:X#1  }) weight 0.0
*n:X -> ({ population of Springfield })({ population_1( cityid( 'springfield', }) weight 0.0
*n:X -> ({ population of Springfield Missouri })({ population_1( cityid( 'springfield', 'mo' }) weight 0.0
*n:X -> ({ population of Springfield South Dakota })({ population_1( cityid( 'springfield', 'sd' }) weight 0.0
*n:Query -> ({ *t:Bound  population of Springfield *n:X#1  *t:Bound })({  population_1( cityid( 'springfield', *n:X#1  }) weight 0.0
*n:X -> ({ population of Tempe })({ population_1( cityid( 'tempe', }) weight 0.0
*n:X -> ({ population of Tempe Arizona })({ population_1( cityid( 'tempe', 'az' }) weight 0.0
*n:Query -> ({ *t:Bound  population of Tempe *n:X#1  *t:Bound })({  population_1( cityid( 'tempe', *n:X#1  }) weight 0.0
*n:X -> ({ population of the capital })({ population_1( capital( }) weight 0.0
*n:X -> ({ population of the capital of the })({ population_1( capital( loc_2( }) weight 0.0
*n:X -> ({ population of the capital of the largest })({ population_1( capital( loc_2( largest( }) weight 0.0
*n:X -> ({ population of the capital of the largest state })({ population_1( capital( loc_2( largest( state( }) weight 0.0
*n:X -> ({ population of the capital of the largest state ? })({ population_1( capital( loc_2( largest( state( all }) weight 0.0
*n:X -> ({ population of the capital of the largest state through which })({ population_1( capital( loc_2( largest( state( traverse_1( }) weight 0.0
*n:X -> ({ population of the capital of the smallest })({ population_1( capital( loc_2( smallest( }) weight 0.0
*n:X -> ({ population of the capital of the smallest state })({ population_1( capital( loc_2( smallest( state( }) weight 0.0
*n:X -> ({ population of the capital of the smallest state ? })({ population_1( capital( loc_2( smallest( state( all }) weight 0.0
*n:X -> ({ population of the states })({ population_1( state( }) weight 0.0
*n:X -> ({ population of the states that border })({ population_1( state( next_to_2( }) weight 0.0
*n:X -> ({ population of the states that border Texas ? })({ population_1( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  population of the states *n:X#1  *t:Bound })({  population_1( state( *n:X#1  }) weight 0.0
*n:X -> ({ population of the largest })({ population_1( largest( }) weight 0.0
*n:X -> ({ population of the largest city })({ population_1( largest( city( }) weight 0.0
*n:X -> ({ population of the largest state })({ population_1( largest( state( }) weight 0.0
*n:X -> ({ population of the largest state ? })({ population_1( largest( state( all }) weight 0.0
*n:X -> ({ population of the largest state that borders })({ population_1( largest( state( next_to_2( }) weight 0.0
*n:X -> ({ population of the largest state that borders Texas ? })({ population_1( largest( state( next_to_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  population of the largest *n:X#1  *t:Bound })({  population_1( largest( *n:X#1  }) weight 0.0
*n:X -> ({ population of the major })({ population_1( major( }) weight 0.0
*n:X -> ({ population of the major cities })({ population_1( major( city( }) weight 0.0
*n:X -> ({ population of the major cities in })({ population_1( major( city( loc_2( }) weight 0.0
*n:X -> ({ population of the major cities in Wisconsin ? })({ population_1( major( city( loc_2( stateid( 'wisconsin' }) weight 0.0
*n:Query -> ({ *t:Bound  population of the major *n:X#1  *t:Bound })({  population_1( major( *n:X#1  }) weight 0.0
*n:X -> ({ population of the state with the highest population density })({ population_1( largest_one( density_1( state( }) weight 0.0
*n:X -> ({ population of the state with the highest population density ? })({ population_1( largest_one( density_1( state( all }) weight 0.0
*n:X -> ({ population of the state with the largest area })({ population_1( largest_one( area_1( state( }) weight 0.0
*n:X -> ({ population of the state with the largest area ? })({ population_1( largest_one( area_1( state( all }) weight 0.0
*n:X -> ({ population of the state that borders the most })({ population_1( most( state( next_to_2( }) weight 0.0
*n:X -> ({ population of the state that borders the most states })({ population_1( most( state( next_to_2( state( }) weight 0.0
*n:X -> ({ population of the state that borders the most states ? })({ population_1( most( state( next_to_2( state( all }) weight 0.0
*n:Query -> ({ *t:Bound  population of the state *n:X#1  *t:Bound })({  population_1( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  population of the *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population of the *n:X#1 ?  *t:Bound })({  population_1( *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  population of the *n:X#1 states  *t:Bound })({  population_1( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  population of the *n:X#1 in  *t:Bound })({  population_1( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  population of the *n:X#1 largest  *t:Bound })({  population_1( *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  population of the *n:X#1 cities  *t:Bound })({  population_1( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  population of the *n:X#1 city  *t:Bound })({  population_1( *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  population of the *n:X#1 smallest  *t:Bound })({  population_1( *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  population of the *n:X#1 state  *t:Bound })({  population_1( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1  *t:Bound })({  population_1( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1  *t:Bound })({  population_1( city( cityid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Island ?  *t:Bound })({  population_1( stateid( *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Arizona  *t:Bound })({  population_1( cityid( *n:X#1 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Mexico ?  *t:Bound })({  population_1( stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Antonio  *t:Bound })({  population_1( cityid( *n:X#1 antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Antonio ?  *t:Bound })({  population_1( cityid( *n:X#1 antonio', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Antonio *n:X#2  *t:Bound })({  population_1( cityid( *n:X#1 antonio', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 ?  *t:Bound })({  population_1( cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 ?  *t:Bound })({  population_1( city( cityid( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 ?  *t:Bound })({  population_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Dakota ?  *t:Bound })({  population_1( stateid( *n:X#1 dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 GA  *t:Bound })({  population_1( cityid( *n:X#1 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 DC  *t:Bound })({  population_1( cityid( *n:X#1 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Maine  *t:Bound })({  population_1( cityid( *n:X#1 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Texas  *t:Bound })({  population_1( cityid( *n:X#1 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Massachusetts  *t:Bound })({  population_1( cityid( *n:X#1 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Washington  *t:Bound })({  population_1( cityid( *n:X#1 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Pennsylvania  *t:Bound })({  population_1( cityid( *n:X#1 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 Missouri  *t:Bound })({  population_1( cityid( *n:X#1 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 South Dakota  *t:Bound })({  population_1( cityid( *n:X#1 'sd'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 York ?  *t:Bound })({  population_1( stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  population of *n:X#1 York City  *t:Bound })({  population_1( city( cityid( *n:X#1 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1  *t:Bound })({  population_1( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1  *t:Bound })({  population_1( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1  *t:Bound })({  population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Arizona  *t:Bound })({  population_1( *n:X#1 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Denver  *t:Bound })({  population_1( *n:X#1 'denver',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Denver ?  *t:Bound })({  population_1( *n:X#1 'denver', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Denver *n:X#2  *t:Bound })({  population_1( *n:X#1 'denver', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Boulder  *t:Bound })({  population_1( *n:X#1 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Boulder ?  *t:Bound })({  population_1( *n:X#1 'boulder', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Boulder *n:X#2  *t:Bound })({  population_1( *n:X#1 'boulder', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Antonio  *t:Bound })({  population_1( *n:X#1 antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Antonio ?  *t:Bound })({  population_1( *n:X#1 antonio', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Antonio *n:X#2  *t:Bound })({  population_1( *n:X#1 antonio', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 ?  *t:Bound })({  population_1( city( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 ?  *t:Bound })({  population_1( *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Atlanta  *t:Bound })({  population_1( *n:X#1 'atlanta',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Atlanta ?  *t:Bound })({  population_1( *n:X#1 'atlanta', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Atlanta GA  *t:Bound })({  population_1( *n:X#1 'atlanta', 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Atlanta *n:X#2  *t:Bound })({  population_1( *n:X#1 'atlanta', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Austin  *t:Bound })({  population_1( *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Austin ?  *t:Bound })({  population_1( *n:X#1 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Austin Texas  *t:Bound })({  population_1( *n:X#1 'austin', 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Austin *n:X#2  *t:Bound })({  population_1( *n:X#1 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Boston  *t:Bound })({  population_1( *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Boston ?  *t:Bound })({  population_1( *n:X#1 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Boston Massachusetts  *t:Bound })({  population_1( *n:X#1 'boston', 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Boston *n:X#2  *t:Bound })({  population_1( *n:X#1 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Erie  *t:Bound })({  population_1( *n:X#1 'erie',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Erie Pennsylvania  *t:Bound })({  population_1( *n:X#1 'erie', 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Erie *n:X#2  *t:Bound })({  population_1( *n:X#1 'erie', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 GA  *t:Bound })({  population_1( *n:X#1 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Houston  *t:Bound })({  population_1( *n:X#1 'houston',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Houston ?  *t:Bound })({  population_1( *n:X#1 'houston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Houston *n:X#2  *t:Bound })({  population_1( *n:X#1 'houston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 DC  *t:Bound })({  population_1( *n:X#1 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Seattle  *t:Bound })({  population_1( *n:X#1 'seattle',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Seattle ?  *t:Bound })({  population_1( *n:X#1 'seattle', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Seattle Washington  *t:Bound })({  population_1( *n:X#1 'seattle', 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Seattle *n:X#2  *t:Bound })({  population_1( *n:X#1 'seattle', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Maine  *t:Bound })({  population_1( *n:X#1 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Dallas  *t:Bound })({  population_1( *n:X#1 'dallas',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Dallas ?  *t:Bound })({  population_1( *n:X#1 'dallas', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Dallas *n:X#2  *t:Bound })({  population_1( *n:X#1 'dallas', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Tucson  *t:Bound })({  population_1( *n:X#1 'tucson',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Tucson ?  *t:Bound })({  population_1( *n:X#1 'tucson', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Tucson *n:X#2  *t:Bound })({  population_1( *n:X#1 'tucson', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Texas  *t:Bound })({  population_1( *n:X#1 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Massachusetts  *t:Bound })({  population_1( *n:X#1 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Washington  *t:Bound })({  population_1( *n:X#1 'washington',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Washington  *t:Bound })({  population_1( *n:X#1 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Washington DC  *t:Bound })({  population_1( *n:X#1 'washington', 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Washington *n:X#2  *t:Bound })({  population_1( *n:X#1 'washington', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Pennsylvania  *t:Bound })({  population_1( *n:X#1 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 New  *t:Bound })({  population_1( city( *n:X#1 'new  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 New York City  *t:Bound })({  population_1( city( *n:X#1 'new york',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 New *n:X#2  *t:Bound })({  population_1( city( *n:X#1 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Missouri  *t:Bound })({  population_1( *n:X#1 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Sacramento  *t:Bound })({  population_1( *n:X#1 'sacramento',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Sacramento ?  *t:Bound })({  population_1( *n:X#1 'sacramento', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Sacramento *n:X#2  *t:Bound })({  population_1( *n:X#1 'sacramento', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 San  *t:Bound })({  population_1( *n:X#1 'san  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 San Antonio  *t:Bound })({  population_1( *n:X#1 'san antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 San Antonio ?  *t:Bound })({  population_1( *n:X#1 'san antonio', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 San Antonio *n:X#2  *t:Bound })({  population_1( *n:X#1 'san antonio', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 San *n:X#2  *t:Bound })({  population_1( *n:X#1 'san *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 San *n:X#2 ?  *t:Bound })({  population_1( *n:X#1 'san *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 South Dakota  *t:Bound })({  population_1( *n:X#1 'sd'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Portland  *t:Bound })({  population_1( *n:X#1 'portland',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Portland Maine  *t:Bound })({  population_1( *n:X#1 'portland', 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Portland *n:X#2  *t:Bound })({  population_1( *n:X#1 'portland', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Springfield  *t:Bound })({  population_1( *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Springfield Missouri  *t:Bound })({  population_1( *n:X#1 'springfield', 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Springfield South Dakota  *t:Bound })({  population_1( *n:X#1 'springfield', 'sd'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Springfield *n:X#2  *t:Bound })({  population_1( *n:X#1 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Tempe  *t:Bound })({  population_1( *n:X#1 'tempe',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Tempe Arizona  *t:Bound })({  population_1( *n:X#1 'tempe', 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 Tempe *n:X#2  *t:Bound })({  population_1( *n:X#1 'tempe', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 York City  *t:Bound })({  population_1( city( *n:X#1 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 York City ?  *t:Bound })({  population_1( city( *n:X#1 york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  population *n:X#1 York City *n:X#2  *t:Bound })({  population_1( city( *n:X#1 york', *n:X#2  }) weight 0.0
*n:X -> ({ sea })({ elevation_2( }) weight 0.0
*n:X -> ({ sea level })({ elevation_2( 0 }) weight 0.0
*n:Query -> ({ *t:Bound  sea *n:X#1  *t:Bound })({  elevation_2( *n:X#1  }) weight 0.0
*n:X -> ({ square })({ countryid( }) weight 0.0
*n:X -> ({ square kilometers })({ area_1( countryid( }) weight 0.0
*n:X -> ({ square kilometers in the US })({ area_1( countryid( 'usa' }) weight 0.0
*n:Query -> ({ *t:Bound  square kilometers in the *n:X#1  *t:Bound })({  area_1( countryid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  square *n:X#1  *t:Bound })({  *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  square *n:X#1 in the US  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  square *n:X#1 in the *n:X#2  *t:Bound })({  *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:X -> ({ tall })({ elevation_1( }) weight 0.0
*n:X -> ({ you tell me the capital })({ answer( capital( loc_2( }) weight 0.0
*n:X -> ({ you tell me the capital of Texas ? })({ answer( capital( loc_2( stateid( 'texas' }) weight 0.0
*n:Query -> ({ *t:Bound  you tell me *n:X#1 capital  *t:Bound })({  answer( capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  you tell *n:X#1 the capital  *t:Bound })({  *n:X#1 capital( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Albany  *t:Bound })({  *n:X#1 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Albany  *t:Bound })({  *n:X#1 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Albany ?  *t:Bound })({  *n:X#1 'albany', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Albany ?  *t:Bound })({  *n:X#1 cityid( 'albany', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Albany *n:X#2  *t:Bound })({  *n:X#1 'albany', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Albany *n:X#2  *t:Bound })({  *n:X#1 cityid( 'albany', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 States  *t:Bound })({  *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 States *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Oregon ?  *t:Bound })({  *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Oregon *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 American city  *t:Bound })({  *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 American city in  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 American city in *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 American city *n:X#2  *t:Bound })({  *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 American city *n:X#2 ?  *t:Bound })({  *n:X#1 city( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 American city *n:X#2 river  *t:Bound })({  *n:X#1 city( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 American *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 American *n:X#2 in  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 American *n:X#2 river  *t:Bound })({  *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 American *n:X#2 river ?  *t:Bound })({  *n:X#1 *n:X#2 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Tennessee ?  *t:Bound })({  *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Tennessee border ?  *t:Bound })({  *n:X#1 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Tennessee border *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Tennessee *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Alaska ?  *t:Bound })({  *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Alaska *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Island  *t:Bound })({  *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Island ?  *t:Bound })({  stateid( *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Island *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 California .  *t:Bound })({  *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 California ?  *t:Bound })({  *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 California *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 50 states  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 50 states ?  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 50 states *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 50 capitals  *t:Bound })({  *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 50 capitals in the  *t:Bound })({  *n:X#1 capital( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 50 capitals *n:X#2  *t:Bound })({  *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 50 capitals *n:X#2 USA  *t:Bound })({  *n:X#1 capital( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 50 *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 .  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 .  *t:Bound })({  *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Arizona  *t:Bound })({  *n:X#1 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Arizona ?  *t:Bound })({  *n:X#1 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Arizona *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Des  *t:Bound })({  *n:X#1 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Des Moines  *t:Bound })({  *n:X#1 cityid( 'des moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Des Moines ?  *t:Bound })({  *n:X#1 cityid( 'des moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Des Moines *n:X#2  *t:Bound })({  *n:X#1 cityid( 'des moines', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Des *n:X#2  *t:Bound })({  *n:X#1 cityid( 'des *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Des *n:X#2 ?  *t:Bound })({  *n:X#1 cityid( 'des *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 adjacent state  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 adjacent state *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 adjacent *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Delaware ?  *t:Bound })({  *n:X#1 stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Delaware river  *t:Bound })({  *n:X#1 river( riverid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Delaware *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Delaware *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering  *t:Bound })({  *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Arkansas ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Arkansas *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Iowa ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Iowa *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Colorado ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Colorado *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Georgia ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Georgia *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Utah ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Utah *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Texas ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Texas *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Nebraska ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Nebraska *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Wyoming ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Wyoming *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Oklahoma ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Oklahoma *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Ohio ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering Ohio *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 bordering *n:X#2 ?  *t:Bound })({  *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Louisiana ?  *t:Bound })({  *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Louisiana *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Denver  *t:Bound })({  *n:X#1 'denver',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Denver ?  *t:Bound })({  *n:X#1 'denver', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Denver *n:X#2  *t:Bound })({  *n:X#1 'denver', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Chicago  *t:Bound })({  *n:X#1 'chicago',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Chicago ?  *t:Bound })({  *n:X#1 'chicago', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Chicago *n:X#2  *t:Bound })({  *n:X#1 'chicago', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Boulder  *t:Bound })({  *n:X#1 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Boulder ?  *t:Bound })({  *n:X#1 'boulder', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Boulder *n:X#2  *t:Bound })({  *n:X#1 'boulder', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 America  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Arkansas .  *t:Bound })({  *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Arkansas ?  *t:Bound })({  *n:X#1 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Arkansas *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Iowa ?  *t:Bound })({  *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Iowa border ?  *t:Bound })({  *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Iowa border *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Iowa *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are  *t:Bound })({  major( *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are  *t:Bound })({  *n:X#1 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in Arizona ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in Louisiana ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in Iowa ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in Colorado ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in Florida ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in Texas .  *t:Bound })({  *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in Texas ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in Texas *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in Montana ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in Pennsylvania ?  *t:Bound })({  major( *n:X#1 loc_2( stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in Missouri ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in states  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in states bordering  *t:Bound })({  *n:X#1 loc_2( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in states *n:X#2  *t:Bound })({  *n:X#1 loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in the  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in the USA  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in the United  *t:Bound })({  *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in the state  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in the *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in *n:X#2 .  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in *n:X#2 bordering  *t:Bound })({  *n:X#1 loc_2( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in *n:X#2 ?  *t:Bound })({  major( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are in *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are found *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are there ?  *t:Bound })({  *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are there in  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are there in USA  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are there in United  *t:Bound })({  *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are there in US  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are there in the  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are there in *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are located *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are next to major  *t:Bound })({  *n:X#1 next_to_2( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are called  *t:Bound })({  *n:X#1 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are called Colorado  *t:Bound })({  *n:X#1 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are called *n:X#2  *t:Bound })({  *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are major  *t:Bound })({  *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are major rivers  *t:Bound })({  *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are major rivers in  *t:Bound })({  *n:X#1 major( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are major rivers *n:X#2  *t:Bound })({  *n:X#1 major( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are major *n:X#2  *t:Bound })({  *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are major *n:X#2 in  *t:Bound })({  *n:X#1 major( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are longer *n:X#2  *t:Bound })({  *n:X#1 , *n:X#2 riverid( 'red'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the highest  *t:Bound })({  *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the highest points  *t:Bound })({  *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the highest points  *t:Bound })({  *n:X#1 highest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the highest *n:X#2  *t:Bound })({  *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the highest *n:X#2  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the lakes in  *t:Bound })({  *n:X#1 lake( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the capital  *t:Bound })({  *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the capital cities  *t:Bound })({  *n:X#1 capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the capital *n:X#2  *t:Bound })({  *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the largest  *t:Bound })({  *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the largest cities  *t:Bound })({  *n:X#1 largest( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the largest *n:X#2  *t:Bound })({  *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the cities  *t:Bound })({  *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the cities in  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the cities *n:X#2  *t:Bound })({  *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the capitals  *t:Bound })({  *n:X#1 capital( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the capitals *n:X#2  *t:Bound })({  *n:X#1 capital( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the biggest  *t:Bound })({  *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the biggest rivers  *t:Bound })({  *n:X#1 longest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the biggest *n:X#2  *t:Bound })({  *n:X#1 longest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the rivers  *t:Bound })({  *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the rivers  *t:Bound })({  *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the rivers in  *t:Bound })({  *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the rivers *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the rivers *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the *n:X#2 states  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the *n:X#2 in  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the *n:X#2 cities  *t:Bound })({  *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the *n:X#2 points  *t:Bound })({  *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the *n:X#2 points  *t:Bound })({  *n:X#1 *n:X#2 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the *n:X#2 rivers  *t:Bound })({  *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are the *n:X#2 state  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are *n:X#2  *t:Bound })({  major( *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are *n:X#2 Texas ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are *n:X#2 major  *t:Bound })({  *n:X#1 *n:X#2 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 are *n:X#2 major rivers  *t:Bound })({  *n:X#1 *n:X#2 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Durham  *t:Bound })({  *n:X#1 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Durham ?  *t:Bound })({  *n:X#1 'durham', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Durham *n:X#2  *t:Bound })({  *n:X#1 'durham', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 country  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mexico  *t:Bound })({  *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mexico ?  *t:Bound })({  stateid( *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mexico *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Alabama ?  *t:Bound })({  *n:X#1 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Alabama has .  *t:Bound })({  *n:X#1 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Alabama has *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Alabama *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Indiana ?  *t:Bound })({  *n:X#1 stateid( 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Indiana *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado  *t:Bound })({  *n:X#1 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado  *t:Bound })({  *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado .  *t:Bound })({  *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado ?  *t:Bound })({  *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado and  *t:Bound })({  *n:X#1 stateid( 'colorado' ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado and border  *t:Bound })({  *n:X#1 stateid( 'colorado' , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado and *n:X#2  *t:Bound })({  *n:X#1 stateid( 'colorado' , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado river  *t:Bound })({  *n:X#1 river( riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado rivers are  *t:Bound })({  *n:X#1 river( riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado rivers *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado *n:X#2  *t:Bound })({  *n:X#1 stateid( 'colorado' *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado *n:X#2 are  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Colorado *n:X#2 border  *t:Bound })({  *n:X#1 stateid( 'colorado' *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Antonio  *t:Bound })({  *n:X#1 antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Antonio ?  *t:Bound })({  *n:X#1 antonio', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Antonio *n:X#2  *t:Bound })({  *n:X#1 antonio', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Carolina  *t:Bound })({  *n:X#1 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Carolina ?  *t:Bound })({  stateid( *n:X#1 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Carolina *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Georgia ?  *t:Bound })({  *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Georgia *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 ?  *t:Bound })({  _ , *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 ?  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 ?  *t:Bound })({  *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 ?  *t:Bound })({  *n:X#1 stateid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 ?  *t:Bound })({  *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 ?  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Jersey  *t:Bound })({  *n:X#1 jersey'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Atlanta  *t:Bound })({  *n:X#1 'atlanta',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Atlanta ?  *t:Bound })({  *n:X#1 'atlanta', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Atlanta GA  *t:Bound })({  *n:X#1 'atlanta', 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Atlanta *n:X#2  *t:Bound })({  *n:X#1 'atlanta', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 flowing through  *t:Bound })({  *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 flowing through *n:X#2  *t:Bound })({  *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 flowing through *n:X#2 ?  *t:Bound })({  *n:X#1 traverse_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Hawaii ?  *t:Bound })({  *n:X#1 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Hawaii *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Moines  *t:Bound })({  *n:X#1 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Moines ?  *t:Bound })({  *n:X#1 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Moines *n:X#2  *t:Bound })({  *n:X#1 moines', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 McKinley  *t:Bound })({  *n:X#1 mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mount  *t:Bound })({  *n:X#1 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mount  *t:Bound })({  *n:X#1 placeid( 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mount McKinley  *t:Bound })({  *n:X#1 'mount mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mount McKinley  *t:Bound })({  *n:X#1 placeid( 'mount mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mount *n:X#2  *t:Bound })({  *n:X#1 'mount *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mount *n:X#2  *t:Bound })({  *n:X#1 placeid( 'mount *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rhode Island ?  *t:Bound })({  *n:X#1 stateid( 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rhode Island *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rhode *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'rhode *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Detroit  *t:Bound })({  *n:X#1 'detroit',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Detroit ?  *t:Bound })({  *n:X#1 'detroit', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Detroit *n:X#2  *t:Bound })({  *n:X#1 'detroit', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Austin  *t:Bound })({  *n:X#1 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Austin  *t:Bound })({  *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Austin ?  *t:Bound })({  *n:X#1 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Austin ?  *t:Bound })({  *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Austin Texas  *t:Bound })({  *n:X#1 'austin', 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Austin *n:X#2  *t:Bound })({  *n:X#1 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Austin *n:X#2  *t:Bound })({  *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Austin *n:X#2 ?  *t:Bound })({  *n:X#1 'austin', _ , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Guadalupe  *t:Bound })({  *n:X#1 placeid( 'guadalupe  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Guadalupe Peak  *t:Bound })({  *n:X#1 placeid( 'guadalupe peak'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Guadalupe *n:X#2  *t:Bound })({  *n:X#1 placeid( 'guadalupe *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Boston  *t:Bound })({  *n:X#1 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Boston ?  *t:Bound })({  *n:X#1 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Boston Massachusetts  *t:Bound })({  *n:X#1 'boston', 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Boston *n:X#2  *t:Bound })({  *n:X#1 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Dakota  *t:Bound })({  *n:X#1 dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Minnesota  *t:Bound })({  *n:X#1 'mn'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Minnesota by population ?  *t:Bound })({  population_1( *n:X#1 stateid( 'minnesota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Minnesota by population *n:X#2  *t:Bound })({  population_1( *n:X#1 *n:X#2 'minnesota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Minnesota by *n:X#2 ?  *t:Bound })({  *n:X#2 *n:X#1 stateid( 'minnesota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 high  *t:Bound })({  *n:X#1 high_point_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 high  *t:Bound })({  *n:X#1 elevation_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 high are the highest  *t:Bound })({  *n:X#1 elevation_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 high are the *n:X#2  *t:Bound })({  *n:X#1 elevation_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 high points  *t:Bound })({  *n:X#1 high_point_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 high points *n:X#2  *t:Bound })({  *n:X#1 high_point_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 high point *n:X#2  *t:Bound })({  *n:X#1 high_point_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 North Carolina ?  *t:Bound })({  *n:X#1 stateid( 'north carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 North Carolina *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'north carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 North Platte river  *t:Bound })({  *n:X#1 river( riverid( 'north platte'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 North Platte *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'north platte'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 North *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'north *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 North *n:X#2 river  *t:Bound })({  *n:X#1 river( riverid( 'north *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Virginia .  *t:Bound })({  *n:X#1 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Virginia ?  *t:Bound })({  *n:X#1 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Virginia runs ?  *t:Bound })({  *n:X#1 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Virginia runs *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Virginia *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rio  *t:Bound })({  *n:X#1 riverid( 'rio  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rio Grande  *t:Bound })({  *n:X#1 riverid( 'rio grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rio Grande river  *t:Bound })({  *n:X#1 river( riverid( 'rio grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rio Grande *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'rio grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rio *n:X#2  *t:Bound })({  *n:X#1 riverid( 'rio *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rio *n:X#2 river  *t:Bound })({  *n:X#1 river( riverid( 'rio *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Erie  *t:Bound })({  *n:X#1 'erie',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Erie Pennsylvania  *t:Bound })({  *n:X#1 'erie', 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Erie *n:X#2  *t:Bound })({  *n:X#1 'erie', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 GA  *t:Bound })({  *n:X#1 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Florida .  *t:Bound })({  *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Florida ?  *t:Bound })({  *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Florida *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Houston  *t:Bound })({  *n:X#1 'houston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Houston ?  *t:Bound })({  *n:X#1 'houston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Houston *n:X#2  *t:Bound })({  *n:X#1 'houston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Francisco  *t:Bound })({  *n:X#1 francisco',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Francisco ?  *t:Bound })({  *n:X#1 francisco', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Francisco *n:X#2  *t:Bound })({  *n:X#1 francisco', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 DC  *t:Bound })({  *n:X#1 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Platte  *t:Bound })({  *n:X#1 platte'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Platte river  *t:Bound })({  river( riverid( *n:X#1 platte'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Platte *n:X#2  *t:Bound })({  *n:X#2 riverid( *n:X#1 platte'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Riverside  *t:Bound })({  *n:X#1 'riverside',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Riverside ?  *t:Bound })({  *n:X#1 'riverside', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Riverside *n:X#2  *t:Bound })({  *n:X#1 'riverside', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest  *t:Bound })({  *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest points  *t:Bound })({  highest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest points *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest elevation  *t:Bound })({  *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest elevation in  *t:Bound })({  *n:X#1 highest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest elevation in the  *t:Bound })({  *n:X#1 highest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest elevation in *n:X#2  *t:Bound })({  *n:X#1 highest( place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest elevation *n:X#2  *t:Bound })({  *n:X#1 highest( place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest elevation *n:X#2 States  *t:Bound })({  *n:X#1 highest( place( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest elevation *n:X#2 United  *t:Bound })({  *n:X#1 highest( place( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest mountain  *t:Bound })({  *n:X#1 highest( mountain(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest mountain in  *t:Bound })({  *n:X#1 highest( mountain( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest mountain in the  *t:Bound })({  *n:X#1 highest( mountain( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest mountain in *n:X#2  *t:Bound })({  *n:X#1 highest( mountain( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest mountain *n:X#2  *t:Bound })({  *n:X#1 highest( mountain( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point  *t:Bound })({  highest( place( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point  *t:Bound })({  *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point in  *t:Bound })({  *n:X#1 highest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point in states  *t:Bound })({  *n:X#1 highest( place( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point in the  *t:Bound })({  *n:X#1 highest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point in *n:X#2  *t:Bound })({  *n:X#1 highest( place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point of the  *t:Bound })({  *n:X#1 highest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point of *n:X#2  *t:Bound })({  *n:X#1 highest( place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2  *t:Bound })({  highest( place( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2  *t:Bound })({  *n:X#1 highest( place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2 States  *t:Bound })({  *n:X#1 highest( place( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2 bordering  *t:Bound })({  *n:X#1 highest( place( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2 ?  *t:Bound })({  *n:X#1 highest( place( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2 United  *t:Bound })({  *n:X#1 highest( place( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2 capital  *t:Bound })({  *n:X#1 highest( place( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2 states  *t:Bound })({  *n:X#1 highest( place( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2 with  *t:Bound })({  *n:X#1 highest( place( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2 whose  *t:Bound })({  *n:X#1 highest( place( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2 smallest  *t:Bound })({  *n:X#1 highest( place( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest point *n:X#2 state  *t:Bound })({  *n:X#1 highest( place( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2  *t:Bound })({  highest( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2  *t:Bound })({  *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 States  *t:Bound })({  *n:X#1 highest( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Alaska ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Delaware ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 bordering  *t:Bound })({  *n:X#1 highest( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Iowa ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 country  *t:Bound })({  *n:X#1 highest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Colorado ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Georgia ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 ?  *t:Bound })({  *n:X#1 highest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Virginia ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Florida ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Maine ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Kansas ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Texas ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Montana ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 USA  *t:Bound })({  *n:X#1 highest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 United  *t:Bound })({  *n:X#1 highest( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 United States  *t:Bound })({  *n:X#1 highest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 capital  *t:Bound })({  *n:X#1 highest( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Wyoming ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 each state  *t:Bound })({  *n:X#1 highest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 US  *t:Bound })({  *n:X#1 highest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 Ohio ?  *t:Bound })({  *n:X#1 highest( *n:X#2 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 states  *t:Bound })({  *n:X#1 highest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 states bordering  *t:Bound })({  *n:X#1 highest( *n:X#2 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 in  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 in states  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 in the  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 with  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 with capital  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 of the  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 whose  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 smallest  *t:Bound })({  *n:X#1 highest( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 smallest state  *t:Bound })({  *n:X#1 highest( *n:X#2 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 state  *t:Bound })({  *n:X#1 highest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 state ?  *t:Bound })({  *n:X#1 highest( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 highest *n:X#2 state with  *t:Bound })({  *n:X#1 highest( *n:X#2 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Wisconsin ?  *t:Bound })({  *n:X#1 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Wisconsin *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Seattle  *t:Bound })({  *n:X#1 'seattle',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Seattle ?  *t:Bound })({  *n:X#1 'seattle', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Seattle Washington  *t:Bound })({  *n:X#1 'seattle', 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Seattle *n:X#2  *t:Bound })({  *n:X#1 'seattle', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Grande  *t:Bound })({  *n:X#1 grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Grande runs  *t:Bound })({  riverid( *n:X#1 grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Grande runs through  *t:Bound })({  traverse_1( riverid( *n:X#1 grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Grande runs *n:X#2  *t:Bound })({  *n:X#2 riverid( *n:X#1 grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Grande river  *t:Bound })({  river( riverid( *n:X#1 grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Grande *n:X#2  *t:Bound })({  *n:X#2 riverid( *n:X#1 grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Grande *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Grande *n:X#2 through  *t:Bound })({  traverse_1( *n:X#2 *n:X#1 grande'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Maine  *t:Bound })({  *n:X#1 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Maine ?  *t:Bound })({  *n:X#1 stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Maine *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Idaho ?  *t:Bound })({  *n:X#1 stateid( 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Idaho *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Kansas ?  *t:Bound })({  *n:X#1 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Kansas *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Dallas  *t:Bound })({  *n:X#1 'dallas',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Dallas ?  *t:Bound })({  *n:X#1 'dallas', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Dallas *n:X#2  *t:Bound })({  *n:X#1 'dallas', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Tucson  *t:Bound })({  *n:X#1 'tucson',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Tucson ?  *t:Bound })({  *n:X#1 'tucson', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Tucson *n:X#2  *t:Bound })({  *n:X#1 'tucson', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 and  *t:Bound })({  *n:X#1 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 and border  *t:Bound })({  *n:X#1 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 and border *n:X#2  *t:Bound })({  *n:X#1 , next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 and border *n:X#2 ?  *t:Bound })({  *n:X#1 , next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 and *n:X#2  *t:Bound })({  *n:X#1 , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Utah .  *t:Bound })({  *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Utah ?  *t:Bound })({  *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Utah *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Texas  *t:Bound })({  *n:X#1 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Texas  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Texas .  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Texas ?  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Texas run ?  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Texas run *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Texas *n:X#2  *t:Bound })({  *n:X#1 stateid( 'texas' , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Texas *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 has .  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 has the highest *n:X#2  *t:Bound })({  largest_one( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Hampshire  *t:Bound })({  *n:X#1 hampshire'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Montana ?  *t:Bound })({  *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Montana *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Illinois ?  *t:Bound })({  *n:X#1 stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Illinois *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Massachusetts  *t:Bound })({  *n:X#1 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Massachusetts ?  *t:Bound })({  *n:X#1 stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Massachusetts *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Minneapolis  *t:Bound })({  *n:X#1 'minneapolis',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Minneapolis Minnesota  *t:Bound })({  *n:X#1 'minneapolis', 'mn'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Minneapolis *n:X#2  *t:Bound })({  *n:X#1 'minneapolis', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Washington  *t:Bound })({  *n:X#1 'washington',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Washington  *t:Bound })({  *n:X#1 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Washington ?  *t:Bound })({  *n:X#1 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Washington DC  *t:Bound })({  *n:X#1 'washington', 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Washington state ?  *t:Bound })({  *n:X#1 state( stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Washington state *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Washington *n:X#2  *t:Bound })({  *n:X#1 'washington', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Washington *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Washington *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 USA  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 USA ?  *t:Bound })({  _ , *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 USA *n:X#2  *t:Bound })({  *n:X#2 , *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes  *t:Bound })({  *n:X#1 lake(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in  *t:Bound })({  *n:X#1 lake( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in California .  *t:Bound })({  *n:X#1 lake( loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in California *n:X#2  *t:Bound })({  *n:X#1 lake( loc_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in United  *t:Bound })({  *n:X#1 lake( loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in United States  *t:Bound })({  *n:X#1 lake( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in United *n:X#2  *t:Bound })({  *n:X#1 lake( loc_2( countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in Michigan .  *t:Bound })({  *n:X#1 lake( loc_2( stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in Michigan *n:X#2  *t:Bound })({  *n:X#1 lake( loc_2( *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in the  *t:Bound })({  *n:X#1 lake( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in the US  *t:Bound })({  *n:X#1 lake( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in the *n:X#2  *t:Bound })({  *n:X#1 lake( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in *n:X#2  *t:Bound })({  *n:X#1 lake( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in *n:X#2 States  *t:Bound })({  *n:X#1 lake( loc_2( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes in *n:X#2 .  *t:Bound })({  *n:X#1 lake( loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes *n:X#2  *t:Bound })({  *n:X#1 lake( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes *n:X#2 States  *t:Bound })({  *n:X#1 lake( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes *n:X#2 California .  *t:Bound })({  *n:X#1 lake( *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes *n:X#2 United  *t:Bound })({  *n:X#1 lake( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes *n:X#2 United States  *t:Bound })({  *n:X#1 lake( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes *n:X#2 Michigan .  *t:Bound })({  *n:X#1 lake( *n:X#2 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lakes *n:X#2 US  *t:Bound })({  *n:X#1 lake( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 United  *t:Bound })({  *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 United States  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 United States *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 United *n:X#2  *t:Bound })({  *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 borders how *n:X#2 ?  *t:Bound })({  *n:X#2 next_to_1( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 borders *n:X#2 ?  *t:Bound })({  *n:X#2 stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital  *t:Bound })({  capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital  *t:Bound })({  *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital Des  *t:Bound })({  *n:X#1 capital( cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital Des Moines  *t:Bound })({  *n:X#1 capital( cityid( 'des moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital Des *n:X#2  *t:Bound })({  *n:X#1 capital( cityid( 'des *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital ?  *t:Bound })({  *n:X#1 capital( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital Austin  *t:Bound })({  *n:X#1 capital( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital Austin ?  *t:Bound })({  *n:X#1 capital( cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital Austin *n:X#2  *t:Bound })({  *n:X#1 capital( cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital is  *t:Bound })({  *n:X#1 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital is Boston  *t:Bound })({  *n:X#1 capital( cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital is Boston ?  *t:Bound })({  *n:X#1 capital( cityid( 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital is Boston *n:X#2  *t:Bound })({  *n:X#1 capital( cityid( 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital is *n:X#2  *t:Bound })({  *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital is *n:X#2 ?  *t:Bound })({  *n:X#1 capital( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital in the  *t:Bound })({  *n:X#1 capital( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital in the USA  *t:Bound })({  *n:X#1 capital( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital in the *n:X#2  *t:Bound })({  *n:X#1 capital( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital city  *t:Bound })({  *n:X#1 capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital city in  *t:Bound })({  *n:X#1 capital( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital city in the  *t:Bound })({  *n:X#1 capital( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital city in *n:X#2  *t:Bound })({  *n:X#1 capital( city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital city of the  *t:Bound })({  *n:X#1 capital( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital city of *n:X#2  *t:Bound })({  *n:X#1 capital( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital city *n:X#2  *t:Bound })({  *n:X#1 capital( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of Iowa ?  *t:Bound })({  *n:X#1 capital( loc_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of Georgia ?  *t:Bound })({  capital( *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of Texas ?  *t:Bound })({  capital( *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of which state  *t:Bound })({  *n:X#1 state( loc_1( capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of which *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 loc_1( capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of the  *t:Bound })({  *n:X#1 capital( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of the largest  *t:Bound })({  *n:X#1 capital( loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of the smallest  *t:Bound })({  *n:X#1 capital( loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of the state  *t:Bound })({  *n:X#1 capital( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of the *n:X#2  *t:Bound })({  *n:X#1 capital( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of *n:X#2  *t:Bound })({  *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of *n:X#2 ?  *t:Bound })({  capital( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of *n:X#2 ?  *t:Bound })({  *n:X#1 capital( loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of *n:X#2 ?  *t:Bound })({  *n:X#1 capital( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of *n:X#2 largest  *t:Bound })({  *n:X#1 capital( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of *n:X#2 with  *t:Bound })({  *n:X#1 capital( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of *n:X#2 point  *t:Bound })({  *n:X#1 capital( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of *n:X#2 smallest  *t:Bound })({  *n:X#1 capital( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of *n:X#2 state  *t:Bound })({  *n:X#1 capital( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital of *n:X#2 state  *t:Bound })({  *n:X#1 state( *n:X#2 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2  *t:Bound })({  capital( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2  *t:Bound })({  *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2  *t:Bound })({  *n:X#1 capital( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2  *t:Bound })({  *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 ?  *t:Bound })({  *n:X#1 capital( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 ?  *t:Bound })({  *n:X#1 capital( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 Moines  *t:Bound })({  *n:X#1 capital( cityid( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 Boston  *t:Bound })({  *n:X#1 capital( *n:X#2 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 Boston ?  *t:Bound })({  *n:X#1 capital( *n:X#2 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 Texas ?  *t:Bound })({  *n:X#1 capital( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 USA  *t:Bound })({  *n:X#1 capital( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 US  *t:Bound })({  *n:X#1 capital( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 in  *t:Bound })({  *n:X#1 capital( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 in the  *t:Bound })({  *n:X#1 capital( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 largest  *t:Bound })({  *n:X#1 capital( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 largest state  *t:Bound })({  *n:X#1 capital( *n:X#2 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 of the  *t:Bound })({  *n:X#1 capital( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 which state  *t:Bound })({  *n:X#1 state( loc_1( capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capital *n:X#2 state  *t:Bound })({  *n:X#1 capital( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have  *t:Bound })({  *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have ?  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have ?  *t:Bound })({  *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have cities  *t:Bound })({  *n:X#1 loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have cities or *n:X#2  *t:Bound })({  *n:X#1 loc_1( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have cities named  *t:Bound })({  *n:X#1 loc_1( city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have cities named Austin  *t:Bound })({  *n:X#1 loc_1( city( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have cities named *n:X#2  *t:Bound })({  *n:X#1 loc_1( city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have cities *n:X#2  *t:Bound })({  *n:X#1 loc_1( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have cities *n:X#2 ?  *t:Bound })({  *n:X#1 loc_1( city( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have cities *n:X#2 Austin  *t:Bound })({  *n:X#1 loc_1( city( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have major  *t:Bound })({  *n:X#1 loc_1( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have major rivers  *t:Bound })({  *n:X#1 loc_1( major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have major rivers ?  *t:Bound })({  *n:X#1 loc_1( major( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have major rivers *n:X#2  *t:Bound })({  *n:X#1 loc_1( major( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have major *n:X#2  *t:Bound })({  *n:X#1 loc_1( major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have major *n:X#2 ?  *t:Bound })({  *n:X#1 loc_1( major( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have a  *t:Bound })({  *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have a city  *t:Bound })({  *n:X#1 loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have a city named  *t:Bound })({  *n:X#1 loc_1( city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have a city *n:X#2  *t:Bound })({  *n:X#1 loc_1( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have a *n:X#2  *t:Bound })({  *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have a *n:X#2 ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have a *n:X#2 Springfield  *t:Bound })({  *n:X#1 loc_1( *n:X#2 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have a *n:X#2 named  *t:Bound })({  *n:X#1 loc_1( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have a *n:X#2 point  *t:Bound })({  *n:X#1 loc_1( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have rivers  *t:Bound })({  *n:X#1 loc_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have rivers ?  *t:Bound })({  *n:X#1 loc_1( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have rivers *n:X#2  *t:Bound })({  *n:X#1 loc_1( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have *n:X#2  *t:Bound })({  *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have *n:X#2 ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have *n:X#2 ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have *n:X#2 Austin  *t:Bound })({  *n:X#1 loc_1( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have *n:X#2 Austin ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have *n:X#2 named  *t:Bound })({  *n:X#1 loc_1( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have *n:X#2 named Austin  *t:Bound })({  *n:X#1 loc_1( *n:X#2 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have *n:X#2 rivers  *t:Bound })({  *n:X#1 loc_1( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 have *n:X#2 rivers ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Kalamazoo  *t:Bound })({  *n:X#1 'kalamazoo',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Kalamazoo ?  *t:Bound })({  *n:X#1 'kalamazoo', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Kalamazoo *n:X#2  *t:Bound })({  *n:X#1 'kalamazoo', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Pennsylvania  *t:Bound })({  *n:X#1 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Pennsylvania ?  *t:Bound })({  *n:X#1 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Pennsylvania *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mississippi  *t:Bound })({  *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mississippi ?  *t:Bound })({  *n:X#1 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mississippi river  *t:Bound })({  *n:X#1 river( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mississippi river in miles  *t:Bound })({  *n:X#1 river( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mississippi river in *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mississippi flow  *t:Bound })({  *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mississippi run  *t:Bound })({  *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mississippi *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mississippi *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Mississippi *n:X#2 in miles  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Michigan .  *t:Bound })({  *n:X#1 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Michigan ?  *t:Bound })({  *n:X#1 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Michigan *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New  *t:Bound })({  *n:X#1 'new  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New Mexico ?  *t:Bound })({  *n:X#1 stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New Mexico *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New York  *t:Bound })({  *n:X#1 'new york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New York ?  *t:Bound })({  *n:X#1 'new york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New York ?  *t:Bound })({  *n:X#1 stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New York City  *t:Bound })({  *n:X#1 'new york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New York City ?  *t:Bound })({  *n:X#1 'new york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New York City *n:X#2  *t:Bound })({  *n:X#1 'new york', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New York state ?  *t:Bound })({  *n:X#1 state( stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New York state *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New York *n:X#2  *t:Bound })({  *n:X#1 'new york', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New York *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New York *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New *n:X#2  *t:Bound })({  *n:X#1 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New *n:X#2 ?  *t:Bound })({  *n:X#1 'new *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 New *n:X#2 state ?  *t:Bound })({  *n:X#1 state( stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Nebraska ?  *t:Bound })({  *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Nebraska in meters ?  *t:Bound })({  *n:X#1 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Nebraska *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Wyoming ?  *t:Bound })({  *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Wyoming *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 each state  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 each state whose  *t:Bound })({  *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 each state *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 each state *n:X#2 level  *t:Bound })({  *n:X#1 state( *n:X#2 0  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 each *n:X#2 level  *t:Bound })({  *n:X#1 *n:X#2 0  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 each *n:X#2 lowest point  *t:Bound })({  *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 each *n:X#2 is sea  *t:Bound })({  *n:X#1 *n:X#2 elevation_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 each *n:X#2 whose  *t:Bound })({  *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 level  *t:Bound })({  *n:X#1 0  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 combined area of all  *t:Bound })({  *n:X#1 sum( area_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 combined population of all  *t:Bound })({  *n:X#1 sum( population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 combined *n:X#2 of all  *t:Bound })({  *n:X#1 sum( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 combined *n:X#2 all  *t:Bound })({  *n:X#1 sum( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 density  *t:Bound })({  *n:X#1 density_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 density of Texas ?  *t:Bound })({  *n:X#1 density_1( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 density of *n:X#2 ?  *t:Bound })({  *n:X#1 density_1( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 density *n:X#2  *t:Bound })({  *n:X#1 density_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 by the Mississippi river  *t:Bound })({  *n:X#1 river( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 by the Mississippi *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 by the *n:X#2 river  *t:Bound })({  *n:X#1 river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest  *t:Bound })({  *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river  *t:Bound })({  *n:X#1 longest( exclude( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river  *t:Bound })({  *n:X#1 longest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river ?  *t:Bound })({  *n:X#1 longest( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river flowing through  *t:Bound })({  *n:X#1 longest( river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river in  *t:Bound })({  *n:X#1 longest( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river in the  *t:Bound })({  *n:X#1 longest( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river in *n:X#2  *t:Bound })({  *n:X#1 longest( river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river that passes  *t:Bound })({  *n:X#1 longest( river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river that *n:X#2  *t:Bound })({  *n:X#1 longest( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river *n:X#2  *t:Bound })({  *n:X#1 longest( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river *n:X#2 States  *t:Bound })({  *n:X#1 longest( river( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river *n:X#2 ?  *t:Bound })({  *n:X#1 longest( river( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river *n:X#2 United  *t:Bound })({  *n:X#1 longest( river( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river *n:X#2 states  *t:Bound })({  *n:X#1 longest( river( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river *n:X#2 largest  *t:Bound })({  *n:X#1 longest( river( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river *n:X#2 with  *t:Bound })({  *n:X#1 longest( river( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river *n:X#2 smallest  *t:Bound })({  *n:X#1 longest( river( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest river *n:X#2 state  *t:Bound })({  *n:X#1 longest( river( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2  *t:Bound })({  *n:X#1 longest( exclude( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2  *t:Bound })({  *n:X#1 longest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 States  *t:Bound })({  *n:X#1 longest( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 California ?  *t:Bound })({  *n:X#1 longest( *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 America  *t:Bound })({  *n:X#1 longest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 Colorado ?  *t:Bound })({  *n:X#1 longest( *n:X#2 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 ?  *t:Bound })({  *n:X#1 longest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 flowing through  *t:Bound })({  *n:X#1 longest( *n:X#2 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 Florida ?  *t:Bound })({  *n:X#1 longest( *n:X#2 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 Texas ?  *t:Bound })({  *n:X#1 longest( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 United  *t:Bound })({  *n:X#1 longest( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 United States  *t:Bound })({  *n:X#1 longest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 Pennsylvania ?  *t:Bound })({  *n:X#1 longest( *n:X#2 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 Mississippi ?  *t:Bound })({  *n:X#1 longest( *n:X#2 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 US  *t:Bound })({  *n:X#1 longest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 states  *t:Bound })({  *n:X#1 longest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 in  *t:Bound })({  *n:X#1 longest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 in the  *t:Bound })({  *n:X#1 longest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 largest  *t:Bound })({  *n:X#1 longest( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 largest state  *t:Bound })({  *n:X#1 longest( *n:X#2 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 with  *t:Bound })({  *n:X#1 longest( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 a state  *t:Bound })({  *n:X#1 longest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 run through  *t:Bound })({  *n:X#1 longest( exclude( *n:X#2 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 that border  *t:Bound })({  *n:X#1 longest( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 that passes  *t:Bound })({  *n:X#1 longest( *n:X#2 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 smallest  *t:Bound })({  *n:X#1 longest( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 smallest state  *t:Bound })({  *n:X#1 longest( *n:X#2 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 state  *t:Bound })({  *n:X#1 longest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 state ?  *t:Bound })({  *n:X#1 longest( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 state with  *t:Bound })({  *n:X#1 longest( *n:X#2 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 the US  *t:Bound })({  *n:X#1 longest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longest *n:X#2 the states  *t:Bound })({  *n:X#1 longest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Missouri  *t:Bound })({  *n:X#1 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Missouri ?  *t:Bound })({  *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Missouri border ?  *t:Bound })({  *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Missouri border *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Missouri river  *t:Bound })({  *n:X#1 river( riverid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Missouri *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Missouri *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Oklahoma ?  *t:Bound })({  *n:X#1 stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Oklahoma *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Sacramento  *t:Bound })({  *n:X#1 'sacramento',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Sacramento ?  *t:Bound })({  *n:X#1 'sacramento', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Sacramento *n:X#2  *t:Bound })({  *n:X#1 'sacramento', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 San  *t:Bound })({  *n:X#1 'san  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 San Antonio  *t:Bound })({  *n:X#1 'san antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 San Antonio ?  *t:Bound })({  *n:X#1 'san antonio', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 San Antonio *n:X#2  *t:Bound })({  *n:X#1 'san antonio', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 San Francisco  *t:Bound })({  *n:X#1 'san francisco',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 San Francisco ?  *t:Bound })({  *n:X#1 'san francisco', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 San Francisco *n:X#2  *t:Bound })({  *n:X#1 'san francisco', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 San *n:X#2  *t:Bound })({  *n:X#1 'san *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 San *n:X#2 ?  *t:Bound })({  *n:X#1 'san *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Nevada in meters ?  *t:Bound })({  *n:X#1 stateid( 'nevada'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest  *t:Bound })({  *n:X#1 lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest elevation  *t:Bound })({  *n:X#1 lowest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest elevation in  *t:Bound })({  *n:X#1 lowest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest elevation in *n:X#2  *t:Bound })({  *n:X#1 lowest( place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest elevation *n:X#2  *t:Bound })({  *n:X#1 lowest( place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point  *t:Bound })({  *n:X#1 lowest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point  *t:Bound })({  *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point is sea  *t:Bound })({  *n:X#1 place( elevation_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point is *n:X#2  *t:Bound })({  *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point in  *t:Bound })({  *n:X#1 lowest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point in the  *t:Bound })({  *n:X#1 lowest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point in *n:X#2  *t:Bound })({  *n:X#1 lowest( place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point of all  *t:Bound })({  *n:X#1 lowest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point of the  *t:Bound })({  *n:X#1 lowest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point of *n:X#2  *t:Bound })({  *n:X#1 lowest( place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point *n:X#2  *t:Bound })({  *n:X#1 lowest( place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point *n:X#2 States  *t:Bound })({  *n:X#1 lowest( place( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point *n:X#2 United  *t:Bound })({  *n:X#1 lowest( place( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest point *n:X#2 state  *t:Bound })({  *n:X#1 lowest( place( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2  *t:Bound })({  *n:X#1 lowest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 States  *t:Bound })({  *n:X#1 lowest( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 Oregon ?  *t:Bound })({  *n:X#1 lowest( *n:X#2 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 California ?  *t:Bound })({  *n:X#1 lowest( *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 Louisiana ?  *t:Bound })({  *n:X#1 lowest( *n:X#2 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 Arkansas ?  *t:Bound })({  *n:X#1 lowest( *n:X#2 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 Wisconsin ?  *t:Bound })({  *n:X#1 lowest( *n:X#2 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 Texas ?  *t:Bound })({  *n:X#1 lowest( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 Massachusetts ?  *t:Bound })({  *n:X#1 lowest( *n:X#2 stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 USA  *t:Bound })({  *n:X#1 lowest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 United  *t:Bound })({  *n:X#1 lowest( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 United States  *t:Bound })({  *n:X#1 lowest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 Pennsylvania ?  *t:Bound })({  *n:X#1 lowest( *n:X#2 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 Mississippi ?  *t:Bound })({  *n:X#1 lowest( *n:X#2 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 level  *t:Bound })({  *n:X#1 *n:X#2 0  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 is sea  *t:Bound })({  *n:X#1 *n:X#2 elevation_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 US  *t:Bound })({  *n:X#1 lowest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 states  *t:Bound })({  *n:X#1 lowest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 in  *t:Bound })({  *n:X#1 lowest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 in the  *t:Bound })({  *n:X#1 lowest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 through which  *t:Bound })({  *n:X#1 lowest( *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 of all  *t:Bound })({  *n:X#1 lowest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 of the  *t:Bound })({  *n:X#1 lowest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lowest *n:X#2 state  *t:Bound })({  *n:X#1 lowest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevations  *t:Bound })({  *n:X#1 low_point_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevations lower  *t:Bound })({  *n:X#1 low_point_2( lower_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevations lower than what  *t:Bound })({  *n:X#1 low_point_2( lower_2( low_point_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevations lower *n:X#2  *t:Bound })({  *n:X#1 low_point_2( lower_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevations *n:X#2  *t:Bound })({  *n:X#1 low_point_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevations *n:X#2 than what  *t:Bound })({  *n:X#1 low_point_2( *n:X#2 low_point_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is  *t:Bound })({  answer( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is  *t:Bound })({  *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Alaska ?  *t:Bound })({  *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Mount  *t:Bound })({  answer( *n:X#1 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Mount McKinley  *t:Bound })({  answer( *n:X#1 'mount mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Mount *n:X#2  *t:Bound })({  answer( *n:X#1 'mount *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Boston  *t:Bound })({  *n:X#1 cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Boston ?  *t:Bound })({  *n:X#1 cityid( 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Boston *n:X#2  *t:Bound })({  *n:X#1 cityid( 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is North Dakota ?  *t:Bound })({  *n:X#1 stateid( 'north dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is North *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'north *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Texas ?  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Massachusetts ?  *t:Bound })({  *n:X#1 stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is New Mexico ?  *t:Bound })({  *n:X#1 stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is New *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Rochester  *t:Bound })({  answer( *n:X#1 cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Rochester ?  *t:Bound })({  answer( *n:X#1 cityid( 'rochester', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is Rochester *n:X#2  *t:Bound })({  answer( *n:X#1 cityid( 'rochester', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is sea  *t:Bound })({  *n:X#1 elevation_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is sea level  *t:Bound })({  *n:X#1 elevation_2( 0  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is sea *n:X#2  *t:Bound })({  *n:X#1 elevation_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is the *n:X#2  *t:Bound })({  answer( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is the *n:X#2 ?  *t:Bound })({  answer( *n:X#2 *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is the *n:X#2 state  *t:Bound })({  answer( state( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is *n:X#2  *t:Bound })({  answer( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is *n:X#2  *t:Bound })({  *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is *n:X#2 Mexico ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is *n:X#2 ?  *t:Bound })({  answer( *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is *n:X#2 ?  *t:Bound })({  *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is *n:X#2 ?  *t:Bound })({  *n:X#2 *n:X#1 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is *n:X#2 McKinley  *t:Bound })({  answer( *n:X#1 *n:X#2 mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is *n:X#2 Dakota ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 is *n:X#2 level  *t:Bound })({  *n:X#1 *n:X#2 0  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 South Carolina ?  *t:Bound })({  *n:X#1 stateid( 'south carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 South Carolina *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'south carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 South Dakota  *t:Bound })({  *n:X#1 'sd'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 South *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'south *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Portland  *t:Bound })({  *n:X#1 'portland',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Portland Maine  *t:Bound })({  *n:X#1 'portland', 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Portland *n:X#2  *t:Bound })({  *n:X#1 'portland', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US  *t:Bound })({  *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US does  *t:Bound })({  *n:X#1 countryid( 'usa' ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US does the shortest  *t:Bound })({  *n:X#1 countryid( 'usa' ,traverse_1( shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US does the *n:X#2  *t:Bound })({  *n:X#1 countryid( 'usa' ,traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US state  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US state ?  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US state *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US *n:X#2  *t:Bound })({  *n:X#1 countryid( 'usa' *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US *n:X#2 river  *t:Bound })({  *n:X#1 countryid( 'usa' *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 US *n:X#2 the shortest  *t:Bound })({  *n:X#1 countryid( 'usa' *n:X#2 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Ohio ?  *t:Bound })({  *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Ohio river  *t:Bound })({  *n:X#1 river( riverid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Ohio *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Ohio *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states  *t:Bound })({  *n:X#1 intersection( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states  *t:Bound })({  *n:X#1 state( next_to_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states .  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering Colorado ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering Colorado *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering Georgia ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering Georgia *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering Utah ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering Utah *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering Texas ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering Texas *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering Nebraska ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering Nebraska *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states bordering *n:X#2 ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states are in the  *t:Bound })({  *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states are there ?  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states are there in  *t:Bound })({  *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states are there *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states are *n:X#2 major  *t:Bound })({  *n:X#1 state( *n:X#2 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states ?  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states ?  *t:Bound })({  *n:X#1 state( next_to_2( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have  *t:Bound })({  *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have cities  *t:Bound })({  *n:X#1 state( loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have cities named  *t:Bound })({  *n:X#1 state( loc_1( city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have cities *n:X#2  *t:Bound })({  *n:X#1 state( loc_1( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have major  *t:Bound })({  *n:X#1 state( loc_1( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have major rivers  *t:Bound })({  *n:X#1 state( loc_1( major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have major *n:X#2  *t:Bound })({  *n:X#1 state( loc_1( major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have a  *t:Bound })({  *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have a city  *t:Bound })({  *n:X#1 state( loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have a *n:X#2  *t:Bound })({  *n:X#1 state( loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have *n:X#2  *t:Bound })({  *n:X#1 state( loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have *n:X#2 ?  *t:Bound })({  *n:X#1 state( loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have *n:X#2 ?  *t:Bound })({  *n:X#1 state( loc_1( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have *n:X#2 Austin  *t:Bound })({  *n:X#1 state( loc_1( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have *n:X#2 named  *t:Bound })({  *n:X#1 state( loc_1( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states have *n:X#2 rivers  *t:Bound })({  *n:X#1 state( loc_1( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states in the  *t:Bound })({  *n:X#1 intersection( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states in the *n:X#2  *t:Bound })({  *n:X#1 intersection( state( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border  *t:Bound })({  *n:X#1 state( intersection( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border Tennessee ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border Tennessee *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border Alaska ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border Alaska *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border Iowa ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border Iowa *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border Hawaii ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border Hawaii *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border Texas ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border Texas *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border at  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border the largest  *t:Bound })({  *n:X#1 state( next_to_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border the state  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border the *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states border *n:X#2 ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states does  *t:Bound })({  *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states does  *t:Bound })({  *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states does  *t:Bound })({  *n:X#1 state( next_to_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states does USA  *t:Bound })({  *n:X#1 state( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states does the *n:X#2  *t:Bound })({  *n:X#1 state( traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states does *n:X#2  *t:Bound })({  *n:X#1 state( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states does *n:X#2  *t:Bound })({  *n:X#1 state( next_to_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states through which  *t:Bound })({  *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states of USA  *t:Bound })({  state( *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states of *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states do  *t:Bound })({  *n:X#1 exclude( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states do not  *t:Bound })({  *n:X#1 exclude( state( all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states do *n:X#2  *t:Bound })({  *n:X#1 exclude( state( all *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states that border  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states that border *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states that the *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which have  *t:Bound })({  *n:X#1 count( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which have  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which have elevations  *t:Bound })({  *n:X#1 count( state( low_point_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which have no  *t:Bound })({  *n:X#1 state( all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which have *n:X#2  *t:Bound })({  *n:X#1 count( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which have *n:X#2  *t:Bound })({  *n:X#1 state( all *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which border  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which border *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which *n:X#2 .  *t:Bound })({  *n:X#1 state( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which *n:X#2 elevations  *t:Bound })({  *n:X#1 *n:X#2 state( low_point_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which *n:X#2 states  *t:Bound })({  *n:X#1 state( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which *n:X#2 no  *t:Bound })({  *n:X#1 state( *n:X#2 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states which *n:X#2 surrounding  *t:Bound })({  *n:X#1 state( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2  *t:Bound })({  *n:X#1 intersection( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2  *t:Bound })({  *n:X#1 state( intersection( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 States  *t:Bound })({  *n:X#1 state( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Tennessee ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Alaska ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 California ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Iowa ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Colorado ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Georgia ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 ?  *t:Bound })({  *n:X#1 state( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 ?  *t:Bound })({  *n:X#1 state( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 ?  *t:Bound })({  *n:X#1 state( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Hawaii ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Austin  *t:Bound })({  *n:X#1 state( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Austin ?  *t:Bound })({  *n:X#1 state( *n:X#2 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Boston  *t:Bound })({  *n:X#1 state( *n:X#2 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 and  *t:Bound })({  *n:X#1 state( intersection( *n:X#2 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Utah .  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Utah ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Texas ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 USA  *t:Bound })({  *n:X#1 state( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 United  *t:Bound })({  *n:X#1 state( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 United States  *t:Bound })({  *n:X#1 state( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 capital  *t:Bound })({  *n:X#1 state( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 capital is  *t:Bound })({  *n:X#1 state( *n:X#2 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Nebraska ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 is  *t:Bound })({  *n:X#1 state( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 is Boston  *t:Bound })({  *n:X#1 state( *n:X#2 cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 in  *t:Bound })({  *n:X#1 state( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Springfield  *t:Bound })({  *n:X#1 state( *n:X#2 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 Springfield ?  *t:Bound })({  *n:X#1 state( *n:X#2 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 border  *t:Bound })({  *n:X#1 state( intersection( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 cities  *t:Bound })({  *n:X#1 state( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 cities named  *t:Bound })({  *n:X#1 state( *n:X#2 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 not  *t:Bound })({  *n:X#1 *n:X#2 state( all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 does  *t:Bound })({  *n:X#1 intersection( state( *n:X#2 ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 river  *t:Bound })({  *n:X#1 intersection( state( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 river  *t:Bound })({  *n:X#1 state( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 river in  *t:Bound })({  *n:X#1 state( *n:X#2 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 called Rochester  *t:Bound })({  *n:X#1 state( *n:X#2 cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 major  *t:Bound })({  *n:X#1 state( *n:X#2 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 major rivers  *t:Bound })({  *n:X#1 state( *n:X#2 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 city  *t:Bound })({  *n:X#1 state( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 city named  *t:Bound })({  *n:X#1 state( *n:X#2 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 named  *t:Bound })({  *n:X#1 state( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 named Austin  *t:Bound })({  *n:X#1 state( *n:X#2 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 named Springfield  *t:Bound })({  *n:X#1 state( *n:X#2 cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 rivers  *t:Bound })({  *n:X#1 state( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 rivers ?  *t:Bound })({  *n:X#1 state( *n:X#2 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 population  *t:Bound })({  *n:X#1 state( *n:X#2 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 point  *t:Bound })({  *n:X#1 state( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 whose  *t:Bound })({  *n:X#1 state( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 whose capital  *t:Bound })({  *n:X#1 state( *n:X#2 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 state  *t:Bound })({  *n:X#1 state( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 state ?  *t:Bound })({  *n:X#1 state( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 the highest  *t:Bound })({  *n:X#1 state( *n:X#2 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 the longest  *t:Bound })({  *n:X#1 state( *n:X#2 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 the largest  *t:Bound })({  *n:X#1 state( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 the major  *t:Bound })({  *n:X#1 state( *n:X#2 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 the shortest  *t:Bound })({  *n:X#1 intersection( state( *n:X#2 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 states *n:X#2 the state  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populations  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populations of  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populations of states  *t:Bound })({  *n:X#1 population_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populations of states *n:X#2  *t:Bound })({  *n:X#1 population_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populations of the states  *t:Bound })({  *n:X#1 population_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populations of the *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populations of the *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populations of *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in  *t:Bound })({  *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Oregon ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Oregon *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Alaska ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Alaska *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in California .  *t:Bound })({  *n:X#1 loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in California ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in California ?  *t:Bound })({  *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in California *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Arizona ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Arizona ?  *t:Bound })({  *n:X#1 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Arizona *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Delaware ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Delaware *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Louisiana ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Louisiana ?  *t:Bound })({  *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Louisiana *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in America  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Arkansas .  *t:Bound })({  *n:X#1 loc_2( stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Arkansas ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Arkansas *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Iowa ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Iowa ?  *t:Bound })({  *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Iowa *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Alabama ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Alabama ?  *t:Bound })({  *n:X#1 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Alabama *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Colorado .  *t:Bound })({  *n:X#1 loc_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Colorado ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Colorado ?  *t:Bound })({  *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Colorado *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Georgia ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Georgia *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Hawaii ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Hawaii ?  *t:Bound })({  *n:X#1 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Hawaii *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Rhode Island ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Rhode Island ?  *t:Bound })({  *n:X#1 stateid( 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Rhode Island *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Rhode *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'rhode *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Rhode *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'rhode *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Boston  *t:Bound })({  *n:X#1 cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Boston ?  *t:Bound })({  *n:X#1 cityid( 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Boston *n:X#2  *t:Bound })({  *n:X#1 cityid( 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in North Carolina ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'north carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in North Carolina *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'north carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in North *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'north *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Virginia .  *t:Bound })({  *n:X#1 loc_2( stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Virginia ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Virginia runs ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Virginia runs *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Virginia *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Florida .  *t:Bound })({  *n:X#1 loc_2( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Florida ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Florida ?  *t:Bound })({  *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Florida *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Wisconsin ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Wisconsin *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Maine ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Maine *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Kansas ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Kansas ?  *t:Bound })({  *n:X#1 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Kansas *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Texas  *t:Bound })({  *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Texas .  *t:Bound })({  *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Texas .  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Texas ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Texas ?  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Texas run ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Texas run *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Texas *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Texas *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Texas *n:X#2 ?  *t:Bound })({  *n:X#2 *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Montana ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Montana ?  *t:Bound })({  *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Montana *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Illinois ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Illinois *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Massachusetts ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Massachusetts *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Washington ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Washington ?  *t:Bound })({  *n:X#1 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Washington state ?  *t:Bound })({  *n:X#1 loc_2( state( stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Washington state *n:X#2  *t:Bound })({  *n:X#1 loc_2( state( *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Washington *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Washington *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( *n:X#2 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in USA  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in United  *t:Bound })({  *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in United States  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in United *n:X#2  *t:Bound })({  *n:X#1 loc_2( countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Pennsylvania ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Pennsylvania ?  *t:Bound })({  *n:X#1 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Pennsylvania *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Mississippi ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Mississippi ?  *t:Bound })({  *n:X#1 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Mississippi *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Michigan .  *t:Bound })({  *n:X#1 loc_2( stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Michigan ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Michigan *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in New Mexico ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in New Mexico ?  *t:Bound })({  *n:X#1 stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in New Mexico *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in New Hampshire ?  *t:Bound })({  *n:X#1 stateid( 'new hampshire'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in New York ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in New York ?  *t:Bound })({  *n:X#1 stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in New York *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in New *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in New *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Nebraska ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Nebraska *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Wyoming ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Wyoming *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in each state  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in each state whose  *t:Bound })({  *n:X#1 loc_2( state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in each state *n:X#2  *t:Bound })({  *n:X#1 loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in each *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in each *n:X#2 level  *t:Bound })({  *n:X#1 loc_2( *n:X#2 0  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in each *n:X#2 whose  *t:Bound })({  *n:X#1 loc_2( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Missouri ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Missouri ?  *t:Bound })({  *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Missouri *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Oklahoma ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Oklahoma *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in South Carolina ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'south carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in South Carolina *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'south carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in South Dakota ?  *t:Bound })({  *n:X#1 stateid( 'south dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in South *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'south *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in South *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'south *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in US  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Ohio ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Ohio *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in states  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in states bordering  *t:Bound })({  *n:X#1 loc_2( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in states bordering *n:X#2  *t:Bound })({  *n:X#1 loc_2( state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in states through which  *t:Bound })({  *n:X#1 loc_2( state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in states that border  *t:Bound })({  *n:X#1 loc_2( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in states *n:X#2  *t:Bound })({  *n:X#1 loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Vermont ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'vermont'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in Vermont *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'vermont'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in continental  *t:Bound })({  *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in continental US  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in continental *n:X#2  *t:Bound })({  *n:X#1 loc_2( countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in miles  *t:Bound })({  *n:X#1 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in a state  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in a state *n:X#2  *t:Bound })({  *n:X#1 loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in a *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in smallest  *t:Bound })({  *n:X#1 loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in smallest state  *t:Bound })({  *n:X#1 loc_2( smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in smallest state *n:X#2  *t:Bound })({  *n:X#1 loc_2( smallest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in smallest *n:X#2  *t:Bound })({  *n:X#1 loc_2( smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the country  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the USA  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the USA ?  *t:Bound })({  *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the United  *t:Bound })({  *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the United  *t:Bound })({  *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the United States  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the United States  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the United *n:X#2  *t:Bound })({  *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the United *n:X#2  *t:Bound })({  *n:X#1 loc_2( countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the capital  *t:Bound })({  *n:X#1 capital( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the capital *n:X#2  *t:Bound })({  *n:X#1 capital( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the US  *t:Bound })({  *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the US  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the US does  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa' ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the US *n:X#2  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa' *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the states  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the states bordering  *t:Bound })({  *n:X#1 loc_2( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the states *n:X#2  *t:Bound })({  *n:X#1 loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the largest  *t:Bound })({  *n:X#1 loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the largest state  *t:Bound })({  *n:X#1 loc_2( largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the largest *n:X#2  *t:Bound })({  *n:X#1 loc_2( largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the biggest  *t:Bound })({  *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the biggest city  *t:Bound })({  *n:X#1 largest( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the biggest *n:X#2  *t:Bound })({  *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the smallest  *t:Bound })({  *n:X#1 loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the smallest  *t:Bound })({  *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the smallest state  *t:Bound })({  *n:X#1 loc_2( smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the smallest state  *t:Bound })({  *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the smallest *n:X#2  *t:Bound })({  *n:X#1 loc_2( smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the smallest *n:X#2  *t:Bound })({  *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the state  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the state  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the state with  *t:Bound })({  *n:X#1 loc_2( state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the state with  *t:Bound })({  *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the state *n:X#2  *t:Bound })({  *n:X#1 loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the state *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the state *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 States  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 States  *t:Bound })({  *n:X#1 *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 Des  *t:Bound })({  *n:X#1 loc_2( *n:X#2 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 bordering  *t:Bound })({  *n:X#1 loc_2( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 bordering  *t:Bound })({  *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 Moines  *t:Bound })({  *n:X#1 loc_2( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 Austin  *t:Bound })({  *n:X#1 loc_2( *n:X#2 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 Austin  *t:Bound })({  *n:X#1 *n:X#2 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 USA  *t:Bound })({  *n:X#1 loc_2( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 capital  *t:Bound })({  *n:X#1 loc_2( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 capital  *t:Bound })({  *n:X#1 *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 US  *t:Bound })({  *n:X#1 loc_2( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 in  *t:Bound })({  *n:X#1 loc_2( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 in  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 does  *t:Bound })({  *n:X#1 loc_2( *n:X#2 ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 river  *t:Bound })({  *n:X#1 loc_2( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 city  *t:Bound })({  *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 with  *t:Bound })({  *n:X#1 loc_2( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 with  *t:Bound })({  *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 point  *t:Bound })({  *n:X#1 loc_2( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 state  *t:Bound })({  *n:X#1 loc_2( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in the *n:X#2 state  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2  *t:Bound })({  *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 States  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 Island ?  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 Island ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 California ?  *t:Bound })({  *n:X#1 loc_2( *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 .  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 .  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 bordering  *t:Bound })({  *n:X#1 loc_2( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 Mexico ?  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 Mexico ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 Carolina ?  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 Georgia ?  *t:Bound })({  *n:X#1 loc_2( *n:X#2 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 ?  *t:Bound })({  *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 Dakota ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 Hampshire ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 hampshire'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 US  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 runs ?  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 river  *t:Bound })({  *n:X#1 loc_2( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 river ?  *t:Bound })({  *n:X#1 loc_2( *n:X#2 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 through which  *t:Bound })({  *n:X#1 loc_2( *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 York ?  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 York ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 run ?  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 population ?  *t:Bound })({  population_1( *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 that border  *t:Bound })({  *n:X#1 loc_2( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 state  *t:Bound })({  *n:X#1 loc_2( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 in *n:X#2 state ?  *t:Bound })({  *n:X#1 loc_2( state( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 length  *t:Bound })({  *n:X#1 len(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 length  *t:Bound })({  *n:X#1 len( intersection(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 length of the longest  *t:Bound })({  *n:X#1 len( longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 length of the *n:X#2  *t:Bound })({  *n:X#1 len( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated capital  *t:Bound })({  *n:X#1 population_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated capital in the  *t:Bound })({  *n:X#1 population_1( capital( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated capital *n:X#2  *t:Bound })({  *n:X#1 population_1( capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated state  *t:Bound })({  *n:X#1 population_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated state bordering  *t:Bound })({  *n:X#1 population_1( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated state bordering *n:X#2  *t:Bound })({  *n:X#1 population_1( state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated state *n:X#2  *t:Bound })({  *n:X#1 population_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated *n:X#2 bordering  *t:Bound })({  *n:X#1 population_1( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated *n:X#2 USA  *t:Bound })({  *n:X#1 population_1( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated *n:X#2 Oklahoma ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populated *n:X#2 in the  *t:Bound })({  *n:X#1 population_1( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Vermont ?  *t:Bound })({  *n:X#1 stateid( 'vermont'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Vermont *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'vermont'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest  *t:Bound })({  *n:X#1 largest_one(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest  *t:Bound })({  *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest capital  *t:Bound })({  *n:X#1 largest( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest capital ?  *t:Bound })({  *n:X#1 largest( capital( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest capital city  *t:Bound })({  *n:X#1 largest( capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest capital city *n:X#2  *t:Bound })({  *n:X#1 largest( capital( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest capital *n:X#2  *t:Bound })({  *n:X#1 largest( capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest river  *t:Bound })({  *n:X#1 longest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest river in  *t:Bound })({  *n:X#1 longest( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest river in *n:X#2  *t:Bound })({  *n:X#1 longest( river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest river *n:X#2  *t:Bound })({  *n:X#1 longest( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest city  *t:Bound })({  *n:X#1 largest( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest city in  *t:Bound })({  *n:X#1 largest( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest city in states  *t:Bound })({  *n:X#1 largest( city( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest city in smallest  *t:Bound })({  *n:X#1 largest( city( loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest city in the  *t:Bound })({  *n:X#1 largest( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest city in *n:X#2  *t:Bound })({  *n:X#1 largest( city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest city *n:X#2  *t:Bound })({  *n:X#1 largest( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest city *n:X#2 states  *t:Bound })({  *n:X#1 largest( city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest city *n:X#2 smallest  *t:Bound })({  *n:X#1 largest( city( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest city *n:X#2 state  *t:Bound })({  *n:X#1 largest( city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest of the states  *t:Bound })({  *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest of the *n:X#2  *t:Bound })({  *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state  *t:Bound })({  *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state .  *t:Bound })({  *n:X#1 largest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state bordering  *t:Bound })({  *n:X#1 largest( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state bordering *n:X#2  *t:Bound })({  *n:X#1 largest( state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state ?  *t:Bound })({  *n:X#1 largest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state in  *t:Bound })({  *n:X#1 largest( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state in the  *t:Bound })({  *n:X#1 largest( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state in *n:X#2  *t:Bound })({  *n:X#1 largest( state( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state traversed  *t:Bound })({  *n:X#1 largest( state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state traversed *n:X#2  *t:Bound })({  *n:X#1 largest( state( traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state through which  *t:Bound })({  *n:X#1 largest( state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state that borders  *t:Bound })({  *n:X#1 largest( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state *n:X#2  *t:Bound })({  *n:X#1 largest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest state *n:X#2 with  *t:Bound })({  *n:X#1 largest( state( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2  *t:Bound })({  *n:X#1 largest_one( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2  *t:Bound })({  *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 California ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 .  *t:Bound })({  *n:X#1 largest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 bordering  *t:Bound })({  *n:X#1 largest( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 Arkansas ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 Alabama ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 ?  *t:Bound })({  *n:X#1 largest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 Wisconsin ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 Texas ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 USA  *t:Bound })({  *n:X#1 largest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 Michigan ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 Missouri ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 US  *t:Bound })({  *n:X#1 largest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 states  *t:Bound })({  *n:X#1 largest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 in  *t:Bound })({  *n:X#1 largest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 in  *t:Bound })({  *n:X#1 longest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 in states  *t:Bound })({  *n:X#1 largest( *n:X#2 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 in smallest  *t:Bound })({  *n:X#1 largest( *n:X#2 loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 in the  *t:Bound })({  *n:X#1 largest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 city  *t:Bound })({  *n:X#1 largest( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 traversed  *t:Bound })({  *n:X#1 largest( *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 through which  *t:Bound })({  *n:X#1 largest( *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 with  *t:Bound })({  *n:X#1 largest( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 a state  *t:Bound })({  *n:X#1 largest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 that borders  *t:Bound })({  *n:X#1 largest( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 that border  *t:Bound })({  *n:X#1 largest( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 smallest  *t:Bound })({  *n:X#1 largest( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 smallest state  *t:Bound })({  *n:X#1 largest( *n:X#2 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 state  *t:Bound })({  *n:X#1 largest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 largest *n:X#2 the state  *t:Bound })({  *n:X#1 largest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Springfield  *t:Bound })({  *n:X#1 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Springfield ?  *t:Bound })({  *n:X#1 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Springfield Missouri  *t:Bound })({  *n:X#1 'springfield', 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Springfield South Dakota  *t:Bound })({  *n:X#1 'springfield', 'sd'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Springfield *n:X#2  *t:Bound })({  *n:X#1 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border  *t:Bound })({  *n:X#1 intersection( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border  *t:Bound })({  *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border Tennessee ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border Tennessee *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border Alaska ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border Alaska *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border Iowa ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border Iowa *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border Colorado  *t:Bound })({  *n:X#1 intersection( next_to_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border ?  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border Hawaii ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border Hawaii *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border Texas ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border Texas *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border New Mexico ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border New Mexico *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border New *n:X#2 ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border at  *t:Bound })({  *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border on the state  *t:Bound })({  *n:X#1 next_to_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border on the *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border the Mississippi river  *t:Bound })({  *n:X#1 next_to_2( river( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border the Mississippi *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border the largest  *t:Bound })({  *n:X#1 next_to_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border the largest state  *t:Bound })({  *n:X#1 next_to_2( largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border the largest *n:X#2  *t:Bound })({  *n:X#1 next_to_2( largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border the state *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border the *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border the *n:X#2 ?  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border the *n:X#2 river  *t:Bound })({  *n:X#1 next_to_2( river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border the *n:X#2 state  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border *n:X#2  *t:Bound })({  *n:X#1 intersection( next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border *n:X#2 Mexico ?  *t:Bound })({  *n:X#1 next_to_2( stateid( *n:X#2 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 border *n:X#2 ?  *t:Bound })({  *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Spokane  *t:Bound })({  *n:X#1 'spokane',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Spokane Washington  *t:Bound })({  *n:X#1 'spokane', 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Spokane *n:X#2  *t:Bound })({  *n:X#1 'spokane', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 big  *t:Bound })({  *n:X#1 size(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 big is Alaska ?  *t:Bound })({  *n:X#1 size( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 big is Texas ?  *t:Bound })({  *n:X#1 size( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 big is Massachusetts ?  *t:Bound })({  *n:X#1 size( stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 big is *n:X#2 ?  *t:Bound })({  *n:X#1 size( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 big cities are  *t:Bound })({  *n:X#1 major( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 big cities are *n:X#2  *t:Bound })({  *n:X#1 major( city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 big *n:X#2  *t:Bound })({  *n:X#1 size( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 big *n:X#2 are  *t:Bound })({  *n:X#1 major( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Peak  *t:Bound })({  *n:X#1 peak'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 found in Colorado ?  *t:Bound })({  *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 found in *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 no  *t:Bound })({  *n:X#1 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 no surrounding  *t:Bound })({  *n:X#1 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 no surrounding states  *t:Bound })({  *n:X#1 , next_to_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 no surrounding states .  *t:Bound })({  *n:X#1 , next_to_2( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 no surrounding states *n:X#2  *t:Bound })({  *n:X#1 , next_to_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 no surrounding *n:X#2  *t:Bound })({  *n:X#1 , next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 no surrounding *n:X#2 .  *t:Bound })({  *n:X#1 , next_to_2( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 no *n:X#2  *t:Bound })({  *n:X#1 , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 no *n:X#2 .  *t:Bound })({  *n:X#1 , *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 no *n:X#2 states  *t:Bound })({  *n:X#1 , *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 no *n:X#2 states .  *t:Bound })({  *n:X#1 , *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 surrounding  *t:Bound })({  *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 surrounding states  *t:Bound })({  *n:X#1 next_to_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 surrounding states .  *t:Bound })({  *n:X#1 next_to_2( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 surrounding states *n:X#2  *t:Bound })({  *n:X#1 next_to_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 surrounding *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 surrounding *n:X#2 .  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what  *t:Bound })({  *n:X#1 placeid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what cities  *t:Bound })({  *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what cities are  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what cities *n:X#2  *t:Bound })({  *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what state  *t:Bound })({  state( *n:X#1 placeid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what state is  *t:Bound })({  answer( state( *n:X#1 placeid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what state is Mount  *t:Bound })({  answer( state( *n:X#1 placeid( 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what state is *n:X#2  *t:Bound })({  answer( state( *n:X#1 placeid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what state *n:X#2  *t:Bound })({  *n:X#2 state( *n:X#1 placeid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what state *n:X#2 Mount  *t:Bound })({  *n:X#2 state( *n:X#1 placeid( 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 placeid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what *n:X#2 are  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what *n:X#2 Mount  *t:Bound })({  *n:X#2 *n:X#1 placeid( 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what *n:X#2 Mount McKinley  *t:Bound })({  *n:X#2 *n:X#1 placeid( 'mount mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what *n:X#2 is  *t:Bound })({  answer( *n:X#2 *n:X#1 placeid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 what *n:X#2 is Mount  *t:Bound })({  answer( *n:X#2 *n:X#1 placeid( 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 for Michigan ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 for Michigan *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 runs  *t:Bound })({  riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 runs  *t:Bound })({  *n:X#1 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 runs ?  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 runs ?  *t:Bound })({  *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 runs through  *t:Bound })({  traverse_1( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 runs through  *t:Bound })({  traverse_1( *n:X#1 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 runs *n:X#2  *t:Bound })({  *n:X#2 riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 runs *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities  *t:Bound })({  *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities are  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities are in  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities are in states  *t:Bound })({  *n:X#1 city( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities are in *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities are there in  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities are located *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities are *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities ?  *t:Bound })({  *n:X#1 city( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Alaska ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Alaska *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in California ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in California *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Delaware ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Delaware *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Alabama ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Alabama *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Colorado .  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Colorado *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Virginia .  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Virginia *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Wisconsin ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Wisconsin *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Kansas ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Kansas *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Texas .  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Texas ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Texas *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Montana ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Montana *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in USA  *t:Bound })({  *n:X#1 city( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Wyoming ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Wyoming *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Missouri ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Missouri *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Oklahoma ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Oklahoma *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Ohio ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Ohio *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in states  *t:Bound })({  *n:X#1 city( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in states *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Vermont ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'vermont'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in Vermont *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'vermont'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in the  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in the USA  *t:Bound })({  *n:X#1 city( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in the states  *t:Bound })({  *n:X#1 city( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in the largest  *t:Bound })({  *n:X#1 city( loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in the smallest  *t:Bound })({  *n:X#1 city( loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in the state  *t:Bound })({  *n:X#1 city( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in the *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in *n:X#2 .  *t:Bound })({  *n:X#1 city( loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities in *n:X#2 ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities does the  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities does the USA  *t:Bound })({  *n:X#1 city( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities does the *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities or *n:X#2  *t:Bound })({  *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities or *n:X#2 ?  *t:Bound })({  *n:X#1 city( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named  *t:Bound })({  *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named  *t:Bound })({  *n:X#1 intersection( city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named Durham  *t:Bound })({  *n:X#1 city( cityid( 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named Durham ?  *t:Bound })({  *n:X#1 city( cityid( 'durham', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named Durham *n:X#2  *t:Bound })({  *n:X#1 city( cityid( 'durham', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named Austin  *t:Bound })({  *n:X#1 city( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named Austin  *t:Bound })({  *n:X#1 intersection( city( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named Austin ?  *t:Bound })({  *n:X#1 city( cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named Austin *n:X#2  *t:Bound })({  *n:X#1 city( cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named *n:X#2  *t:Bound })({  *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named *n:X#2  *t:Bound })({  *n:X#1 intersection( city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities named *n:X#2 ?  *t:Bound })({  *n:X#1 city( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities of the  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities of the United  *t:Bound })({  *n:X#1 city( loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities of the US  *t:Bound })({  *n:X#1 city( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities of the states  *t:Bound })({  *n:X#1 city( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities of the *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities of *n:X#2  *t:Bound })({  *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities of *n:X#2 States  *t:Bound })({  *n:X#1 city( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities of *n:X#2 United  *t:Bound })({  *n:X#1 city( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities of *n:X#2 US  *t:Bound })({  *n:X#1 city( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities of *n:X#2 states  *t:Bound })({  *n:X#1 city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities which are  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities which *n:X#2  *t:Bound })({  *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2  *t:Bound })({  *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 States  *t:Bound })({  *n:X#1 city( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Oregon ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Alaska ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 California ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Delaware ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 bordering  *t:Bound })({  *n:X#1 city( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Durham  *t:Bound })({  *n:X#1 city( *n:X#2 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Durham ?  *t:Bound })({  *n:X#1 city( *n:X#2 'durham', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Alabama ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Colorado .  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 ?  *t:Bound })({  *n:X#1 city( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 ?  *t:Bound })({  *n:X#1 city( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Austin  *t:Bound })({  *n:X#1 city( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Austin ?  *t:Bound })({  *n:X#1 city( *n:X#2 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Virginia .  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Wisconsin ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Kansas ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Utah ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Texas .  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Texas ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Montana ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 USA  *t:Bound })({  *n:X#1 city( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 United  *t:Bound })({  *n:X#1 city( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 United States  *t:Bound })({  *n:X#1 city( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Nebraska ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Wyoming ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Missouri ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Oklahoma ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 US  *t:Bound })({  *n:X#1 city( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Ohio ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 states  *t:Bound })({  *n:X#1 city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 states bordering  *t:Bound })({  *n:X#1 city( *n:X#2 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 Vermont ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'vermont'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 largest  *t:Bound })({  *n:X#1 city( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 largest state  *t:Bound })({  *n:X#1 city( *n:X#2 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 through which  *t:Bound })({  *n:X#1 city( *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 that border  *t:Bound })({  *n:X#1 city( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 smallest  *t:Bound })({  *n:X#1 city( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 smallest state  *t:Bound })({  *n:X#1 city( *n:X#2 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 state  *t:Bound })({  *n:X#1 city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 state ?  *t:Bound })({  *n:X#1 city( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cities *n:X#2 the largest  *t:Bound })({  *n:X#1 city( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not  *t:Bound })({  *n:X#1 all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not have  *t:Bound })({  *n:X#1 all , loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not have rivers  *t:Bound })({  *n:X#1 all , loc_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not have *n:X#2  *t:Bound })({  *n:X#1 all , loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not traverse the  *t:Bound })({  *n:X#1 all , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not traverse the state  *t:Bound })({  *n:X#1 all , traverse_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not traverse the *n:X#2  *t:Bound })({  *n:X#1 all , traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not traverse *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not traverse *n:X#2 state  *t:Bound })({  *n:X#1 *n:X#2 , traverse_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not *n:X#2  *t:Bound })({  *n:X#1 all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not *n:X#2 ?  *t:Bound })({  *n:X#1 all , *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not *n:X#2 rivers  *t:Bound })({  *n:X#1 all , *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not *n:X#2 the  *t:Bound })({  *n:X#1 all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 not *n:X#2 the state  *t:Bound })({  *n:X#1 all , *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 there ?  *t:Bound })({  *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most  *t:Bound })({  *n:X#1 largest_one(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populated  *t:Bound })({  *n:X#1 largest_one( population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populated capital  *t:Bound })({  *n:X#1 largest_one( population_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populated capital *n:X#2  *t:Bound })({  *n:X#1 largest_one( population_1( capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populated state  *t:Bound })({  *n:X#1 largest_one( population_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populated state bordering  *t:Bound })({  *n:X#1 largest_one( population_1( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populated state *n:X#2  *t:Bound })({  *n:X#1 largest_one( population_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populated *n:X#2  *t:Bound })({  *n:X#1 largest_one( population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populated *n:X#2 bordering  *t:Bound })({  *n:X#1 largest_one( population_1( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populous  *t:Bound })({  *n:X#1 largest_one( population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populous city  *t:Bound })({  *n:X#1 largest_one( population_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populous city ?  *t:Bound })({  *n:X#1 largest_one( population_1( city( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populous city in  *t:Bound })({  *n:X#1 largest_one( population_1( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populous city *n:X#2  *t:Bound })({  *n:X#1 largest_one( population_1( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populous state  *t:Bound })({  *n:X#1 largest_one( population_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populous state ?  *t:Bound })({  *n:X#1 largest_one( population_1( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populous state *n:X#2  *t:Bound })({  *n:X#1 largest_one( population_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populous *n:X#2  *t:Bound })({  *n:X#1 largest_one( population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populous *n:X#2 ?  *t:Bound })({  *n:X#1 largest_one( population_1( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most populous *n:X#2 in  *t:Bound })({  *n:X#1 largest_one( population_1( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most dense  *t:Bound })({  *n:X#1 largest_one( density_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most dense state  *t:Bound })({  *n:X#1 largest_one( density_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most dense state *n:X#2  *t:Bound })({  *n:X#1 largest_one( density_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most dense *n:X#2  *t:Bound })({  *n:X#1 largest_one( density_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2  *t:Bound })({  *n:X#1 largest_one( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 bordering  *t:Bound })({  *n:X#1 largest_one( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 ?  *t:Bound })({  *n:X#1 largest_one( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 Texas ?  *t:Bound })({  *n:X#1 largest_one( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 USA  *t:Bound })({  *n:X#1 largest_one( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 capital  *t:Bound })({  *n:X#1 largest_one( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 Wyoming ?  *t:Bound })({  *n:X#1 largest_one( *n:X#2 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 Oklahoma ?  *t:Bound })({  *n:X#1 largest_one( *n:X#2 stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 US  *t:Bound })({  *n:X#1 largest_one( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 in  *t:Bound })({  *n:X#1 largest_one( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 in the  *t:Bound })({  *n:X#1 largest_one( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 city  *t:Bound })({  *n:X#1 largest_one( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 city ?  *t:Bound })({  *n:X#1 largest_one( *n:X#2 city( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 city in  *t:Bound })({  *n:X#1 largest_one( *n:X#2 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 through which  *t:Bound })({  *n:X#1 largest_one( *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 state  *t:Bound })({  *n:X#1 largest_one( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 state bordering  *t:Bound })({  *n:X#1 largest_one( *n:X#2 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 most *n:X#2 state ?  *t:Bound })({  *n:X#1 largest_one( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 height  *t:Bound })({  *n:X#1 elevation_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 height of Mount  *t:Bound })({  *n:X#1 elevation_1( placeid( 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 height of Mount McKinley  *t:Bound })({  *n:X#1 elevation_1( placeid( 'mount mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 height of Mount *n:X#2  *t:Bound })({  *n:X#1 elevation_1( placeid( 'mount *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 height of the highest  *t:Bound })({  *n:X#1 elevation_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 height of the *n:X#2  *t:Bound })({  *n:X#1 elevation_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 height of *n:X#2  *t:Bound })({  *n:X#1 elevation_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 height of *n:X#2 McKinley  *t:Bound })({  *n:X#1 elevation_1( *n:X#2 mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 average population  *t:Bound })({  *n:X#1 density_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area  *t:Bound })({  *n:X#1 area_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of  *t:Bound })({  *n:X#1 area_1( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of Alaska ?  *t:Bound })({  *n:X#1 area_1( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of California ?  *t:Bound })({  *n:X#1 area_1( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of Florida ?  *t:Bound })({  *n:X#1 area_1( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of Wisconsin ?  *t:Bound })({  *n:X#1 area_1( stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of Seattle  *t:Bound })({  *n:X#1 area_1( cityid( 'seattle',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of Seattle ?  *t:Bound })({  *n:X#1 area_1( cityid( 'seattle', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of Seattle *n:X#2  *t:Bound })({  *n:X#1 area_1( cityid( 'seattle', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of Maine ?  *t:Bound })({  *n:X#1 area_1( stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of Idaho ?  *t:Bound })({  *n:X#1 area_1( stateid( 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of Texas ?  *t:Bound })({  *n:X#1 area_1( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of Ohio ?  *t:Bound })({  *n:X#1 area_1( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of the states  *t:Bound })({  *n:X#1 area_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of the largest  *t:Bound })({  *n:X#1 area_1( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of the smallest  *t:Bound })({  *n:X#1 area_1( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of the *n:X#2  *t:Bound })({  *n:X#1 area_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of the *n:X#2  *t:Bound })({  *n:X#1 area_1( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of *n:X#2  *t:Bound })({  *n:X#1 area_1( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of *n:X#2 ?  *t:Bound })({  *n:X#1 area_1( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area of *n:X#2 ?  *t:Bound })({  *n:X#1 area_1( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area *n:X#2  *t:Bound })({  *n:X#1 area_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area *n:X#2 ?  *t:Bound })({  *n:X#1 area_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area *n:X#2 Seattle  *t:Bound })({  *n:X#1 area_1( *n:X#2 'seattle',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 area *n:X#2 Seattle ?  *t:Bound })({  *n:X#1 area_1( *n:X#2 'seattle', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 located in Pennsylvania ?  *t:Bound })({  *n:X#1 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 located in *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 total  *t:Bound })({  *n:X#1 sum(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 total length of all  *t:Bound })({  *n:X#1 sum( len(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 total population  *t:Bound })({  *n:X#1 sum( population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 total *n:X#2  *t:Bound })({  *n:X#1 sum( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 total *n:X#2 of all  *t:Bound })({  *n:X#1 sum( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 total *n:X#2 that border  *t:Bound })({  *n:X#1 sum( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does  *t:Bound })({  *n:X#1 ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does  *t:Bound })({  *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does  *t:Bound })({  *n:X#1 next_to_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Tennessee border ?  *t:Bound })({  *n:X#1 next_to_1( stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Tennessee border *n:X#2  *t:Bound })({  *n:X#1 next_to_1( *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Alaska have ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Alaska have *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Iowa border ?  *t:Bound })({  *n:X#1 next_to_1( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Iowa border *n:X#2  *t:Bound })({  *n:X#1 next_to_1( *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Colorado have ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Colorado have *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Texas have ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Texas have ?  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Texas have *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Texas have *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does USA  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Missouri border ?  *t:Bound })({  *n:X#1 next_to_1( stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does Missouri border *n:X#2  *t:Bound })({  *n:X#1 next_to_1( *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the Colorado *n:X#2  *t:Bound })({  *n:X#1 traverse_1( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the highest  *t:Bound })({  answer( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the highest point  *t:Bound })({  answer( *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the highest *n:X#2  *t:Bound })({  answer( *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the USA  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the Mississippi run  *t:Bound })({  *n:X#1 traverse_1( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the Mississippi *n:X#2  *t:Bound })({  *n:X#1 traverse_1( *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the Missouri *n:X#2  *t:Bound })({  *n:X#1 traverse_1( *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the biggest  *t:Bound })({  *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the biggest city  *t:Bound })({  *n:X#1 largest( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the biggest *n:X#2  *t:Bound })({  *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the shortest  *t:Bound })({  *n:X#1 ,traverse_1( shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the shortest river  *t:Bound })({  *n:X#1 ,traverse_1( shortest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the shortest *n:X#2  *t:Bound })({  *n:X#1 ,traverse_1( shortest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the *n:X#2  *t:Bound })({  *n:X#1 ,traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the *n:X#2  *t:Bound })({  *n:X#1 traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the *n:X#2 USA  *t:Bound })({  answer( *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the *n:X#2 in  *t:Bound })({  answer( *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the *n:X#2 river  *t:Bound })({  *n:X#1 ,traverse_1( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the *n:X#2 city  *t:Bound })({  *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the *n:X#2 run  *t:Bound })({  *n:X#1 traverse_1( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does the *n:X#2 point  *t:Bound })({  answer( *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does *n:X#2  *t:Bound })({  *n:X#1 next_to_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does *n:X#2 have ?  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does *n:X#2 have ?  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 does *n:X#2 border ?  *t:Bound })({  *n:X#1 next_to_1( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 reside in Utah ?  *t:Bound })({  *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 reside in *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capitals  *t:Bound })({  capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capitals  *t:Bound })({  *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capitals *n:X#2  *t:Bound })({  capital( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 capitals *n:X#2  *t:Bound })({  *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest  *t:Bound })({  *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest  *t:Bound })({  *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest American city  *t:Bound })({  *n:X#1 largest( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest American city in  *t:Bound })({  *n:X#1 largest( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest American city *n:X#2  *t:Bound })({  *n:X#1 largest( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest American *n:X#2  *t:Bound })({  *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest American *n:X#2 in  *t:Bound })({  *n:X#1 largest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest capital  *t:Bound })({  *n:X#1 largest( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest capital city  *t:Bound })({  *n:X#1 largest( capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest capital city *n:X#2  *t:Bound })({  *n:X#1 largest( capital( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest capital *n:X#2  *t:Bound })({  *n:X#1 largest( capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest river  *t:Bound })({  *n:X#1 longest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest river in  *t:Bound })({  *n:X#1 longest( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest river in *n:X#2  *t:Bound })({  *n:X#1 longest( river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest river *n:X#2  *t:Bound })({  *n:X#1 longest( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest city  *t:Bound })({  *n:X#1 largest( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest city in  *t:Bound })({  *n:X#1 largest( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest city in the  *t:Bound })({  *n:X#1 largest( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest city in *n:X#2  *t:Bound })({  *n:X#1 largest( city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest city *n:X#2  *t:Bound })({  *n:X#1 largest( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest city *n:X#2 ?  *t:Bound })({  *n:X#1 largest( city( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest city *n:X#2 smallest  *t:Bound })({  *n:X#1 largest( city( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest city *n:X#2 state  *t:Bound })({  *n:X#1 largest( city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest state  *t:Bound })({  *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest state ?  *t:Bound })({  *n:X#1 largest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest state in  *t:Bound })({  *n:X#1 largest( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest state in continental  *t:Bound })({  *n:X#1 largest( state( loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest state in the  *t:Bound })({  *n:X#1 largest( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest state in *n:X#2  *t:Bound })({  *n:X#1 largest( state( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest state *n:X#2  *t:Bound })({  *n:X#1 largest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest state *n:X#2 US  *t:Bound })({  *n:X#1 largest( state( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest state *n:X#2 continental  *t:Bound })({  *n:X#1 largest( state( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2  *t:Bound })({  *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2  *t:Bound })({  *n:X#1 longest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 Oregon ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 Arizona ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 Louisiana ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 Georgia ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 ?  *t:Bound })({  *n:X#1 largest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 Kansas ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 Texas ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 Illinois ?  *t:Bound })({  *n:X#1 longest( *n:X#2 stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 USA  *t:Bound })({  *n:X#1 largest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 Nebraska ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 Wyoming ?  *t:Bound })({  *n:X#1 largest( *n:X#2 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 US  *t:Bound })({  *n:X#1 largest( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 US  *t:Bound })({  *n:X#1 largest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 in  *t:Bound })({  *n:X#1 largest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 in  *t:Bound })({  *n:X#1 longest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 in continental  *t:Bound })({  *n:X#1 largest( *n:X#2 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 in the  *t:Bound })({  *n:X#1 largest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 city  *t:Bound })({  *n:X#1 largest( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 continental  *t:Bound })({  *n:X#1 largest( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 continental US  *t:Bound })({  *n:X#1 largest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 smallest  *t:Bound })({  *n:X#1 largest( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 smallest state  *t:Bound })({  *n:X#1 largest( *n:X#2 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 state  *t:Bound })({  *n:X#1 largest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 biggest *n:X#2 state ?  *t:Bound })({  *n:X#1 largest( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cross  *t:Bound })({  *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cross Ohio ?  *t:Bound })({  *n:X#1 traverse_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cross Ohio *n:X#2  *t:Bound })({  *n:X#1 traverse_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cross *n:X#2  *t:Bound })({  *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 cross *n:X#2 ?  *t:Bound })({  *n:X#1 traverse_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rochester  *t:Bound })({  *n:X#1 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rochester ?  *t:Bound })({  *n:X#1 'rochester', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Rochester *n:X#2  *t:Bound })({  *n:X#1 'rochester', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traverse  *t:Bound })({  *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traverse the  *t:Bound })({  all *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traverse the state  *t:Bound })({  all *n:X#1 traverse_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traverse the state with  *t:Bound })({  all *n:X#1 traverse_2( state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traverse the state *n:X#2  *t:Bound })({  all *n:X#1 traverse_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traverse the *n:X#2  *t:Bound })({  all *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traverse the *n:X#2 ?  *t:Bound })({  all *n:X#1 traverse_2( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traverse the *n:X#2 with  *t:Bound })({  all *n:X#1 traverse_2( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traverse *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traverse *n:X#2 state  *t:Bound })({  *n:X#2 *n:X#1 traverse_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traverse *n:X#2 state with  *t:Bound })({  *n:X#2 *n:X#1 traverse_2( state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least  *t:Bound })({  *n:X#1 smallest_one(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least one other state  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least populous  *t:Bound })({  *n:X#1 smallest_one( population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least populous state  *t:Bound })({  *n:X#1 smallest_one( population_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least populous state ?  *t:Bound })({  *n:X#1 smallest_one( population_1( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least populous state *n:X#2  *t:Bound })({  *n:X#1 smallest_one( population_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least populous *n:X#2  *t:Bound })({  *n:X#1 smallest_one( population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least populous *n:X#2 ?  *t:Bound })({  *n:X#1 smallest_one( population_1( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least *n:X#2  *t:Bound })({  *n:X#1 smallest_one( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least *n:X#2 ?  *t:Bound })({  *n:X#1 smallest_one( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least *n:X#2 state  *t:Bound })({  *n:X#1 smallest_one( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 least *n:X#2 state ?  *t:Bound })({  *n:X#1 smallest_one( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river  *t:Bound })({  river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river  *t:Bound })({  river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river  *t:Bound })({  *n:X#1 , river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river  *t:Bound })({  *n:X#1 exclude( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river  *t:Bound })({  *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river ?  *t:Bound })({  *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river flowing through  *t:Bound })({  *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river flowing through *n:X#2  *t:Bound })({  *n:X#1 river( traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in  *t:Bound })({  *n:X#1 , river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in  *t:Bound })({  *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Alaska ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Alaska *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in California ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in California *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in America  *t:Bound })({  *n:X#1 river( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Iowa ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Iowa *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Florida ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Florida *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Texas ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Texas *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Illinois ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Illinois *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Pennsylvania ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Pennsylvania *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Mississippi ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Mississippi *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Nebraska ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in Nebraska *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in US  *t:Bound })({  *n:X#1 river( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in miles  *t:Bound })({  river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in the  *t:Bound })({  *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in the USA  *t:Bound })({  *n:X#1 river( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in the United  *t:Bound })({  *n:X#1 river( loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in the US  *t:Bound })({  *n:X#1 river( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in the states  *t:Bound })({  *n:X#1 river( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in the largest  *t:Bound })({  *n:X#1 river( loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in the smallest  *t:Bound })({  *n:X#1 river( loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in the state  *t:Bound })({  *n:X#1 river( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in the *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in *n:X#2  *t:Bound })({  river( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river in *n:X#2 ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river runs  *t:Bound })({  river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river runs ?  *t:Bound })({  *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river runs through  *t:Bound })({  traverse_1( river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river runs *n:X#2  *t:Bound })({  *n:X#2 river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river runs *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river flow  *t:Bound })({  river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river run  *t:Bound })({  river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river run through ?  *t:Bound })({  *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river run through *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river that flows through  *t:Bound })({  *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river that runs through  *t:Bound })({  *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river that runs *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river that does not  *t:Bound })({  *n:X#1 exclude( river( all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river that does *n:X#2  *t:Bound })({  *n:X#1 exclude( river( all *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river that cross over  *t:Bound })({  *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river that passes  *t:Bound })({  *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river that passes through  *t:Bound })({  *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river that *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river which  *t:Bound })({  traverse_1( river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2  *t:Bound })({  river( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2  *t:Bound })({  *n:X#1 , river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2  *t:Bound })({  *n:X#2 river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 States  *t:Bound })({  *n:X#1 river( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 Alaska ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 California ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 America  *t:Bound })({  *n:X#1 river( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 Iowa ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 Colorado ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 ?  *t:Bound })({  *n:X#1 river( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 Florida ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 Texas ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 Illinois ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 USA  *t:Bound })({  *n:X#1 river( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 United  *t:Bound })({  *n:X#1 river( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 United States  *t:Bound })({  *n:X#1 river( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 Pennsylvania ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 Mississippi ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 Nebraska ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 US  *t:Bound })({  *n:X#1 river( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 Ohio ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 states  *t:Bound })({  *n:X#1 river( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 in the  *t:Bound })({  *n:X#1 river( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 largest  *t:Bound })({  *n:X#1 river( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 largest state  *t:Bound })({  *n:X#1 river( *n:X#2 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 cities  *t:Bound })({  *n:X#1 river( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 major  *t:Bound })({  *n:X#1 river( *n:X#2 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 major cities  *t:Bound })({  *n:X#1 river( *n:X#2 major( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 through  *t:Bound })({  traverse_1( river( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 with  *t:Bound })({  *n:X#1 river( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 that border  *t:Bound })({  *n:X#1 river( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 point  *t:Bound })({  *n:X#1 river( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 point ?  *t:Bound })({  *n:X#1 river( *n:X#2 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 smallest  *t:Bound })({  *n:X#1 river( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 smallest state  *t:Bound })({  *n:X#1 river( *n:X#2 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 state  *t:Bound })({  *n:X#1 river( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 state ?  *t:Bound })({  *n:X#1 river( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 state with  *t:Bound })({  *n:X#1 river( *n:X#2 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 the highest  *t:Bound })({  *n:X#1 river( *n:X#2 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 river *n:X#2 the US  *t:Bound })({  *n:X#1 river( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 called Rochester  *t:Bound })({  *n:X#1 cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 called Rochester ?  *t:Bound })({  *n:X#1 cityid( 'rochester', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 called Rochester *n:X#2  *t:Bound })({  *n:X#1 cityid( 'rochester', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 called *n:X#2 ?  *t:Bound })({  *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 or towns named Springfield  *t:Bound })({  *n:X#1 cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 or towns *n:X#2 Springfield  *t:Bound })({  *n:X#1 *n:X#2 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 or *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous city  *t:Bound })({  *n:X#1 population_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous city ?  *t:Bound })({  *n:X#1 population_1( city( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous city in  *t:Bound })({  *n:X#1 population_1( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous city in *n:X#2  *t:Bound })({  *n:X#1 population_1( city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous city *n:X#2  *t:Bound })({  *n:X#1 population_1( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous state  *t:Bound })({  *n:X#1 population_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous state ?  *t:Bound })({  *n:X#1 population_1( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous state in the  *t:Bound })({  *n:X#1 population_1( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous state through which  *t:Bound })({  *n:X#1 population_1( state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous state *n:X#2  *t:Bound })({  *n:X#1 population_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous *n:X#2 ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous *n:X#2 Texas ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous *n:X#2 Wyoming ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous *n:X#2 US  *t:Bound })({  *n:X#1 population_1( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous *n:X#2 in  *t:Bound })({  *n:X#1 population_1( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous *n:X#2 in the  *t:Bound })({  *n:X#1 population_1( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 populous *n:X#2 through which  *t:Bound })({  *n:X#1 population_1( *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major  *t:Bound })({  *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major lakes  *t:Bound })({  *n:X#1 major( lake(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major lakes in  *t:Bound })({  *n:X#1 major( lake( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major lakes in *n:X#2  *t:Bound })({  *n:X#1 major( lake( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major lakes *n:X#2  *t:Bound })({  *n:X#1 major( lake( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities  *t:Bound })({  major( city( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities  *t:Bound })({  *n:X#1 major( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities are  *t:Bound })({  *n:X#1 major( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities are  *t:Bound })({  *n:X#1 major( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities are in  *t:Bound })({  *n:X#1 major( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities are *n:X#2  *t:Bound })({  *n:X#1 major( city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities ?  *t:Bound })({  *n:X#1 major( city( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities in  *t:Bound })({  *n:X#1 major( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities in *n:X#2  *t:Bound })({  *n:X#1 major( city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities *n:X#2  *t:Bound })({  major( city( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities *n:X#2  *t:Bound })({  *n:X#1 major( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities *n:X#2 bordering  *t:Bound })({  *n:X#1 major( city( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major cities *n:X#2 states  *t:Bound })({  *n:X#1 major( city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major rivers  *t:Bound })({  *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major rivers ?  *t:Bound })({  *n:X#1 major( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major rivers in  *t:Bound })({  *n:X#1 major( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major rivers in *n:X#2  *t:Bound })({  *n:X#1 major( river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major rivers cross  *t:Bound })({  *n:X#1 major( river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major rivers cross *n:X#2  *t:Bound })({  *n:X#1 major( river( traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major rivers *n:X#2  *t:Bound })({  *n:X#1 major( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2  *t:Bound })({  major( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2  *t:Bound })({  *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 Oregon ?  *t:Bound })({  *n:X#1 major( *n:X#2 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 bordering  *t:Bound })({  *n:X#1 major( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 are  *t:Bound })({  *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 are  *t:Bound })({  *n:X#1 major( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 are in  *t:Bound })({  *n:X#1 major( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 ?  *t:Bound })({  *n:X#1 major( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 Florida .  *t:Bound })({  *n:X#1 major( *n:X#2 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 Utah ?  *t:Bound })({  *n:X#1 major( *n:X#2 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 Montana ?  *t:Bound })({  *n:X#1 major( *n:X#2 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 Michigan .  *t:Bound })({  *n:X#1 major( *n:X#2 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 Nebraska ?  *t:Bound })({  *n:X#1 major( *n:X#2 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 Ohio ?  *t:Bound })({  *n:X#1 major( *n:X#2 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 states  *t:Bound })({  *n:X#1 major( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 states bordering  *t:Bound })({  *n:X#1 major( *n:X#2 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 in  *t:Bound })({  *n:X#1 major( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 major *n:X#2 cross  *t:Bound })({  *n:X#1 major( *n:X#2 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest  *t:Bound })({  *n:X#1 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest river  *t:Bound })({  *n:X#1 shortest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest river ?  *t:Bound })({  *n:X#1 shortest( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest river in  *t:Bound })({  *n:X#1 shortest( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest river in the  *t:Bound })({  *n:X#1 shortest( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest river in *n:X#2  *t:Bound })({  *n:X#1 shortest( river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest river *n:X#2  *t:Bound })({  *n:X#1 shortest( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest river *n:X#2 States  *t:Bound })({  *n:X#1 shortest( river( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest river *n:X#2 United  *t:Bound })({  *n:X#1 shortest( river( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2  *t:Bound })({  *n:X#1 shortest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 States  *t:Bound })({  *n:X#1 shortest( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 Alaska ?  *t:Bound })({  *n:X#1 shortest( *n:X#2 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 Iowa ?  *t:Bound })({  *n:X#1 shortest( *n:X#2 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 ?  *t:Bound })({  *n:X#1 shortest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 Texas ?  *t:Bound })({  *n:X#1 shortest( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 USA  *t:Bound })({  *n:X#1 shortest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 United  *t:Bound })({  *n:X#1 shortest( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 United States  *t:Bound })({  *n:X#1 shortest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 Nebraska ?  *t:Bound })({  *n:X#1 shortest( *n:X#2 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 US  *t:Bound })({  *n:X#1 shortest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 in  *t:Bound })({  *n:X#1 shortest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 shortest *n:X#2 in the  *t:Bound })({  *n:X#1 shortest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city  *t:Bound })({  *n:X#1 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city ?  *t:Bound })({  *n:X#1 city( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Oregon ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Oregon *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Alaska ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Alaska *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in California ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in California *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Arizona ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Arizona *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Louisiana ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Louisiana *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Arkansas ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Arkansas *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Alabama ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Alabama *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Georgia ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Georgia *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Hawaii ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Hawaii *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Wisconsin ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Wisconsin *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Kansas ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Kansas *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Texas ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Texas *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Washington ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Washington *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in USA  *t:Bound })({  *n:X#1 city( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Michigan ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Michigan *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Nebraska ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Nebraska *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Wyoming ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Wyoming *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Missouri ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in Missouri *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in states  *t:Bound })({  *n:X#1 city( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in states *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in a state  *t:Bound })({  *n:X#1 city( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in a *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in smallest  *t:Bound })({  *n:X#1 city( loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in smallest state  *t:Bound })({  *n:X#1 city( loc_2( smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in smallest *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in the  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in the USA  *t:Bound })({  *n:X#1 city( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in the US  *t:Bound })({  *n:X#1 city( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in the largest  *t:Bound })({  *n:X#1 city( loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in the smallest  *t:Bound })({  *n:X#1 city( loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in the *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in *n:X#2 ?  *t:Bound })({  *n:X#1 city( loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city in *n:X#2 state  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city called Rochester  *t:Bound })({  *n:X#1 city( cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city called Rochester ?  *t:Bound })({  *n:X#1 city( cityid( 'rochester', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city called Rochester *n:X#2  *t:Bound })({  *n:X#1 city( cityid( 'rochester', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city called *n:X#2  *t:Bound })({  *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city called *n:X#2 ?  *t:Bound })({  *n:X#1 city( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city named  *t:Bound })({  *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city named Springfield  *t:Bound })({  *n:X#1 city( cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city named Springfield ?  *t:Bound })({  *n:X#1 city( cityid( 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city named Springfield *n:X#2  *t:Bound })({  *n:X#1 city( cityid( 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city named *n:X#2  *t:Bound })({  *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city named *n:X#2 ?  *t:Bound })({  *n:X#1 city( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of  *t:Bound })({  *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of New  *t:Bound })({  *n:X#1 city( cityid( 'new  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of New York  *t:Bound })({  *n:X#1 city( cityid( 'new york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of New *n:X#2  *t:Bound })({  *n:X#1 city( cityid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of the  *t:Bound })({  *n:X#1 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of the largest  *t:Bound })({  *n:X#1 city( loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of the smallest  *t:Bound })({  *n:X#1 city( loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of the *n:X#2  *t:Bound })({  *n:X#1 city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of *n:X#2  *t:Bound })({  *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of *n:X#2  *t:Bound })({  *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of *n:X#2 ?  *t:Bound })({  *n:X#1 city( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of *n:X#2 US  *t:Bound })({  *n:X#1 city( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of *n:X#2 largest  *t:Bound })({  *n:X#1 city( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of *n:X#2 York  *t:Bound })({  *n:X#1 city( cityid( *n:X#2 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of *n:X#2 smallest  *t:Bound })({  *n:X#1 city( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city of *n:X#2 state  *t:Bound })({  *n:X#1 city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2  *t:Bound })({  *n:X#1 city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Oregon ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Alaska ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 California ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Arizona ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Louisiana ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Arkansas ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Alabama ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Georgia ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 ?  *t:Bound })({  *n:X#1 city( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 ?  *t:Bound })({  *n:X#1 city( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Hawaii ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Wisconsin ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Kansas ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Texas ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Washington ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 USA  *t:Bound })({  *n:X#1 city( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Michigan ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 New  *t:Bound })({  *n:X#1 city( *n:X#2 'new  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 New York  *t:Bound })({  *n:X#1 city( *n:X#2 'new york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Nebraska ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Wyoming ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Missouri ?  *t:Bound })({  *n:X#1 city( *n:X#2 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 US  *t:Bound })({  *n:X#1 city( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 states  *t:Bound })({  *n:X#1 city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 in the  *t:Bound })({  *n:X#1 city( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 largest  *t:Bound })({  *n:X#1 city( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 largest state  *t:Bound })({  *n:X#1 city( *n:X#2 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Springfield  *t:Bound })({  *n:X#1 city( *n:X#2 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 Springfield ?  *t:Bound })({  *n:X#1 city( *n:X#2 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 through which  *t:Bound })({  *n:X#1 city( *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 York  *t:Bound })({  *n:X#1 city( *n:X#2 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 York ?  *t:Bound })({  *n:X#1 city( *n:X#2 york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 a state  *t:Bound })({  *n:X#1 city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 that borders  *t:Bound })({  *n:X#1 city( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 that border  *t:Bound })({  *n:X#1 city( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 smallest  *t:Bound })({  *n:X#1 city( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 smallest state  *t:Bound })({  *n:X#1 city( *n:X#2 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 state  *t:Bound })({  *n:X#1 city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 city *n:X#2 state ?  *t:Bound })({  *n:X#1 city( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 continental  *t:Bound })({  *n:X#1 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 continental US  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 continental *n:X#2  *t:Bound })({  *n:X#1 countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Tempe  *t:Bound })({  *n:X#1 'tempe',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Tempe Arizona  *t:Bound })({  *n:X#1 'tempe', 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Tempe *n:X#2  *t:Bound })({  *n:X#1 'tempe', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 size  *t:Bound })({  *n:X#1 size(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 size of California ?  *t:Bound })({  *n:X#1 size( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 size of Florida ?  *t:Bound })({  *n:X#1 size( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 size of Texas ?  *t:Bound })({  *n:X#1 size( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 size of the largest  *t:Bound })({  *n:X#1 size( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 size of the *n:X#2  *t:Bound })({  *n:X#1 size( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 size of *n:X#2 ?  *t:Bound })({  *n:X#1 size( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 size *n:X#2  *t:Bound })({  *n:X#1 size( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 points  *t:Bound })({  *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 points of all the  *t:Bound })({  *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 points of *n:X#2  *t:Bound })({  *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 points of *n:X#2 ?  *t:Bound })({  *n:X#1 place( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 points of *n:X#2 states  *t:Bound })({  *n:X#1 place( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named  *t:Bound })({  intersection( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named  *t:Bound })({  *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named Durham  *t:Bound })({  *n:X#1 cityid( 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named Durham ?  *t:Bound })({  *n:X#1 cityid( 'durham', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named Durham *n:X#2  *t:Bound })({  *n:X#1 cityid( 'durham', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named Austin  *t:Bound })({  intersection( *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named Austin  *t:Bound })({  *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named Austin ?  *t:Bound })({  *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named Austin *n:X#2  *t:Bound })({  intersection( *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named Austin *n:X#2  *t:Bound })({  *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named Springfield  *t:Bound })({  *n:X#1 cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named Springfield ?  *t:Bound })({  *n:X#1 cityid( 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named Springfield *n:X#2  *t:Bound })({  *n:X#1 cityid( 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named *n:X#2  *t:Bound })({  intersection( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named *n:X#2  *t:Bound })({  *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 named *n:X#2 ?  *t:Bound })({  *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 inhabitants ?  *t:Bound })({  *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 inhabitants does Montgomery  *t:Bound })({  *n:X#1 'montgomery',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 dense  *t:Bound })({  *n:X#1 density_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 dense state  *t:Bound })({  *n:X#1 density_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 dense state in the  *t:Bound })({  *n:X#1 density_1( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 dense state *n:X#2  *t:Bound })({  *n:X#1 density_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 dense *n:X#2  *t:Bound })({  *n:X#1 density_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 dense *n:X#2 USA  *t:Bound })({  *n:X#1 density_1( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 dense *n:X#2 in the  *t:Bound })({  *n:X#1 density_1( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 flow  *t:Bound })({  riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 flow  *t:Bound })({  *n:X#1 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 Valley  *t:Bound })({  *n:X#1 valley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traversed  *t:Bound })({  *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traversed *n:X#2  *t:Bound })({  *n:X#1 traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 traversed *n:X#2 river  *t:Bound })({  *n:X#1 traverse_1( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 through  *t:Bound })({  traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 through which  *t:Bound })({  *n:X#1 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 through which the longest  *t:Bound })({  *n:X#1 traverse_1( longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 through which the major  *t:Bound })({  *n:X#1 traverse_1( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 through which the *n:X#2  *t:Bound })({  *n:X#1 traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with  *t:Bound })({  *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with capital  *t:Bound })({  *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with capital Des  *t:Bound })({  *n:X#1 loc_1( capital( cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with capital Austin  *t:Bound })({  *n:X#1 loc_1( capital( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with capital *n:X#2  *t:Bound })({  *n:X#1 loc_1( capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the highest  *t:Bound })({  *n:X#1 loc_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the highest elevation  *t:Bound })({  *n:X#1 loc_1( highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the highest point  *t:Bound })({  *n:X#1 loc_1( highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the highest *n:X#2  *t:Bound })({  *n:X#1 loc_1( highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the capital  *t:Bound })({  *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the capital Albany  *t:Bound })({  *n:X#1 loc_1( capital( cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the capital Des  *t:Bound })({  *n:X#1 loc_1( capital( cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the capital *n:X#2  *t:Bound })({  *n:X#1 loc_1( capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the longest  *t:Bound })({  *n:X#1 loc_1( longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the longest river  *t:Bound })({  *n:X#1 loc_1( longest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the longest *n:X#2  *t:Bound })({  *n:X#1 loc_1( longest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the lowest  *t:Bound })({  *n:X#1 loc_1( lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the lowest population  *t:Bound })({  smallest_one( population_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the lowest point  *t:Bound })({  *n:X#1 loc_1( lowest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the lowest *n:X#2  *t:Bound })({  smallest_one( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the lowest *n:X#2  *t:Bound })({  *n:X#1 loc_1( lowest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the largest  *t:Bound })({  *n:X#1 loc_1( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the largest capital  *t:Bound })({  *n:X#1 loc_1( largest( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the largest density  *t:Bound })({  largest_one( density_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the largest area  *t:Bound })({  largest_one( area_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the largest *n:X#2  *t:Bound })({  largest_one( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the largest *n:X#2  *t:Bound })({  *n:X#1 loc_1( largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the smallest area  *t:Bound })({  smallest_one( area_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the smallest *n:X#2  *t:Bound })({  smallest_one( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2  *t:Bound })({  *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 Albany  *t:Bound })({  *n:X#1 loc_1( *n:X#2 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 States  *t:Bound })({  *n:X#1 loc_1( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 Des  *t:Bound })({  *n:X#1 loc_1( *n:X#2 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 Moines  *t:Bound })({  *n:X#1 loc_1( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 USA  *t:Bound })({  *n:X#1 loc_1( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 United  *t:Bound })({  *n:X#1 loc_1( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 capital  *t:Bound })({  *n:X#1 loc_1( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 US  *t:Bound })({  *n:X#1 loc_1( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 river  *t:Bound })({  *n:X#1 loc_1( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 city  *t:Bound })({  *n:X#1 loc_1( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 elevation  *t:Bound })({  *n:X#1 loc_1( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with the *n:X#2 point  *t:Bound })({  *n:X#1 loc_1( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with *n:X#2  *t:Bound })({  *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with *n:X#2 Des  *t:Bound })({  *n:X#1 loc_1( *n:X#2 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with *n:X#2 ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with *n:X#2 Moines  *t:Bound })({  *n:X#1 loc_1( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with *n:X#2 Moines ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 with *n:X#2 Austin  *t:Bound })({  *n:X#1 loc_1( *n:X#2 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of  *t:Bound })({  *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of  *t:Bound })({  *n:X#1 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Death  *t:Bound })({  *n:X#1 placeid( 'death  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Death Valley  *t:Bound })({  *n:X#1 placeid( 'death valley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Death *n:X#2  *t:Bound })({  *n:X#1 placeid( 'death *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Oregon ?  *t:Bound })({  *n:X#1 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Alaska ?  *t:Bound })({  *n:X#1 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of California ?  *t:Bound })({  *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Arizona ?  *t:Bound })({  *n:X#1 stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Delaware ?  *t:Bound })({  *n:X#1 stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Louisiana ?  *t:Bound })({  *n:X#1 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Denver  *t:Bound })({  *n:X#1 cityid( 'denver',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Denver ?  *t:Bound })({  *n:X#1 cityid( 'denver', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Denver *n:X#2  *t:Bound })({  *n:X#1 cityid( 'denver', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Boulder  *t:Bound })({  *n:X#1 cityid( 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Boulder ?  *t:Bound })({  *n:X#1 cityid( 'boulder', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Boulder *n:X#2  *t:Bound })({  *n:X#1 cityid( 'boulder', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Iowa ?  *t:Bound })({  *n:X#1 loc_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Iowa ?  *t:Bound })({  *n:X#1 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Maryland ?  *t:Bound })({  *n:X#1 stateid( 'maryland'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Alabama ?  *t:Bound })({  *n:X#1 stateid( 'alabama'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Indiana ?  *t:Bound })({  *n:X#1 stateid( 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Colorado ?  *t:Bound })({  *n:X#1 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Georgia ?  *t:Bound })({  *n:X#1 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Atlanta  *t:Bound })({  *n:X#1 cityid( 'atlanta',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Atlanta ?  *t:Bound })({  *n:X#1 cityid( 'atlanta', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Atlanta GA  *t:Bound })({  *n:X#1 cityid( 'atlanta', 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Atlanta *n:X#2  *t:Bound })({  *n:X#1 cityid( 'atlanta', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Hawaii ?  *t:Bound })({  *n:X#1 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Mount  *t:Bound })({  *n:X#1 placeid( 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Mount McKinley  *t:Bound })({  *n:X#1 placeid( 'mount mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Mount *n:X#2  *t:Bound })({  *n:X#1 placeid( 'mount *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Rhode Island ?  *t:Bound })({  *n:X#1 stateid( 'rhode island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Rhode *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'rhode *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Austin  *t:Bound })({  *n:X#1 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Austin ?  *t:Bound })({  *n:X#1 cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Austin Texas  *t:Bound })({  *n:X#1 cityid( 'austin', 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Austin *n:X#2  *t:Bound })({  *n:X#1 cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Boston  *t:Bound })({  *n:X#1 cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Boston Massachusetts  *t:Bound })({  *n:X#1 cityid( 'boston', 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Boston *n:X#2  *t:Bound })({  *n:X#1 cityid( 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Minnesota ?  *t:Bound })({  *n:X#1 stateid( 'minnesota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of North Dakota ?  *t:Bound })({  *n:X#1 stateid( 'north dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of North *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'north *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Erie  *t:Bound })({  *n:X#1 cityid( 'erie',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Erie Pennsylvania  *t:Bound })({  *n:X#1 cityid( 'erie', 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Erie *n:X#2  *t:Bound })({  *n:X#1 cityid( 'erie', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Florida ?  *t:Bound })({  *n:X#1 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Houston  *t:Bound })({  *n:X#1 cityid( 'houston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Houston ?  *t:Bound })({  *n:X#1 cityid( 'houston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Houston *n:X#2  *t:Bound })({  *n:X#1 cityid( 'houston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Wisconsin ?  *t:Bound })({  *n:X#1 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Seattle  *t:Bound })({  *n:X#1 cityid( 'seattle',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Seattle ?  *t:Bound })({  *n:X#1 cityid( 'seattle', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Seattle Washington  *t:Bound })({  *n:X#1 cityid( 'seattle', 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Seattle *n:X#2  *t:Bound })({  *n:X#1 cityid( 'seattle', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Maine ?  *t:Bound })({  *n:X#1 stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Idaho ?  *t:Bound })({  *n:X#1 stateid( 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Kansas ?  *t:Bound })({  *n:X#1 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Dallas  *t:Bound })({  *n:X#1 cityid( 'dallas',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Dallas ?  *t:Bound })({  *n:X#1 cityid( 'dallas', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Dallas *n:X#2  *t:Bound })({  *n:X#1 cityid( 'dallas', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Tucson  *t:Bound })({  *n:X#1 cityid( 'tucson',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Tucson ?  *t:Bound })({  *n:X#1 cityid( 'tucson', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Tucson *n:X#2  *t:Bound })({  *n:X#1 cityid( 'tucson', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Utah ?  *t:Bound })({  *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Texas ?  *t:Bound })({  *n:X#1 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Montana ?  *t:Bound })({  *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Illinois ?  *t:Bound })({  *n:X#1 stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Massachusetts ?  *t:Bound })({  *n:X#1 stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Washington  *t:Bound })({  *n:X#1 cityid( 'washington',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Washington ?  *t:Bound })({  *n:X#1 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Washington DC  *t:Bound })({  *n:X#1 cityid( 'washington', 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Washington *n:X#2  *t:Bound })({  *n:X#1 cityid( 'washington', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of USA  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Pennsylvania ?  *t:Bound })({  *n:X#1 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Mississippi ?  *t:Bound })({  *n:X#1 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Michigan ?  *t:Bound })({  *n:X#1 stateid( 'michigan'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New  *t:Bound })({  *n:X#1 cityid( 'new  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New  *t:Bound })({  *n:X#1 city( cityid( 'new  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New Mexico ?  *t:Bound })({  *n:X#1 stateid( 'new mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New Jersey ?  *t:Bound })({  *n:X#1 stateid( 'new jersey'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New Hampshire ?  *t:Bound })({  *n:X#1 stateid( 'new hampshire'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New York  *t:Bound })({  *n:X#1 cityid( 'new york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New York ?  *t:Bound })({  *n:X#1 cityid( 'new york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New York ?  *t:Bound })({  *n:X#1 stateid( 'new york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New York City  *t:Bound })({  *n:X#1 city( cityid( 'new york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New York *n:X#2  *t:Bound })({  *n:X#1 cityid( 'new york', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New *n:X#2  *t:Bound })({  *n:X#1 cityid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New *n:X#2  *t:Bound })({  *n:X#1 city( cityid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New *n:X#2 ?  *t:Bound })({  *n:X#1 cityid( 'new *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of New *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'new *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Wyoming ?  *t:Bound })({  *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Missouri ?  *t:Bound })({  *n:X#1 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Sacramento  *t:Bound })({  *n:X#1 cityid( 'sacramento',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Sacramento ?  *t:Bound })({  *n:X#1 cityid( 'sacramento', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Sacramento *n:X#2  *t:Bound })({  *n:X#1 cityid( 'sacramento', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of San  *t:Bound })({  *n:X#1 cityid( 'san  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of San Antonio  *t:Bound })({  *n:X#1 cityid( 'san antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of San Antonio ?  *t:Bound })({  *n:X#1 cityid( 'san antonio', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of San Antonio *n:X#2  *t:Bound })({  *n:X#1 cityid( 'san antonio', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of San Francisco  *t:Bound })({  *n:X#1 cityid( 'san francisco',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of San Francisco ?  *t:Bound })({  *n:X#1 cityid( 'san francisco', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of San Francisco *n:X#2  *t:Bound })({  *n:X#1 cityid( 'san francisco', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of San *n:X#2  *t:Bound })({  *n:X#1 cityid( 'san *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of San *n:X#2 ?  *t:Bound })({  *n:X#1 cityid( 'san *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of South Carolina ?  *t:Bound })({  *n:X#1 stateid( 'south carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of South Dakota ?  *t:Bound })({  *n:X#1 stateid( 'south dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of South *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( 'south *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Portland  *t:Bound })({  *n:X#1 cityid( 'portland',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Portland Maine  *t:Bound })({  *n:X#1 cityid( 'portland', 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Portland *n:X#2  *t:Bound })({  *n:X#1 cityid( 'portland', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of US  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Ohio ?  *t:Bound })({  *n:X#1 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of states  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of states that have  *t:Bound })({  *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of states that *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of states which border  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of states which *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Vermont ?  *t:Bound })({  *n:X#1 stateid( 'vermont'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Springfield  *t:Bound })({  *n:X#1 cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Springfield Missouri  *t:Bound })({  *n:X#1 cityid( 'springfield', 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Springfield South Dakota  *t:Bound })({  *n:X#1 cityid( 'springfield', 'sd'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Springfield *n:X#2  *t:Bound })({  *n:X#1 cityid( 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of citizens  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Tempe  *t:Bound })({  *n:X#1 cityid( 'tempe',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Tempe Arizona  *t:Bound })({  *n:X#1 cityid( 'tempe', 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of Tempe *n:X#2  *t:Bound })({  *n:X#1 cityid( 'tempe', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of all  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of all states  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of all states *n:X#2  *t:Bound })({  *n:X#1 loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of all the  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of all the states  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of all the major  *t:Bound })({  *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of all the *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of all *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of which  *t:Bound })({  loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of which state  *t:Bound })({  state( loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of which *n:X#2  *t:Bound })({  *n:X#2 loc_1( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the Colorado river  *t:Bound })({  *n:X#1 river( riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the Colorado *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the highest  *t:Bound })({  *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the highest point  *t:Bound })({  *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the highest *n:X#2  *t:Bound })({  *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the USA  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the United  *t:Bound })({  *n:X#1 loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the United States  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the United *n:X#2  *t:Bound })({  *n:X#1 loc_2( countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the Mississippi river  *t:Bound })({  *n:X#1 river( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the Mississippi *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the longest  *t:Bound })({  *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the longest river  *t:Bound })({  *n:X#1 longest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the longest *n:X#2  *t:Bound })({  *n:X#1 longest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the US  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the US  *t:Bound })({  *n:X#1 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the states  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the states  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the states ?  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the states *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the largest  *t:Bound })({  *n:X#1 loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the largest  *t:Bound })({  *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the largest state  *t:Bound })({  *n:X#1 loc_2( largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the largest state  *t:Bound })({  *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the largest *n:X#2  *t:Bound })({  *n:X#1 loc_2( largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the largest *n:X#2  *t:Bound })({  *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the major  *t:Bound })({  *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the major cities  *t:Bound })({  *n:X#1 major( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the major cities  *t:Bound })({  *n:X#1 major( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the major *n:X#2  *t:Bound })({  *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the major *n:X#2  *t:Bound })({  *n:X#1 major( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the smallest  *t:Bound })({  *n:X#1 loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the smallest  *t:Bound })({  *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the smallest state  *t:Bound })({  *n:X#1 loc_2( smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the smallest state  *t:Bound })({  *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the smallest *n:X#2  *t:Bound })({  *n:X#1 loc_2( smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the smallest *n:X#2  *t:Bound })({  *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the state  *t:Bound })({  *n:X#1 loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the state with  *t:Bound })({  *n:X#1 loc_2( state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the state *n:X#2  *t:Bound })({  *n:X#1 loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the state *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the state *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 Albany  *t:Bound })({  *n:X#1 *n:X#2 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 States  *t:Bound })({  *n:X#1 loc_2( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 USA  *t:Bound })({  *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 capital  *t:Bound })({  *n:X#1 loc_2( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 US  *t:Bound })({  *n:X#1 loc_2( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 states  *t:Bound })({  *n:X#1 loc_2( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 states  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 in  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 cities  *t:Bound })({  *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 cities  *t:Bound })({  *n:X#1 *n:X#2 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 river  *t:Bound })({  *n:X#1 loc_2( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 river  *t:Bound })({  *n:X#1 river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 river  *t:Bound })({  *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 city  *t:Bound })({  *n:X#1 loc_2( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 with  *t:Bound })({  *n:X#1 loc_2( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 elevation  *t:Bound })({  *n:X#1 loc_2( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 point  *t:Bound })({  *n:X#1 loc_2( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 point  *t:Bound })({  *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 state  *t:Bound })({  *n:X#1 loc_2( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of the *n:X#2 state  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2  *t:Bound })({  *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2  *t:Bound })({  *n:X#1 city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 States  *t:Bound })({  *n:X#1 *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Island ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 island'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 California .  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Arizona  *t:Bound })({  *n:X#1 cityid( *n:X#2 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Iowa ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Mexico ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 mexico'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Antonio  *t:Bound })({  *n:X#1 cityid( *n:X#2 antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Antonio ?  *t:Bound })({  *n:X#1 cityid( *n:X#2 antonio', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Carolina ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 carolina'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 ?  *t:Bound })({  *n:X#1 cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 ?  *t:Bound })({  *n:X#1 loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 ?  *t:Bound })({  *n:X#1 city( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Jersey ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 jersey'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 McKinley  *t:Bound })({  *n:X#1 *n:X#2 mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Dakota ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 dakota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 GA  *t:Bound })({  *n:X#1 cityid( *n:X#2 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Francisco  *t:Bound })({  *n:X#1 cityid( *n:X#2 francisco',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Francisco ?  *t:Bound })({  *n:X#1 cityid( *n:X#2 francisco', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 DC  *t:Bound })({  *n:X#1 cityid( *n:X#2 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Maine  *t:Bound })({  *n:X#1 cityid( *n:X#2 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Texas  *t:Bound })({  *n:X#1 cityid( *n:X#2 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Texas ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Hampshire ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 hampshire'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Massachusetts  *t:Bound })({  *n:X#1 cityid( *n:X#2 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Washington  *t:Bound })({  *n:X#1 cityid( *n:X#2 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 USA  *t:Bound })({  *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 United  *t:Bound })({  *n:X#1 *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 United States  *t:Bound })({  *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 capital  *t:Bound })({  *n:X#1 *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 capital city  *t:Bound })({  *n:X#1 *n:X#2 capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Pennsylvania  *t:Bound })({  *n:X#1 cityid( *n:X#2 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Mississippi ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Missouri  *t:Bound })({  *n:X#1 cityid( *n:X#2 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Missouri ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 South Dakota  *t:Bound })({  *n:X#1 cityid( *n:X#2 'sd'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 US  *t:Bound })({  *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 states  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 states ?  *t:Bound })({  *n:X#1 *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 in the  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 largest  *t:Bound })({  *n:X#1 *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 largest state  *t:Bound })({  *n:X#1 *n:X#2 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 cities  *t:Bound })({  *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 cities named  *t:Bound })({  *n:X#1 *n:X#2 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 river  *t:Bound })({  *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 river ?  *t:Bound })({  *n:X#1 *n:X#2 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 major cities  *t:Bound })({  *n:X#1 major( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 city  *t:Bound })({  *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 named  *t:Bound })({  *n:X#1 *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 Valley  *t:Bound })({  *n:X#1 placeid( *n:X#2 valley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 through which  *t:Bound })({  *n:X#1 *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 with  *t:Bound })({  *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 York  *t:Bound })({  *n:X#1 cityid( *n:X#2 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 York ?  *t:Bound })({  *n:X#1 cityid( *n:X#2 york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 York ?  *t:Bound })({  *n:X#1 stateid( *n:X#2 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 York City  *t:Bound })({  *n:X#1 city( cityid( *n:X#2 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 elevation  *t:Bound })({  *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 elevation ?  *t:Bound })({  *n:X#1 *n:X#2 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 that borders  *t:Bound })({  *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 that have  *t:Bound })({  *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 which border  *t:Bound })({  *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 point  *t:Bound })({  *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 point ?  *t:Bound })({  *n:X#1 *n:X#2 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 smallest  *t:Bound })({  *n:X#1 *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 smallest state  *t:Bound })({  *n:X#1 *n:X#2 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 state  *t:Bound })({  state( *n:X#2 *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 state  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 state ?  *t:Bound })({  *n:X#1 *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 state with  *t:Bound })({  *n:X#1 *n:X#2 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 the highest  *t:Bound })({  *n:X#1 *n:X#2 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 the longest  *t:Bound })({  *n:X#1 *n:X#2 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 the lowest  *t:Bound })({  *n:X#1 *n:X#2 lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 the largest  *t:Bound })({  *n:X#1 *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 of *n:X#2 the state  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 large  *t:Bound })({  *n:X#1 size(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 large is Alaska ?  *t:Bound })({  *n:X#1 size( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 large is Texas ?  *t:Bound })({  *n:X#1 size( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 large is *n:X#2 ?  *t:Bound })({  *n:X#1 size( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 large *n:X#2  *t:Bound })({  *n:X#1 size( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do  *t:Bound })({  exclude( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do not  *t:Bound })({  exclude( *n:X#1 all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do not have  *t:Bound })({  exclude( *n:X#1 all , loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do not traverse the  *t:Bound })({  exclude( *n:X#1 all , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do not traverse *n:X#2  *t:Bound })({  exclude( *n:X#1 *n:X#2 , traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do not *n:X#2  *t:Bound })({  exclude( *n:X#1 all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do not *n:X#2 the  *t:Bound })({  exclude( *n:X#1 all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2  *t:Bound })({  exclude( *n:X#1 all *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2  *t:Bound })({  exclude( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2 Albany  *t:Bound })({  exclude( *n:X#1 *n:X#2 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2 ?  *t:Bound })({  exclude( *n:X#1 all *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2 have  *t:Bound })({  exclude( *n:X#1 all *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2 traverse the  *t:Bound })({  exclude( *n:X#1 all *n:X#2 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2 with  *t:Bound })({  exclude( *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2 rivers  *t:Bound })({  exclude( *n:X#1 all *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2 state  *t:Bound })({  exclude( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2 state with  *t:Bound })({  exclude( *n:X#1 *n:X#2 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2 the  *t:Bound })({  exclude( *n:X#1 all *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2 the capital  *t:Bound })({  exclude( *n:X#1 *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 do *n:X#2 the state  *t:Bound })({  exclude( *n:X#1 all *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York  *t:Bound })({  *n:X#1 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York  *t:Bound })({  *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York ?  *t:Bound })({  stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York ?  *t:Bound })({  *n:X#1 york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York City  *t:Bound })({  *n:X#1 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York City ?  *t:Bound })({  *n:X#1 york', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York City *n:X#2  *t:Bound })({  *n:X#1 york', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York state ?  *t:Bound })({  state( stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York state *n:X#2  *t:Bound })({  state( *n:X#2 *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York *n:X#2  *t:Bound })({  *n:X#1 york', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 York *n:X#2 ?  *t:Bound })({  *n:X#2 stateid( *n:X#1 york'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 than what  *t:Bound })({  *n:X#1 low_point_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 than what *n:X#2  *t:Bound })({  *n:X#1 low_point_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 than the Red  *t:Bound })({  longer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longer  *t:Bound })({  *n:X#1 'red'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longer than the Red  *t:Bound })({  longer( *n:X#1 'red'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 longer *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 'red'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation  *t:Bound })({  *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation  *t:Bound })({  *n:X#1 elevation_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation ?  *t:Bound })({  *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation in  *t:Bound })({  *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation in Texas ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation in Texas *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation in Pennsylvania ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation in Pennsylvania *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation in the  *t:Bound })({  *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation in the United  *t:Bound })({  *n:X#1 place( loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation in the *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation in *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation in *n:X#2 ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation of Death  *t:Bound })({  *n:X#1 elevation_1( placeid( 'death  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation of Death Valley  *t:Bound })({  *n:X#1 elevation_1( placeid( 'death valley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation of Death *n:X#2  *t:Bound })({  *n:X#1 elevation_1( placeid( 'death *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation of the highest  *t:Bound })({  *n:X#1 elevation_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation of the *n:X#2  *t:Bound })({  *n:X#1 elevation_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation of *n:X#2  *t:Bound })({  *n:X#1 elevation_1( placeid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation of *n:X#2 Valley  *t:Bound })({  *n:X#1 elevation_1( placeid( *n:X#2 valley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation *n:X#2  *t:Bound })({  *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation *n:X#2 States  *t:Bound })({  *n:X#1 place( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation *n:X#2 Texas ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation *n:X#2 United  *t:Bound })({  *n:X#1 place( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation *n:X#2 United States  *t:Bound })({  *n:X#1 place( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 elevation *n:X#2 Pennsylvania ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'pennsylvania'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 a state  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 a state with a  *t:Bound })({  *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 a state that borders  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 a state *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 a *n:X#2 Tennessee ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 a *n:X#2 Indiana ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 a *n:X#2 Texas ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 a *n:X#2 with a  *t:Bound })({  *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 a *n:X#2 that borders  *t:Bound })({  *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers  *t:Bound })({  river( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers  *t:Bound })({  *n:X#1 traverse_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers  *t:Bound })({  *n:X#1 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers  *t:Bound })({  *n:X#1 intersection( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers are  *t:Bound })({  river( riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers are  *t:Bound })({  *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers are in the  *t:Bound })({  *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers are found *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers are there in  *t:Bound })({  *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers are called  *t:Bound })({  *n:X#1 river( riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers are called Colorado  *t:Bound })({  *n:X#1 river( riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers are called *n:X#2  *t:Bound })({  *n:X#1 river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers are *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers ?  *t:Bound })({  *n:X#1 traverse_1( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers ?  *t:Bound })({  *n:X#1 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in  *t:Bound })({  *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in  *t:Bound })({  *n:X#1 intersection( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in Arkansas .  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in Arkansas *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in Florida .  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in Florida *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in Texas ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in Texas *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in Washington ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in Washington *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in Ohio ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in Ohio *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in the  *t:Bound })({  *n:X#1 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in the US  *t:Bound })({  *n:X#1 river( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in the *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in *n:X#2  *t:Bound })({  *n:X#1 river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in *n:X#2 .  *t:Bound })({  *n:X#1 river( loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers in *n:X#2 ?  *t:Bound })({  *n:X#1 river( loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers cross  *t:Bound })({  *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers cross Ohio ?  *t:Bound })({  *n:X#1 river( traverse_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers cross Ohio *n:X#2  *t:Bound })({  *n:X#1 river( traverse_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers cross *n:X#2  *t:Bound })({  *n:X#1 river( traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers cross *n:X#2 ?  *t:Bound })({  *n:X#1 river( traverse_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers of Montana ?  *t:Bound })({  river( *n:X#1 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers of *n:X#2 ?  *t:Bound })({  river( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers do  *t:Bound })({  *n:X#1 exclude( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers do *n:X#2  *t:Bound })({  *n:X#1 exclude( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers do *n:X#2 with  *t:Bound })({  *n:X#1 exclude( river( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers do *n:X#2 state  *t:Bound })({  *n:X#1 exclude( river( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers do *n:X#2 the  *t:Bound })({  *n:X#1 exclude( river( all *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers run through  *t:Bound })({  *n:X#1 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers run through *n:X#2  *t:Bound })({  *n:X#1 river( traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2  *t:Bound })({  river( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2  *t:Bound })({  river( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2  *t:Bound })({  *n:X#1 traverse_1( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2  *t:Bound })({  *n:X#1 intersection( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 bordering  *t:Bound })({  *n:X#1 river( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 Arkansas .  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 Colorado  *t:Bound })({  *n:X#1 river( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 Colorado ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 Florida .  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 Idaho ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 Texas ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 Washington ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 US  *t:Bound })({  *n:X#1 river( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 Ohio ?  *t:Bound })({  *n:X#1 river( *n:X#2 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 with  *t:Bound })({  *n:X#1 river( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 point  *t:Bound })({  *n:X#1 river( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 state  *t:Bound })({  *n:X#1 river( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 state with  *t:Bound })({  *n:X#1 river( *n:X#2 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 the highest  *t:Bound })({  *n:X#1 river( *n:X#2 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 rivers *n:X#2 the states  *t:Bound })({  *n:X#1 river( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 kilometers  *t:Bound })({  area_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 kilometers in the US  *t:Bound })({  area_1( *n:X#1 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 kilometers in the *n:X#2  *t:Bound })({  area_1( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain  *t:Bound })({  *n:X#1 mountain(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in  *t:Bound })({  *n:X#1 mountain( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in Alaska ?  *t:Bound })({  *n:X#1 mountain( loc_2( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in Alaska *n:X#2  *t:Bound })({  *n:X#1 mountain( loc_2( *n:X#2 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in America  *t:Bound })({  *n:X#1 mountain( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in Texas ?  *t:Bound })({  *n:X#1 mountain( loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in Texas *n:X#2  *t:Bound })({  *n:X#1 mountain( loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in US  *t:Bound })({  *n:X#1 mountain( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in the  *t:Bound })({  *n:X#1 mountain( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in the United  *t:Bound })({  *n:X#1 mountain( loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in the US  *t:Bound })({  *n:X#1 mountain( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in the *n:X#2  *t:Bound })({  *n:X#1 mountain( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in *n:X#2  *t:Bound })({  *n:X#1 mountain( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain in *n:X#2 ?  *t:Bound })({  *n:X#1 mountain( loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain *n:X#2  *t:Bound })({  *n:X#1 mountain( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain *n:X#2 States  *t:Bound })({  *n:X#1 mountain( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain *n:X#2 Alaska ?  *t:Bound })({  *n:X#1 mountain( *n:X#2 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain *n:X#2 America  *t:Bound })({  *n:X#1 mountain( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain *n:X#2 Texas ?  *t:Bound })({  *n:X#1 mountain( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain *n:X#2 United  *t:Bound })({  *n:X#1 mountain( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain *n:X#2 United States  *t:Bound })({  *n:X#1 mountain( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 mountain *n:X#2 US  *t:Bound })({  *n:X#1 mountain( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 all the states  *t:Bound })({  *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 all the major  *t:Bound })({  *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 all the major lakes  *t:Bound })({  *n:X#1 major( lake(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 all the major *n:X#2  *t:Bound })({  *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 all the *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 all the *n:X#2 lakes  *t:Bound })({  *n:X#1 *n:X#2 lake(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 all the *n:X#2 US  *t:Bound })({  *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 number  *t:Bound })({  *n:X#1 count(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 number of states  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 number of states ?  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 number of states *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 number of *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 number *n:X#2  *t:Bound })({  *n:X#1 count( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 much population  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 much population does *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 neighboring states  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 neighboring states *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 neighboring states *n:X#2 ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 run  *t:Bound })({  riverid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 run  *t:Bound })({  *n:X#1 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 run ?  *t:Bound })({  stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 run through  *t:Bound })({  *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 run through ?  *t:Bound })({  *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 run through Texas ?  *t:Bound })({  *n:X#1 traverse_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 run through Texas *n:X#2  *t:Bound })({  *n:X#1 traverse_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 run through the states  *t:Bound })({  *n:X#1 traverse_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 run through the *n:X#2  *t:Bound })({  *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 run through *n:X#2  *t:Bound })({  *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 run through *n:X#2 ?  *t:Bound })({  *n:X#1 traverse_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population ?  *t:Bound })({  *n:X#1 population_1( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population densities of each  *t:Bound })({  *n:X#1 density_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population density  *t:Bound })({  *n:X#1 density_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population density *n:X#2  *t:Bound })({  *n:X#1 density_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population in  *t:Bound })({  *n:X#1 population_1( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population in Boston  *t:Bound })({  *n:X#1 population_1( cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population in Boston ?  *t:Bound })({  *n:X#1 population_1( cityid( 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population in Boston *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population in *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population in *n:X#2 ?  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of  *t:Bound })({  *n:X#1 population_1( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of  *t:Bound })({  *n:X#1 population_1( city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Oregon ?  *t:Bound })({  *n:X#1 population_1( stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Alaska ?  *t:Bound })({  *n:X#1 population_1( stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of California ?  *t:Bound })({  *n:X#1 population_1( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Arizona ?  *t:Bound })({  *n:X#1 population_1( stateid( 'arizona'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Denver  *t:Bound })({  *n:X#1 population_1( cityid( 'denver',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Denver ?  *t:Bound })({  *n:X#1 population_1( cityid( 'denver', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Denver *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'denver', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Boulder  *t:Bound })({  *n:X#1 population_1( cityid( 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Boulder ?  *t:Bound })({  *n:X#1 population_1( cityid( 'boulder', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Boulder *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'boulder', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Maryland ?  *t:Bound })({  *n:X#1 population_1( stateid( 'maryland'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Atlanta  *t:Bound })({  *n:X#1 population_1( cityid( 'atlanta',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Atlanta ?  *t:Bound })({  *n:X#1 population_1( cityid( 'atlanta', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Atlanta GA  *t:Bound })({  *n:X#1 population_1( cityid( 'atlanta', 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Atlanta *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'atlanta', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Hawaii ?  *t:Bound })({  *n:X#1 population_1( stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Austin  *t:Bound })({  *n:X#1 population_1( cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Austin ?  *t:Bound })({  *n:X#1 population_1( cityid( 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Austin Texas  *t:Bound })({  *n:X#1 population_1( cityid( 'austin', 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Austin *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'austin', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Boston  *t:Bound })({  *n:X#1 population_1( cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Boston Massachusetts  *t:Bound })({  *n:X#1 population_1( cityid( 'boston', 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Boston *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'boston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Minnesota ?  *t:Bound })({  *n:X#1 population_1( stateid( 'minnesota'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Erie  *t:Bound })({  *n:X#1 population_1( cityid( 'erie',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Erie Pennsylvania  *t:Bound })({  *n:X#1 population_1( cityid( 'erie', 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Erie *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'erie', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Houston  *t:Bound })({  *n:X#1 population_1( cityid( 'houston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Houston ?  *t:Bound })({  *n:X#1 population_1( cityid( 'houston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Houston *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'houston', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Seattle  *t:Bound })({  *n:X#1 population_1( cityid( 'seattle',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Seattle ?  *t:Bound })({  *n:X#1 population_1( cityid( 'seattle', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Seattle Washington  *t:Bound })({  *n:X#1 population_1( cityid( 'seattle', 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Seattle *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'seattle', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Maine ?  *t:Bound })({  *n:X#1 population_1( stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Idaho ?  *t:Bound })({  *n:X#1 population_1( stateid( 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Dallas  *t:Bound })({  *n:X#1 population_1( cityid( 'dallas',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Dallas ?  *t:Bound })({  *n:X#1 population_1( cityid( 'dallas', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Dallas *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'dallas', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Tucson  *t:Bound })({  *n:X#1 population_1( cityid( 'tucson',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Tucson ?  *t:Bound })({  *n:X#1 population_1( cityid( 'tucson', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Tucson *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'tucson', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Utah ?  *t:Bound })({  *n:X#1 population_1( stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Texas ?  *t:Bound })({  *n:X#1 population_1( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Montana ?  *t:Bound })({  *n:X#1 population_1( stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Illinois ?  *t:Bound })({  *n:X#1 population_1( stateid( 'illinois'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Washington  *t:Bound })({  *n:X#1 population_1( cityid( 'washington',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Washington ?  *t:Bound })({  *n:X#1 population_1( stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Washington DC  *t:Bound })({  *n:X#1 population_1( cityid( 'washington', 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Washington *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'washington', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Mississippi ?  *t:Bound })({  *n:X#1 population_1( stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of New  *t:Bound })({  *n:X#1 population_1( city( cityid( 'new  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Sacramento  *t:Bound })({  *n:X#1 population_1( cityid( 'sacramento',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Sacramento ?  *t:Bound })({  *n:X#1 population_1( cityid( 'sacramento', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Sacramento *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'sacramento', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of San  *t:Bound })({  *n:X#1 population_1( cityid( 'san  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of San Antonio  *t:Bound })({  *n:X#1 population_1( cityid( 'san antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of San *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'san *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Portland  *t:Bound })({  *n:X#1 population_1( cityid( 'portland',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Portland Maine  *t:Bound })({  *n:X#1 population_1( cityid( 'portland', 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Portland *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'portland', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Springfield  *t:Bound })({  *n:X#1 population_1( cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Springfield Missouri  *t:Bound })({  *n:X#1 population_1( cityid( 'springfield', 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Springfield *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'springfield', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Tempe  *t:Bound })({  *n:X#1 population_1( cityid( 'tempe',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Tempe Arizona  *t:Bound })({  *n:X#1 population_1( cityid( 'tempe', 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of Tempe *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( 'tempe', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of the capital  *t:Bound })({  *n:X#1 population_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of the states  *t:Bound })({  *n:X#1 population_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of the largest  *t:Bound })({  *n:X#1 population_1( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of the major  *t:Bound })({  *n:X#1 population_1( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of the *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2  *t:Bound })({  *n:X#1 population_1( city( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 Arizona  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 Antonio  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 ?  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 ?  *t:Bound })({  *n:X#1 population_1( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 GA  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 DC  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 Maine  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 Texas  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 Massachusetts  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 Washington  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 Pennsylvania  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population of *n:X#2 Missouri  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2  *t:Bound })({  *n:X#1 population_1( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2  *t:Bound })({  *n:X#1 population_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Arizona  *t:Bound })({  *n:X#1 population_1( *n:X#2 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Denver  *t:Bound })({  *n:X#1 population_1( *n:X#2 'denver',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Denver ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 'denver', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Boulder  *t:Bound })({  *n:X#1 population_1( *n:X#2 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Boulder ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 'boulder', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Antonio  *t:Bound })({  *n:X#1 population_1( *n:X#2 antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Antonio ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 antonio', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 ?  *t:Bound })({  *n:X#1 population_1( city( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Atlanta  *t:Bound })({  *n:X#1 population_1( *n:X#2 'atlanta',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Atlanta ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 'atlanta', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Atlanta GA  *t:Bound })({  *n:X#1 population_1( *n:X#2 'atlanta', 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Austin  *t:Bound })({  *n:X#1 population_1( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Austin ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Austin Texas  *t:Bound })({  *n:X#1 population_1( *n:X#2 'austin', 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Boston  *t:Bound })({  *n:X#1 population_1( *n:X#2 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Boston ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Boston Massachusetts  *t:Bound })({  *n:X#1 population_1( *n:X#2 'boston', 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Erie  *t:Bound })({  *n:X#1 population_1( *n:X#2 'erie',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Erie Pennsylvania  *t:Bound })({  *n:X#1 population_1( *n:X#2 'erie', 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 GA  *t:Bound })({  *n:X#1 population_1( *n:X#2 'ga'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Houston  *t:Bound })({  *n:X#1 population_1( *n:X#2 'houston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Houston ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 'houston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 DC  *t:Bound })({  *n:X#1 population_1( *n:X#2 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Seattle  *t:Bound })({  *n:X#1 population_1( *n:X#2 'seattle',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Seattle ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 'seattle', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Seattle Washington  *t:Bound })({  *n:X#1 population_1( *n:X#2 'seattle', 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Maine  *t:Bound })({  *n:X#1 population_1( *n:X#2 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Dallas  *t:Bound })({  *n:X#1 population_1( *n:X#2 'dallas',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Dallas ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 'dallas', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Tucson  *t:Bound })({  *n:X#1 population_1( *n:X#2 'tucson',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Tucson ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 'tucson', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Texas  *t:Bound })({  *n:X#1 population_1( *n:X#2 'tx'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Massachusetts  *t:Bound })({  *n:X#1 population_1( *n:X#2 'ma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Washington  *t:Bound })({  *n:X#1 population_1( *n:X#2 'washington',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Washington  *t:Bound })({  *n:X#1 population_1( *n:X#2 'wa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Washington DC  *t:Bound })({  *n:X#1 population_1( *n:X#2 'washington', 'dc'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Pennsylvania  *t:Bound })({  *n:X#1 population_1( *n:X#2 'pa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 New  *t:Bound })({  *n:X#1 population_1( city( *n:X#2 'new  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Missouri  *t:Bound })({  *n:X#1 population_1( *n:X#2 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Sacramento  *t:Bound })({  *n:X#1 population_1( *n:X#2 'sacramento',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Sacramento ?  *t:Bound })({  *n:X#1 population_1( *n:X#2 'sacramento', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 San  *t:Bound })({  *n:X#1 population_1( *n:X#2 'san  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 San Antonio  *t:Bound })({  *n:X#1 population_1( *n:X#2 'san antonio',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 South Dakota  *t:Bound })({  *n:X#1 population_1( *n:X#2 'sd'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Portland  *t:Bound })({  *n:X#1 population_1( *n:X#2 'portland',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Portland Maine  *t:Bound })({  *n:X#1 population_1( *n:X#2 'portland', 'me'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Springfield  *t:Bound })({  *n:X#1 population_1( *n:X#2 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Springfield Missouri  *t:Bound })({  *n:X#1 population_1( *n:X#2 'springfield', 'mo'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Tempe  *t:Bound })({  *n:X#1 population_1( *n:X#2 'tempe',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 Tempe Arizona  *t:Bound })({  *n:X#1 population_1( *n:X#2 'tempe', 'az'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 population *n:X#2 York City  *t:Bound })({  *n:X#1 population_1( city( *n:X#2 york',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest  *t:Bound })({  *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest mountain  *t:Bound })({  *n:X#1 highest( mountain(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest mountain in  *t:Bound })({  *n:X#1 highest( mountain( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest mountain in the  *t:Bound })({  *n:X#1 highest( mountain( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest mountain in *n:X#2  *t:Bound })({  *n:X#1 highest( mountain( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest mountain *n:X#2  *t:Bound })({  *n:X#1 highest( mountain( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest mountain *n:X#2 States  *t:Bound })({  *n:X#1 highest( mountain( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest mountain *n:X#2 United  *t:Bound })({  *n:X#1 highest( mountain( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest *n:X#2  *t:Bound })({  *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest *n:X#2 States  *t:Bound })({  *n:X#1 highest( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest *n:X#2 America  *t:Bound })({  *n:X#1 highest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest *n:X#2 United  *t:Bound })({  *n:X#1 highest( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest *n:X#2 United States  *t:Bound })({  *n:X#1 highest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest *n:X#2 in  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 tallest *n:X#2 in the  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 stay in Utah ?  *t:Bound })({  *n:X#1 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 stay in *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 higher point than  *t:Bound })({  *n:X#1 place( higher_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 higher *n:X#2 than  *t:Bound })({  *n:X#1 *n:X#2 higher_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that has the most  *t:Bound })({  most( *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders  *t:Bound })({  *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders Tennessee ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders Tennessee *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders California ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders California *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders Indiana ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders Indiana *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders Texas ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders Texas *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders the most  *t:Bound })({  most( *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders the most  *t:Bound })({  *n:X#1 most(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders the state  *t:Bound })({  *n:X#1 next_to_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders the *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that borders *n:X#2 ?  *t:Bound })({  *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that have  *t:Bound })({  *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that have cities  *t:Bound })({  *n:X#1 loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that have cities named  *t:Bound })({  *n:X#1 loc_1( city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that have cities *n:X#2  *t:Bound })({  *n:X#1 loc_1( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that have *n:X#2  *t:Bound })({  *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that have *n:X#2 Durham  *t:Bound })({  *n:X#1 loc_1( *n:X#2 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that have *n:X#2 ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that have *n:X#2 named  *t:Bound })({  *n:X#1 loc_1( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that flows through  *t:Bound })({  *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that flows through *n:X#2  *t:Bound })({  *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border  *t:Bound })({  *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border California ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border California *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border Utah .  *t:Bound })({  *n:X#1 next_to_2( stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border Utah *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border Texas ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border Texas *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border Nebraska ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border Nebraska *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border the largest  *t:Bound })({  *n:X#1 next_to_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border the *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border *n:X#2 .  *t:Bound })({  *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that border *n:X#2 ?  *t:Bound })({  *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that runs through  *t:Bound })({  *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that runs through *n:X#2  *t:Bound })({  *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that does not  *t:Bound })({  *n:X#1 all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that does not *n:X#2  *t:Bound })({  *n:X#1 all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that cross over  *t:Bound })({  *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that cross over *n:X#2  *t:Bound })({  *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that contains  *t:Bound })({  *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that contains the highest  *t:Bound })({  *n:X#1 loc_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that contains the *n:X#2  *t:Bound })({  *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that passes  *t:Bound })({  *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that passes through  *t:Bound })({  *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that passes the states  *t:Bound })({  *n:X#1 traverse_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that passes the *n:X#2  *t:Bound })({  *n:X#1 traverse_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that the Potomac *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'potomac'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that the Mississippi *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that the *n:X#2 through  *t:Bound })({  *n:X#1 traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that traverses the most  *t:Bound })({  most( *n:X#1 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 Durham  *t:Bound })({  *n:X#1 *n:X#2 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 Durham ?  *t:Bound })({  *n:X#1 *n:X#2 'durham', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 Indiana ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 Texas ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 cities  *t:Bound })({  *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 cities named  *t:Bound })({  *n:X#1 *n:X#2 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 named  *t:Bound })({  *n:X#1 *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 named Durham  *t:Bound })({  *n:X#1 *n:X#2 cityid( 'durham',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 a state  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 that borders  *t:Bound })({  *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 point  *t:Bound })({  *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 point ?  *t:Bound })({  *n:X#1 *n:X#2 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 the highest  *t:Bound })({  *n:X#1 *n:X#2 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 the states  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 that *n:X#2 the most  *t:Bound })({  most( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which  *t:Bound })({  loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which  *t:Bound })({  traverse_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which are  *t:Bound })({  *n:X#1 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which are in *n:X#2  *t:Bound })({  *n:X#1 loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have  *t:Bound })({  count( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have  *t:Bound })({  *n:X#1 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have elevations  *t:Bound })({  count( *n:X#1 low_point_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have elevations lower  *t:Bound })({  count( *n:X#1 low_point_2( lower_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have elevations *n:X#2  *t:Bound })({  count( *n:X#1 low_point_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have no  *t:Bound })({  *n:X#1 all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have no surrounding  *t:Bound })({  *n:X#1 all , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have no *n:X#2  *t:Bound })({  *n:X#1 all , *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have *n:X#2  *t:Bound })({  count( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have *n:X#2  *t:Bound })({  *n:X#1 all *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have *n:X#2 .  *t:Bound })({  *n:X#1 all *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have *n:X#2 states  *t:Bound })({  *n:X#1 all *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have *n:X#2 surrounding  *t:Bound })({  *n:X#1 all *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which have *n:X#2 lower  *t:Bound })({  count( *n:X#1 *n:X#2 lower_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which border  *t:Bound })({  *n:X#1 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which border Texas ?  *t:Bound })({  *n:X#1 next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which border Texas *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which border *n:X#2  *t:Bound })({  *n:X#1 next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which border *n:X#2 ?  *t:Bound })({  *n:X#1 next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which state  *t:Bound })({  state( loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which *n:X#2  *t:Bound })({  *n:X#2 loc_1( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which *n:X#2 .  *t:Bound })({  *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which *n:X#2 Texas ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which *n:X#2 elevations  *t:Bound })({  *n:X#2 *n:X#1 low_point_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which *n:X#2 elevations lower  *t:Bound })({  *n:X#2 *n:X#1 low_point_2( lower_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which *n:X#2 states  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which *n:X#2 states .  *t:Bound })({  *n:X#1 *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which *n:X#2 no  *t:Bound })({  *n:X#1 *n:X#2 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which *n:X#2 no surrounding  *t:Bound })({  *n:X#1 *n:X#2 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which *n:X#2 surrounding  *t:Bound })({  *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 which *n:X#2 surrounding states  *t:Bound })({  *n:X#1 *n:X#2 next_to_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point  *t:Bound })({  *n:X#1 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point ?  *t:Bound })({  *n:X#1 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in  *t:Bound })({  *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Oregon ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Oregon *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in California ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in California *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Delaware ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Delaware *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Louisiana ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Louisiana *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in America  *t:Bound })({  *n:X#1 place( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Arkansas ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Arkansas *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Iowa ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Iowa *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Colorado ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Colorado *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Virginia ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Virginia *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Florida ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Florida *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Wisconsin ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Wisconsin *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Maine ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Maine *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Kansas ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Kansas *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Texas ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Texas *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Montana ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Montana *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Massachusetts ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Massachusetts *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in USA  *t:Bound })({  *n:X#1 place( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Mississippi ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Mississippi *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Wyoming ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Wyoming *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in each state  *t:Bound })({  *n:X#1 place( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in each *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Ohio ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in Ohio *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in states  *t:Bound })({  *n:X#1 place( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in states bordering  *t:Bound })({  *n:X#1 place( loc_2( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in states *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in the  *t:Bound })({  *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in the country  *t:Bound })({  *n:X#1 place( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in the USA  *t:Bound })({  *n:X#1 place( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in the United  *t:Bound })({  *n:X#1 place( loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in the US  *t:Bound })({  *n:X#1 place( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in the states  *t:Bound })({  *n:X#1 place( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in the largest  *t:Bound })({  *n:X#1 place( loc_2( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in the smallest  *t:Bound })({  *n:X#1 place( loc_2( smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in the state  *t:Bound })({  *n:X#1 place( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in the *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in *n:X#2 bordering  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point in *n:X#2 ?  *t:Bound })({  *n:X#1 place( loc_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of Wyoming ?  *t:Bound })({  *n:X#1 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of all  *t:Bound })({  *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of all states  *t:Bound })({  *n:X#1 place( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of all *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of the  *t:Bound })({  *n:X#1 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of the USA  *t:Bound })({  *n:X#1 place( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of the US  *t:Bound })({  *n:X#1 place( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of the state  *t:Bound })({  *n:X#1 place( loc_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of the *n:X#2  *t:Bound })({  *n:X#1 place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of *n:X#2  *t:Bound })({  *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of *n:X#2 ?  *t:Bound })({  *n:X#1 place( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of *n:X#2 ?  *t:Bound })({  *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of *n:X#2 USA  *t:Bound })({  *n:X#1 place( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of *n:X#2 capital  *t:Bound })({  *n:X#1 place( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of *n:X#2 US  *t:Bound })({  *n:X#1 place( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of *n:X#2 states  *t:Bound })({  *n:X#1 place( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of *n:X#2 city  *t:Bound })({  *n:X#1 place( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of *n:X#2 with  *t:Bound })({  *n:X#1 place( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point of *n:X#2 state  *t:Bound })({  *n:X#1 place( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2  *t:Bound })({  *n:X#1 place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 States  *t:Bound })({  *n:X#1 place( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Oregon ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 California ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Des  *t:Bound })({  *n:X#1 place( *n:X#2 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Delaware ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'delaware'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 bordering  *t:Bound })({  *n:X#1 place( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Louisiana ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'louisiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 America  *t:Bound })({  *n:X#1 place( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Arkansas ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Iowa ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 country  *t:Bound })({  *n:X#1 place( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Colorado ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Georgia ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'georgia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 ?  *t:Bound })({  *n:X#1 place( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 ?  *t:Bound })({  *n:X#1 place( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Moines  *t:Bound })({  *n:X#1 place( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Moines ?  *t:Bound })({  *n:X#1 place( *n:X#2 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Austin  *t:Bound })({  *n:X#1 place( *n:X#2 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Virginia ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'virginia'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Florida ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'florida'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Wisconsin ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'wisconsin'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Maine ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'maine'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Kansas ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'kansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Texas ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Montana ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Massachusetts ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'massachusetts'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 USA  *t:Bound })({  *n:X#1 place( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 United  *t:Bound })({  *n:X#1 place( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 United States  *t:Bound })({  *n:X#1 place( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 capital  *t:Bound })({  *n:X#1 place( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Mississippi ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Wyoming ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 each state  *t:Bound })({  *n:X#1 place( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 lowest point  *t:Bound })({  *n:X#1 place( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 is sea  *t:Bound })({  *n:X#1 place( *n:X#2 elevation_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 US  *t:Bound })({  *n:X#1 place( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 Ohio ?  *t:Bound })({  *n:X#1 place( *n:X#2 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 states  *t:Bound })({  *n:X#1 place( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 states bordering  *t:Bound })({  *n:X#1 place( *n:X#2 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 largest  *t:Bound })({  *n:X#1 place( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 largest state  *t:Bound })({  *n:X#1 place( *n:X#2 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 with  *t:Bound })({  *n:X#1 place( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 with capital  *t:Bound })({  *n:X#1 place( *n:X#2 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 rivers  *t:Bound })({  *n:X#1 place( *n:X#2 traverse_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 whose  *t:Bound })({  *n:X#1 place( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 smallest  *t:Bound })({  *n:X#1 place( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 smallest state  *t:Bound })({  *n:X#1 place( *n:X#2 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 state  *t:Bound })({  *n:X#1 place( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 state ?  *t:Bound })({  *n:X#1 place( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 state with  *t:Bound })({  *n:X#1 place( *n:X#2 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 point *n:X#2 the capital  *t:Bound })({  *n:X#1 place( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lower  *t:Bound })({  *n:X#1 lower_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lower than what  *t:Bound })({  *n:X#1 lower_2( low_point_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lower than what *n:X#2  *t:Bound })({  *n:X#1 lower_2( low_point_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 lower *n:X#2  *t:Bound })({  *n:X#1 lower_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose  *t:Bound })({  *n:X#1 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose capital  *t:Bound })({  *n:X#1 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose capital is  *t:Bound })({  *n:X#1 loc_1( capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose capital is Boston  *t:Bound })({  *n:X#1 loc_1( capital( cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose capital is *n:X#2  *t:Bound })({  *n:X#1 loc_1( capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose capital *n:X#2  *t:Bound })({  *n:X#1 loc_1( capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose capital *n:X#2 ?  *t:Bound })({  *n:X#1 loc_1( capital( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose capital *n:X#2 Boston  *t:Bound })({  *n:X#1 loc_1( capital( *n:X#2 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose lowest point  *t:Bound })({  *n:X#1 loc_1( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose lowest *n:X#2  *t:Bound })({  *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose lowest *n:X#2 level  *t:Bound })({  *n:X#1 loc_1( *n:X#2 0  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose *n:X#2  *t:Bound })({  *n:X#1 loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose *n:X#2 ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose *n:X#2 Boston  *t:Bound })({  *n:X#1 loc_1( *n:X#2 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose *n:X#2 Boston ?  *t:Bound })({  *n:X#1 loc_1( *n:X#2 'boston', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose *n:X#2 is  *t:Bound })({  *n:X#1 loc_1( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 whose *n:X#2 is Boston  *t:Bound })({  *n:X#1 loc_1( *n:X#2 cityid( 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many  *t:Bound })({  *n:X#1 count(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many  *t:Bound })({  *n:X#1 population_1( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many Colorado rivers are  *t:Bound })({  *n:X#1 count( river( riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many Colorado rivers *n:X#2  *t:Bound })({  *n:X#1 count( river( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many Colorado *n:X#2  *t:Bound })({  *n:X#1 count( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many Colorado *n:X#2 are  *t:Bound })({  *n:X#1 count( *n:X#2 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states  *t:Bound })({  count( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states  *t:Bound })({  *n:X#1 count( intersection( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states  *t:Bound })({  *n:X#1 count( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states ?  *t:Bound })({  count( state( *n:X#1 stateid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states have  *t:Bound })({  *n:X#1 count( state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states have cities  *t:Bound })({  *n:X#1 count( state( loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states have major  *t:Bound })({  *n:X#1 count( state( loc_1( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states have a  *t:Bound })({  *n:X#1 count( state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states have *n:X#2  *t:Bound })({  *n:X#1 count( state( loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states in the  *t:Bound })({  *n:X#1 count( intersection( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states border  *t:Bound })({  *n:X#1 count( state( intersection( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states border  *t:Bound })({  *n:X#1 count( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states border at  *t:Bound })({  *n:X#1 count( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states border *n:X#2  *t:Bound })({  *n:X#1 count( state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states does  *t:Bound })({  *n:X#1 count( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states does  *t:Bound })({  *n:X#1 count( state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states does  *t:Bound })({  *n:X#1 count( state( next_to_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states does *n:X#2  *t:Bound })({  *n:X#1 count( state( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states does *n:X#2  *t:Bound })({  *n:X#1 count( state( next_to_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states do  *t:Bound })({  *n:X#1 count( exclude( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2  *t:Bound })({  count( state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2  *t:Bound })({  *n:X#1 count( intersection( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2  *t:Bound })({  *n:X#1 count( state( intersection( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2  *t:Bound })({  *n:X#1 count( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2  *t:Bound })({  *n:X#1 count( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 States  *t:Bound })({  *n:X#1 count( state( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 ?  *t:Bound })({  *n:X#1 count( state( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 ?  *t:Bound })({  *n:X#1 count( state( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 Austin  *t:Bound })({  *n:X#1 count( state( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 United  *t:Bound })({  *n:X#1 count( state( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 capital  *t:Bound })({  *n:X#1 count( state( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 is  *t:Bound })({  *n:X#1 count( state( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 Springfield  *t:Bound })({  *n:X#1 count( state( *n:X#2 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 cities  *t:Bound })({  *n:X#1 count( state( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 major  *t:Bound })({  *n:X#1 count( state( *n:X#2 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 city  *t:Bound })({  *n:X#1 count( state( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 named  *t:Bound })({  *n:X#1 count( state( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 rivers  *t:Bound })({  *n:X#1 count( state( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 population  *t:Bound })({  *n:X#1 count( state( *n:X#2 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 whose  *t:Bound })({  *n:X#1 count( state( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many states *n:X#2 state  *t:Bound })({  *n:X#1 count( state( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many big cities are  *t:Bound })({  *n:X#1 count( major( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many big *n:X#2  *t:Bound })({  *n:X#1 count( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many big *n:X#2 are  *t:Bound })({  *n:X#1 count( major( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many cities  *t:Bound })({  *n:X#1 count( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many cities are  *t:Bound })({  *n:X#1 count( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many cities are *n:X#2  *t:Bound })({  *n:X#1 count( city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many cities does the  *t:Bound })({  *n:X#1 count( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many cities named  *t:Bound })({  *n:X#1 count( intersection( city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many cities *n:X#2  *t:Bound })({  *n:X#1 count( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many cities *n:X#2 States  *t:Bound })({  *n:X#1 count( city( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many cities *n:X#2 United  *t:Bound })({  *n:X#1 count( city( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many capitals  *t:Bound })({  *n:X#1 count( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many capitals *n:X#2  *t:Bound })({  *n:X#1 count( capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many residents live  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many residents live *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many citizens  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many citizens in  *t:Bound })({  *n:X#1 population_1( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many citizens in Boulder  *t:Bound })({  *n:X#1 population_1( cityid( 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many citizens in *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many citizens live  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many citizens live *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many citizens *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major  *t:Bound })({  *n:X#1 count( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major cities  *t:Bound })({  *n:X#1 count( major( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major cities are  *t:Bound })({  *n:X#1 count( major( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major cities are  *t:Bound })({  *n:X#1 count( major( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major cities *n:X#2  *t:Bound })({  *n:X#1 count( major( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major rivers  *t:Bound })({  *n:X#1 count( major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major rivers cross  *t:Bound })({  *n:X#1 count( major( river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major rivers *n:X#2  *t:Bound })({  *n:X#1 count( major( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major *n:X#2  *t:Bound })({  *n:X#1 count( major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major *n:X#2 bordering  *t:Bound })({  *n:X#1 count( major( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major *n:X#2 are  *t:Bound })({  *n:X#1 count( major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major *n:X#2 are  *t:Bound })({  *n:X#1 count( major( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major *n:X#2 states  *t:Bound })({  *n:X#1 count( major( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many major *n:X#2 cross  *t:Bound })({  *n:X#1 count( major( *n:X#2 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many inhabitants does Montgomery  *t:Bound })({  *n:X#1 population_1( cityid( 'montgomery',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers  *t:Bound })({  *n:X#1 count( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers  *t:Bound })({  *n:X#1 count( intersection( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers are  *t:Bound })({  *n:X#1 count( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers are called  *t:Bound })({  *n:X#1 count( river( riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers are *n:X#2  *t:Bound })({  *n:X#1 count( river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers in  *t:Bound })({  *n:X#1 count( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers in  *t:Bound })({  *n:X#1 count( intersection( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers in *n:X#2  *t:Bound })({  *n:X#1 count( river( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers do  *t:Bound })({  *n:X#1 count( exclude( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers do *n:X#2  *t:Bound })({  *n:X#1 count( exclude( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers run through  *t:Bound })({  *n:X#1 count( river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers *n:X#2  *t:Bound })({  *n:X#1 count( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers *n:X#2  *t:Bound })({  *n:X#1 count( intersection( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers *n:X#2  *t:Bound })({  *n:X#1 count( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers *n:X#2 bordering  *t:Bound })({  *n:X#1 count( river( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers *n:X#2 Colorado  *t:Bound })({  *n:X#1 count( river( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers *n:X#2 with  *t:Bound })({  *n:X#1 count( river( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many rivers *n:X#2 state  *t:Bound })({  *n:X#1 count( river( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many square kilometers  *t:Bound })({  *n:X#1 area_1( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many square *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many people  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many people are *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many people in  *t:Bound })({  *n:X#1 population_1( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many people in Boulder  *t:Bound })({  *n:X#1 population_1( cityid( 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many people in *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many people reside *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many people live  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many people live in  *t:Bound })({  *n:X#1 population_1( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many people live *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many people stay *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many people *n:X#2  *t:Bound })({  *n:X#1 population_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2  *t:Bound })({  count( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2  *t:Bound })({  *n:X#1 count( intersection( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2  *t:Bound })({  *n:X#1 count( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 States  *t:Bound })({  *n:X#1 count( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 States  *t:Bound })({  *n:X#1 *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Oregon ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Tennessee ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'tennessee'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Alaska ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 bordering  *t:Bound })({  *n:X#1 count( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 bordering  *t:Bound })({  *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Iowa ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'iowa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 are  *t:Bound })({  *n:X#1 count( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 are in  *t:Bound })({  *n:X#1 count( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 are called  *t:Bound })({  *n:X#1 count( *n:X#2 riverid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Colorado  *t:Bound })({  *n:X#1 count( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Colorado  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Colorado ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 ?  *t:Bound })({  count( *n:X#2 *n:X#1 stateid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 ?  *t:Bound })({  *n:X#1 count( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 ?  *t:Bound })({  *n:X#1 count( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Hawaii ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Austin  *t:Bound })({  *n:X#1 count( *n:X#2 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Austin ?  *t:Bound })({  *n:X#1 count( *n:X#2 'austin', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Idaho ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'idaho'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 and  *t:Bound })({  *n:X#1 count( *n:X#2 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 and border  *t:Bound })({  *n:X#1 count( *n:X#2 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Utah ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'utah'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Texas ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Washington ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 USA  *t:Bound })({  *n:X#1 count( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 United  *t:Bound })({  *n:X#1 count( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 United States  *t:Bound })({  *n:X#1 count( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 capital  *t:Bound })({  *n:X#1 count( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 capital is  *t:Bound })({  *n:X#1 count( *n:X#2 capital( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 have  *t:Bound })({  *n:X#1 count( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 have ?  *t:Bound })({  *n:X#1 population_1( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 have cities  *t:Bound })({  *n:X#1 count( *n:X#2 loc_1( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 have major  *t:Bound })({  *n:X#1 count( *n:X#2 loc_1( major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 have a  *t:Bound })({  *n:X#1 count( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 have rivers  *t:Bound })({  *n:X#1 count( *n:X#2 loc_1( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Nebraska ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'nebraska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 is  *t:Bound })({  *n:X#1 count( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 US  *t:Bound })({  *n:X#1 count( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Ohio ?  *t:Bound })({  *n:X#1 count( *n:X#2 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 states  *t:Bound })({  *n:X#1 count( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 states bordering  *t:Bound })({  *n:X#1 count( *n:X#2 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 in  *t:Bound })({  *n:X#1 count( intersection( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 in  *t:Bound })({  *n:X#1 count( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 in  *t:Bound })({  *n:X#1 *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 in  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 in Boulder  *t:Bound })({  *n:X#1 *n:X#2 cityid( 'boulder',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 in the  *t:Bound })({  *n:X#1 count( intersection( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Springfield  *t:Bound })({  *n:X#1 count( *n:X#2 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 Springfield ?  *t:Bound })({  *n:X#1 count( *n:X#2 'springfield', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 border  *t:Bound })({  *n:X#1 count( *n:X#2 intersection( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 border  *t:Bound })({  *n:X#1 count( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 border at  *t:Bound })({  *n:X#1 count( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 cities  *t:Bound })({  *n:X#1 count( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 cities are  *t:Bound })({  *n:X#1 count( *n:X#2 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 cities named  *t:Bound })({  *n:X#1 count( *n:X#2 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 not  *t:Bound })({  *n:X#1 count( *n:X#2 all ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 there ?  *t:Bound })({  *n:X#1 count( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 does  *t:Bound })({  *n:X#1 count( intersection( *n:X#2 ,traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 does  *t:Bound })({  *n:X#1 count( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 does  *t:Bound })({  *n:X#1 count( *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 does  *t:Bound })({  *n:X#1 count( *n:X#2 next_to_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 does the  *t:Bound })({  *n:X#1 count( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 cross  *t:Bound })({  *n:X#1 count( *n:X#2 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 river  *t:Bound })({  *n:X#1 count( intersection( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 live in  *t:Bound })({  *n:X#1 *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 called Rochester  *t:Bound })({  *n:X#1 count( *n:X#2 cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 major  *t:Bound })({  *n:X#1 count( *n:X#2 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 major rivers  *t:Bound })({  *n:X#1 count( *n:X#2 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 city  *t:Bound })({  *n:X#1 count( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 city  *t:Bound })({  *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 city in  *t:Bound })({  *n:X#1 *n:X#2 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 city named  *t:Bound })({  *n:X#1 count( *n:X#2 city( cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 named  *t:Bound })({  *n:X#1 count( intersection( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 named  *t:Bound })({  *n:X#1 count( *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 named Austin  *t:Bound })({  *n:X#1 count( *n:X#2 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 named Springfield  *t:Bound })({  *n:X#1 count( *n:X#2 cityid( 'springfield',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 with  *t:Bound })({  *n:X#1 count( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 do  *t:Bound })({  *n:X#1 count( exclude( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 rivers  *t:Bound })({  *n:X#1 count( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 rivers are  *t:Bound })({  *n:X#1 count( river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 rivers ?  *t:Bound })({  *n:X#1 count( *n:X#2 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 rivers cross  *t:Bound })({  *n:X#1 count( *n:X#2 river( traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 kilometers  *t:Bound })({  *n:X#1 area_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 run through  *t:Bound })({  *n:X#1 count( *n:X#2 traverse_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 population  *t:Bound })({  *n:X#1 count( *n:X#2 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 whose  *t:Bound })({  *n:X#1 count( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 whose capital  *t:Bound })({  *n:X#1 count( *n:X#2 loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 state  *t:Bound })({  *n:X#1 count( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 state  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 state bordering  *t:Bound })({  *n:X#1 *n:X#2 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 state ?  *t:Bound })({  *n:X#1 count( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 state with  *t:Bound })({  *n:X#1 count( *n:X#2 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 the highest  *t:Bound })({  *n:X#1 count( *n:X#2 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 the states  *t:Bound })({  *n:X#1 count( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 the largest  *t:Bound })({  *n:X#1 count( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 many *n:X#2 the shortest  *t:Bound })({  *n:X#1 count( intersection( *n:X#2 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 on the state  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 on the state whose  *t:Bound })({  *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 on the state *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 on the *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 on the *n:X#2 Boston  *t:Bound })({  *n:X#1 *n:X#2 'boston',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 on the *n:X#2 capital  *t:Bound })({  *n:X#1 *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 on the *n:X#2 is  *t:Bound })({  *n:X#1 *n:X#2 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 on the *n:X#2 whose  *t:Bound })({  *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest  *t:Bound })({  *n:X#1 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest city  *t:Bound })({  *n:X#1 smallest( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest city in  *t:Bound })({  *n:X#1 smallest( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest city in the  *t:Bound })({  *n:X#1 smallest( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest city in *n:X#2  *t:Bound })({  *n:X#1 smallest( city( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest city of the  *t:Bound })({  *n:X#1 smallest( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest city of *n:X#2  *t:Bound })({  *n:X#1 smallest( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest city *n:X#2  *t:Bound })({  *n:X#1 smallest( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest city *n:X#2 ?  *t:Bound })({  *n:X#1 smallest( city( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest city *n:X#2 largest  *t:Bound })({  *n:X#1 smallest( city( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest city *n:X#2 state  *t:Bound })({  *n:X#1 smallest( city( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest state  *t:Bound })({  *n:X#1 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest state bordering  *t:Bound })({  *n:X#1 smallest( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest state bordering *n:X#2  *t:Bound })({  *n:X#1 smallest( state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest state ?  *t:Bound })({  *n:X#1 smallest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest state by area  *t:Bound })({  *n:X#1 smallest_one( area_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest state by *n:X#2  *t:Bound })({  *n:X#1 smallest_one( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest state in the  *t:Bound })({  *n:X#1 smallest( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest state through which  *t:Bound })({  *n:X#1 smallest( state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest state that borders  *t:Bound })({  *n:X#1 smallest( state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest state *n:X#2  *t:Bound })({  *n:X#1 smallest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest state *n:X#2 river  *t:Bound })({  *n:X#1 smallest( state( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2  *t:Bound })({  *n:X#1 smallest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 Alaska ?  *t:Bound })({  *n:X#1 smallest( *n:X#2 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 bordering  *t:Bound })({  *n:X#1 smallest( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 Arkansas ?  *t:Bound })({  *n:X#1 smallest( *n:X#2 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 ?  *t:Bound })({  *n:X#1 smallest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 Hawaii ?  *t:Bound })({  *n:X#1 smallest( *n:X#2 stateid( 'hawaii'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 Texas ?  *t:Bound })({  *n:X#1 smallest( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 Washington ?  *t:Bound })({  *n:X#1 smallest( *n:X#2 stateid( 'washington'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 USA  *t:Bound })({  *n:X#1 smallest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 Wyoming ?  *t:Bound })({  *n:X#1 smallest( *n:X#2 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 by area  *t:Bound })({  *n:X#1 smallest_one( area_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 US  *t:Bound })({  *n:X#1 smallest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 Ohio ?  *t:Bound })({  *n:X#1 smallest( *n:X#2 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 states  *t:Bound })({  *n:X#1 smallest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 in  *t:Bound })({  *n:X#1 smallest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 in the  *t:Bound })({  *n:X#1 smallest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 largest  *t:Bound })({  *n:X#1 smallest( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 largest state  *t:Bound })({  *n:X#1 smallest( *n:X#2 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 river  *t:Bound })({  *n:X#1 smallest( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 through which  *t:Bound })({  *n:X#1 smallest( *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 of the  *t:Bound })({  *n:X#1 smallest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 that borders  *t:Bound })({  *n:X#1 smallest( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 smallest  *t:Bound })({  *n:X#1 smallest( *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 smallest state  *t:Bound })({  *n:X#1 smallest( *n:X#2 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 state  *t:Bound })({  *n:X#1 smallest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 state ?  *t:Bound })({  *n:X#1 smallest( *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 smallest *n:X#2 the longest  *t:Bound })({  *n:X#1 smallest( *n:X#2 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state  *t:Bound })({  state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state .  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering Arkansas ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering Arkansas *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering Texas ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering Texas *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering Wyoming ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering Wyoming *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering Oklahoma ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering Oklahoma *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering Ohio ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering Ohio *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state bordering *n:X#2 ?  *t:Bound })({  *n:X#1 state( next_to_2( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state ?  *t:Bound })({  state( stateid( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state ?  *t:Bound })({  *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state is  *t:Bound })({  answer( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state is  *t:Bound })({  answer( state( *n:X#1 cityid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state is Mount  *t:Bound })({  answer( state( *n:X#1 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state is Mount McKinley  *t:Bound })({  answer( state( *n:X#1 'mount mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state is Mount *n:X#2  *t:Bound })({  answer( state( *n:X#1 'mount *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state is Rochester  *t:Bound })({  answer( state( *n:X#1 cityid( 'rochester',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state is *n:X#2  *t:Bound })({  answer( state( *n:X#1 cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state is *n:X#2  *t:Bound })({  answer( state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state is *n:X#2 McKinley  *t:Bound })({  answer( state( *n:X#1 *n:X#2 mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state in  *t:Bound })({  *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state in USA  *t:Bound })({  *n:X#1 state( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state in continental  *t:Bound })({  *n:X#1 state( loc_2( countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state in continental US  *t:Bound })({  *n:X#1 state( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state in continental *n:X#2  *t:Bound })({  *n:X#1 state( loc_2( countryid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state in the  *t:Bound })({  *n:X#1 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state in the USA  *t:Bound })({  *n:X#1 state( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state in the US  *t:Bound })({  *n:X#1 state( loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state in the *n:X#2  *t:Bound })({  *n:X#1 state( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state in *n:X#2  *t:Bound })({  *n:X#1 state( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state in *n:X#2 US  *t:Bound })({  *n:X#1 state( loc_2( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state does  *t:Bound })({  answer( state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state does the highest  *t:Bound })({  answer( state( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state does the *n:X#2  *t:Bound })({  answer( state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state traversed  *t:Bound })({  *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state traversed *n:X#2  *t:Bound })({  *n:X#1 state( traverse_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state traversed *n:X#2 river  *t:Bound })({  *n:X#1 state( traverse_1( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state through which  *t:Bound })({  *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state with  *t:Bound })({  *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state with capital  *t:Bound })({  *n:X#1 state( loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state with the highest  *t:Bound })({  *n:X#1 state( loc_1( highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state with the capital  *t:Bound })({  *n:X#1 state( loc_1( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state with the longest  *t:Bound })({  *n:X#1 state( loc_1( longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state with the lowest  *t:Bound })({  *n:X#1 state( loc_1( lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state with the largest  *t:Bound })({  *n:X#1 state( loc_1( largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state with the *n:X#2  *t:Bound })({  *n:X#1 state( loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state with *n:X#2  *t:Bound })({  *n:X#1 state( loc_1( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state with *n:X#2 ?  *t:Bound })({  *n:X#1 state( loc_1( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state with *n:X#2 Moines  *t:Bound })({  *n:X#1 state( loc_1( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state of Oregon ?  *t:Bound })({  *n:X#1 state( stateid( 'oregon'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state of California ?  *t:Bound })({  state( *n:X#1 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state of California ?  *t:Bound })({  *n:X#1 state( stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state of Indiana ?  *t:Bound })({  *n:X#1 state( stateid( 'indiana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state of Texas ?  *t:Bound })({  *n:X#1 state( stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state of *n:X#2 ?  *t:Bound })({  state( *n:X#1 stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state of *n:X#2 ?  *t:Bound })({  *n:X#1 state( stateid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state that borders  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state that borders *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state that contains  *t:Bound })({  *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state that the *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state that *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state that *n:X#2 ?  *t:Bound })({  *n:X#1 state( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state that *n:X#2 point  *t:Bound })({  *n:X#1 state( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2  *t:Bound })({  state( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2  *t:Bound })({  state( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2  *t:Bound })({  *n:X#2 state( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Albany  *t:Bound })({  *n:X#1 state( *n:X#2 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 California ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Des  *t:Bound })({  *n:X#1 state( *n:X#2 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Arkansas ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'arkansas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 ?  *t:Bound })({  *n:X#1 state( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 ?  *t:Bound })({  *n:X#1 state( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Moines  *t:Bound })({  *n:X#1 state( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Moines ?  *t:Bound })({  *n:X#1 state( *n:X#2 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Mount  *t:Bound })({  *n:X#2 state( *n:X#1 'mount  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Mount McKinley  *t:Bound })({  *n:X#2 state( *n:X#1 'mount mckinley'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Austin  *t:Bound })({  *n:X#1 state( *n:X#2 cityid( 'austin',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Texas ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 USA  *t:Bound })({  *n:X#1 state( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 capital  *t:Bound })({  *n:X#1 state( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 capital city  *t:Bound })({  *n:X#1 state( *n:X#2 capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Wyoming ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'wyoming'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 density  *t:Bound })({  *n:X#1 *n:X#2 density_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 density in  *t:Bound })({  *n:X#1 *n:X#2 density_1( state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Oklahoma ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'oklahoma'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 US  *t:Bound })({  *n:X#1 state( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 US  *t:Bound })({  *n:X#1 state( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 Ohio ?  *t:Bound })({  *n:X#1 state( *n:X#2 stateid( 'ohio'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 in  *t:Bound })({  *n:X#1 *n:X#2 state( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 in the  *t:Bound })({  *n:X#1 state( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 runs ?  *t:Bound })({  *n:X#1 state( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 river  *t:Bound })({  *n:X#1 state( *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 river ?  *t:Bound })({  *n:X#1 state( *n:X#2 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 city  *t:Bound })({  *n:X#1 state( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 continental  *t:Bound })({  *n:X#1 state( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 continental US  *t:Bound })({  *n:X#1 state( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 with  *t:Bound })({  *n:X#1 state( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 elevation  *t:Bound })({  *n:X#1 state( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 elevation ?  *t:Bound })({  *n:X#1 state( *n:X#2 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 that borders  *t:Bound })({  *n:X#1 state( *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 point  *t:Bound })({  *n:X#1 state( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 point ?  *t:Bound })({  *n:X#1 state( *n:X#2 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 the highest  *t:Bound })({  *n:X#2 state( *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 the highest  *t:Bound })({  *n:X#1 state( *n:X#2 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 the capital  *t:Bound })({  *n:X#1 state( *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 the longest  *t:Bound })({  *n:X#1 state( *n:X#2 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 the lowest  *t:Bound })({  *n:X#1 state( *n:X#2 lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 the largest  *t:Bound })({  *n:X#1 state( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 state *n:X#2 the state  *t:Bound })({  *n:X#1 state( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the  *t:Bound })({  answer( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the  *t:Bound })({  all *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Colorado river runs  *t:Bound })({  *n:X#1 river( riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Colorado river flow  *t:Bound })({  *n:X#1 river( riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Colorado river run  *t:Bound })({  *n:X#1 river( riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Colorado river *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Colorado *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Colorado *n:X#2 runs  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Colorado *n:X#2 flow  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Colorado *n:X#2 run  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest  *t:Bound })({  *n:X#1 highest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest populations  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest elevation  *t:Bound })({  *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest elevation ?  *t:Bound })({  *n:X#1 highest( place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest elevation *n:X#2  *t:Bound })({  *n:X#1 highest( place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest population  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest population ?  *t:Bound })({  *n:X#1 population_1( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest population density  *t:Bound })({  *n:X#1 density_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest population *n:X#2  *t:Bound })({  *n:X#1 population_1( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest point  *t:Bound })({  *n:X#1 highest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest point  *t:Bound })({  *n:X#1 highest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest point ?  *t:Bound })({  *n:X#1 highest( place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest point in  *t:Bound })({  *n:X#1 highest( place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest point *n:X#2  *t:Bound })({  *n:X#1 highest( place( loc_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest point *n:X#2  *t:Bound })({  *n:X#1 highest( place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2  *t:Bound })({  *n:X#1 highest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2 States  *t:Bound })({  *n:X#1 highest( *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2 America  *t:Bound })({  *n:X#1 highest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2 ?  *t:Bound })({  *n:X#1 highest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2 USA  *t:Bound })({  *n:X#1 highest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2 United  *t:Bound })({  *n:X#1 highest( *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2 in  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2 largest  *t:Bound })({  *n:X#1 highest( *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2 with  *t:Bound })({  *n:X#1 highest( *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the highest *n:X#2 state  *t:Bound })({  *n:X#1 highest( *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital  *t:Bound })({  *n:X#1 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital Albany  *t:Bound })({  *n:X#1 capital( cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital Albany ?  *t:Bound })({  *n:X#1 capital( cityid( 'albany', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital Albany *n:X#2  *t:Bound })({  *n:X#1 capital( cityid( 'albany', *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital Des  *t:Bound })({  *n:X#1 capital( cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital Des Moines  *t:Bound })({  *n:X#1 capital( cityid( 'des moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital Des *n:X#2  *t:Bound })({  *n:X#1 capital( cityid( 'des *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital of the  *t:Bound })({  *n:X#1 capital( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital of *n:X#2  *t:Bound })({  *n:X#1 capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital *n:X#2  *t:Bound })({  *n:X#1 capital( cityid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital *n:X#2 ?  *t:Bound })({  *n:X#1 capital( cityid( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the capital *n:X#2 Moines  *t:Bound })({  *n:X#1 capital( cityid( *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi  *t:Bound })({  *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi runs  *t:Bound })({  *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi river  *t:Bound })({  river( *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi river  *t:Bound })({  *n:X#1 river( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi river runs  *t:Bound })({  *n:X#1 river( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi river run  *t:Bound })({  *n:X#1 river( riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi river which  *t:Bound })({  traverse_1( river( *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi river *n:X#2  *t:Bound })({  *n:X#2 river( *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi river *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi flow  *t:Bound })({  answer( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi run  *t:Bound })({  answer( *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi run  *t:Bound })({  *n:X#1 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi *n:X#2  *t:Bound })({  *n:X#2 *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi *n:X#2 runs  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi *n:X#2 run  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Mississippi *n:X#2 which  *t:Bound })({  traverse_1( *n:X#2 *n:X#1 'mississippi'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the longest  *t:Bound })({  *n:X#1 longest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the longest river  *t:Bound })({  *n:X#1 longest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the longest river ?  *t:Bound })({  *n:X#1 longest( river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the longest river in  *t:Bound })({  *n:X#1 longest( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the longest river *n:X#2  *t:Bound })({  *n:X#1 longest( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the longest *n:X#2  *t:Bound })({  *n:X#1 longest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the longest *n:X#2 ?  *t:Bound })({  *n:X#1 longest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the longest *n:X#2 USA  *t:Bound })({  *n:X#1 longest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the longest *n:X#2 in  *t:Bound })({  *n:X#1 longest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Missouri river run  *t:Bound })({  *n:X#1 river( riverid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Missouri river *n:X#2  *t:Bound })({  *n:X#1 river( *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Missouri *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the Missouri *n:X#2 run  *t:Bound })({  *n:X#1 *n:X#2 riverid( 'missouri'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the lowest  *t:Bound })({  *n:X#1 lowest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the lowest population  *t:Bound })({  *n:X#1 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the lowest population density  *t:Bound })({  *n:X#1 density_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the lowest point  *t:Bound })({  *n:X#1 lowest( place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the lowest point ?  *t:Bound })({  *n:X#1 lowest( place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the lowest point *n:X#2  *t:Bound })({  *n:X#1 lowest( place( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the lowest *n:X#2  *t:Bound })({  *n:X#1 lowest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the lowest *n:X#2 ?  *t:Bound })({  *n:X#1 lowest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the lowest *n:X#2 USA  *t:Bound })({  *n:X#1 lowest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the US  *t:Bound })({  *n:X#1 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the states  *t:Bound })({  answer( *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the states  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the states bordering  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the states bordering *n:X#2  *t:Bound })({  *n:X#1 state( next_to_2( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the states through which  *t:Bound })({  *n:X#1 state( traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the states which have  *t:Bound })({  answer( *n:X#1 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the states which *n:X#2  *t:Bound })({  answer( *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the states *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest  *t:Bound })({  *n:X#1 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest capital  *t:Bound })({  *n:X#1 largest( capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest capital city  *t:Bound })({  *n:X#1 largest( capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest capital *n:X#2  *t:Bound })({  *n:X#1 largest( capital( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest city  *t:Bound })({  *n:X#1 largest( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest city in  *t:Bound })({  *n:X#1 largest( city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest city *n:X#2  *t:Bound })({  *n:X#1 largest( city( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest state  *t:Bound })({  *n:X#1 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest state ?  *t:Bound })({  *n:X#1 largest( state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest state *n:X#2  *t:Bound })({  *n:X#1 largest( state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest *n:X#2  *t:Bound })({  *n:X#1 largest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest *n:X#2 ?  *t:Bound })({  *n:X#1 largest( *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest *n:X#2 US  *t:Bound })({  *n:X#1 largest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest *n:X#2 in  *t:Bound })({  *n:X#1 largest( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the largest *n:X#2 city  *t:Bound })({  *n:X#1 largest( *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the major  *t:Bound })({  *n:X#1 major(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the major river  *t:Bound })({  *n:X#1 major( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the major river in  *t:Bound })({  *n:X#1 major( river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the major river *n:X#2  *t:Bound })({  *n:X#1 major( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the major *n:X#2  *t:Bound })({  *n:X#1 major( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the major *n:X#2 in  *t:Bound })({  *n:X#1 major( *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the shortest  *t:Bound })({  *n:X#1 shortest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the shortest river  *t:Bound })({  *n:X#1 shortest( river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the shortest river *n:X#2  *t:Bound })({  *n:X#1 shortest( river( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the shortest *n:X#2  *t:Bound })({  *n:X#1 shortest( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the shortest *n:X#2 USA  *t:Bound })({  *n:X#1 shortest( *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state  *t:Bound })({  all *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state  *t:Bound })({  *n:X#1 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state with  *t:Bound })({  all *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state with  *t:Bound })({  *n:X#1 largest_one(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state with  *t:Bound })({  *n:X#1 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state that borders  *t:Bound })({  *n:X#1 state( next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state that *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state *n:X#2  *t:Bound })({  all *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state *n:X#2  *t:Bound })({  state( *n:X#2 *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state *n:X#2  *t:Bound })({  *n:X#1 state( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state *n:X#2 Albany  *t:Bound })({  state( *n:X#2 *n:X#1 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state *n:X#2 ?  *t:Bound })({  all *n:X#1 state( *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state *n:X#2 area  *t:Bound })({  *n:X#1 *n:X#2 area_1( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state *n:X#2 population  *t:Bound })({  *n:X#1 *n:X#2 population_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the state *n:X#2 point  *t:Bound })({  *n:X#1 state( *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2  *t:Bound })({  answer( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2  *t:Bound })({  all *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Albany  *t:Bound })({  all *n:X#1 *n:X#2 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Albany  *t:Bound })({  *n:X#2 *n:X#1 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Albany  *t:Bound })({  *n:X#1 *n:X#2 cityid( 'albany',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Albany ?  *t:Bound })({  *n:X#2 *n:X#1 'albany', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Albany ?  *t:Bound })({  *n:X#1 *n:X#2 cityid( 'albany', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 States  *t:Bound })({  *n:X#1 *n:X#2 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Alaska ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'alaska'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 California ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'california'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 .  *t:Bound })({  answer( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Des  *t:Bound })({  *n:X#1 *n:X#2 cityid( 'des  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Des Moines  *t:Bound })({  *n:X#1 *n:X#2 cityid( 'des moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 bordering  *t:Bound })({  *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 America  *t:Bound })({  *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Colorado ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'colorado'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 ?  *t:Bound })({  all *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 ?  *t:Bound })({  *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Moines  *t:Bound })({  *n:X#1 *n:X#2 moines',  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Moines ?  *t:Bound })({  *n:X#1 *n:X#2 moines', _  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Texas ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'texas'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 Montana ?  *t:Bound })({  *n:X#1 *n:X#2 stateid( 'montana'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 USA  *t:Bound })({  *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 United  *t:Bound })({  *n:X#1 *n:X#2 countryid(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 United States  *t:Bound })({  *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 capital  *t:Bound })({  *n:X#1 *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 capital city  *t:Bound })({  *n:X#1 *n:X#2 capital( city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 US  *t:Bound })({  *n:X#1 *n:X#2 countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 states  *t:Bound })({  answer( *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 states  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 states .  *t:Bound })({  answer( *n:X#1 *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 states ?  *t:Bound })({  *n:X#1 *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 in  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 in America  *t:Bound })({  *n:X#1 *n:X#2 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 in USA  *t:Bound })({  *n:X#1 *n:X#2 loc_2( countryid( 'usa'  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 in the  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 largest  *t:Bound })({  *n:X#1 *n:X#2 largest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 largest state  *t:Bound })({  *n:X#1 *n:X#2 largest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 no  *t:Bound })({  answer( *n:X#1 *n:X#2 ,  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 no surrounding  *t:Bound })({  answer( *n:X#1 *n:X#2 , next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 surrounding  *t:Bound })({  answer( *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 surrounding states  *t:Bound })({  answer( *n:X#1 *n:X#2 next_to_2( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 runs  *t:Bound })({  *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 runs ?  *t:Bound })({  *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 river  *t:Bound })({  river( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 river  *t:Bound })({  *n:X#1 river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 river  *t:Bound })({  *n:X#1 *n:X#2 river(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 river ?  *t:Bound })({  *n:X#1 *n:X#2 river( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 river in  *t:Bound })({  *n:X#1 *n:X#2 river( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 river runs  *t:Bound })({  *n:X#1 river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 river flow  *t:Bound })({  *n:X#1 river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 river run  *t:Bound })({  *n:X#1 river( riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 river which  *t:Bound })({  traverse_1( river( *n:X#1 *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 city  *t:Bound })({  *n:X#1 *n:X#2 city(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 city in  *t:Bound })({  *n:X#1 *n:X#2 city( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 flow  *t:Bound })({  answer( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 through which  *t:Bound })({  *n:X#1 *n:X#2 traverse_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 with  *t:Bound })({  all *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 with  *t:Bound })({  *n:X#1 *n:X#2 loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 of the  *t:Bound })({  *n:X#1 *n:X#2 loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 elevation  *t:Bound })({  *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 elevation ?  *t:Bound })({  *n:X#1 *n:X#2 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 run  *t:Bound })({  answer( *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 run  *t:Bound })({  *n:X#1 riverid( *n:X#2  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 that borders  *t:Bound })({  *n:X#1 *n:X#2 next_to_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 which have  *t:Bound })({  answer( *n:X#1 *n:X#2 all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 point  *t:Bound })({  *n:X#1 *n:X#2 place(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 point  *t:Bound })({  *n:X#1 *n:X#2 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 point ?  *t:Bound })({  *n:X#1 *n:X#2 place( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 point in  *t:Bound })({  *n:X#1 *n:X#2 place( loc_2(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 smallest  *t:Bound })({  *n:X#1 *n:X#2 smallest(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 smallest state  *t:Bound })({  *n:X#1 *n:X#2 smallest( state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 state  *t:Bound })({  *n:X#1 *n:X#2 state(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 state ?  *t:Bound })({  *n:X#1 *n:X#2 state( all  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 state with  *t:Bound })({  *n:X#1 *n:X#2 state( loc_1(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 the capital  *t:Bound })({  all *n:X#1 *n:X#2 capital(  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 the capital  *t:Bound })({  *n:X#2 capital( *n:X#1  }) weight 0.0
*n:Query -> ({ *t:Bound  *n:X#1 the *n:X#2 the lowest  *t:Bound })({  *n:X#1 *n:X#2 lowest(  }) weight 0.0
